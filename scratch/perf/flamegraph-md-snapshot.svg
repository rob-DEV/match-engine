<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1862" onload="init(evt)" viewBox="0 0 1200 1862" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1862" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1845.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1845.00"> </text><svg id="frames" x="10" width="1180" total_samples="48675"><g><title>engine::engine::book::Book::check_for_trades (7 samples, 0.01%)</title><rect x="0.0021%" y="1765" width="0.0144%" height="15" fill="rgb(227,0,7)" fg:x="1" fg:w="7"/><text x="0.2521%" y="1775.50"></text></g><g><title>[[heap]] (16 samples, 0.03%)</title><rect x="0.0000%" y="1781" width="0.0329%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="16"/><text x="0.2500%" y="1791.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (17 samples, 0.03%)</title><rect x="0.0329%" y="1765" width="0.0349%" height="15" fill="rgb(221,193,54)" fg:x="16" fg:w="17"/><text x="0.2829%" y="1775.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.03%)</title><rect x="0.0678%" y="1765" width="0.0308%" height="15" fill="rgb(248,212,6)" fg:x="33" fg:w="15"/><text x="0.3178%" y="1775.50"></text></g><g><title>&lt;itertools::groupbylazy::Groups&lt;K,I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.03%)</title><rect x="0.0678%" y="1749" width="0.0308%" height="15" fill="rgb(208,68,35)" fg:x="33" fg:w="15"/><text x="0.3178%" y="1759.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::pop (7 samples, 0.01%)</title><rect x="0.1150%" y="1765" width="0.0144%" height="15" fill="rgb(232,128,0)" fg:x="56" fg:w="7"/><text x="0.3650%" y="1775.50"></text></g><g><title>[anon] (59 samples, 0.12%)</title><rect x="0.0329%" y="1781" width="0.1212%" height="15" fill="rgb(207,160,47)" fg:x="16" fg:w="59"/><text x="0.2829%" y="1791.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (12 samples, 0.02%)</title><rect x="0.1294%" y="1765" width="0.0247%" height="15" fill="rgb(228,23,34)" fg:x="63" fg:w="12"/><text x="0.3794%" y="1775.50"></text></g><g><title>engine::engine::book::Book::create_book_snapshot::{{closure}} (6 samples, 0.01%)</title><rect x="0.1418%" y="1749" width="0.0123%" height="15" fill="rgb(218,30,26)" fg:x="69" fg:w="6"/><text x="0.3918%" y="1759.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (6 samples, 0.01%)</title><rect x="0.1418%" y="1733" width="0.0123%" height="15" fill="rgb(220,122,19)" fg:x="69" fg:w="6"/><text x="0.3918%" y="1743.50"></text></g><g><title>&lt;itertools::groupbylazy::Group&lt;K,I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.01%)</title><rect x="0.1418%" y="1717" width="0.0123%" height="15" fill="rgb(250,228,42)" fg:x="69" fg:w="6"/><text x="0.3918%" y="1727.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (9 samples, 0.02%)</title><rect x="0.1541%" y="1765" width="0.0185%" height="15" fill="rgb(240,193,28)" fg:x="75" fg:w="9"/><text x="0.4041%" y="1775.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.02%)</title><rect x="0.1726%" y="1765" width="0.0164%" height="15" fill="rgb(216,20,37)" fg:x="84" fg:w="8"/><text x="0.4226%" y="1775.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::pop (48 samples, 0.10%)</title><rect x="0.2157%" y="1765" width="0.0986%" height="15" fill="rgb(206,188,39)" fg:x="105" fg:w="48"/><text x="0.4657%" y="1775.50"></text></g><g><title>engine::engine::book::Book::create_book_snapshot (105 samples, 0.22%)</title><rect x="0.3205%" y="1765" width="0.2157%" height="15" fill="rgb(217,207,13)" fg:x="156" fg:w="105"/><text x="0.5705%" y="1775.50"></text></g><g><title>[unknown] (190 samples, 0.39%)</title><rect x="0.1541%" y="1781" width="0.3903%" height="15" fill="rgb(231,73,38)" fg:x="75" fg:w="190"/><text x="0.4041%" y="1791.50"></text></g><g><title>__irqentry_text_end (5 samples, 0.01%)</title><rect x="0.5444%" y="1781" width="0.0103%" height="15" fill="rgb(225,20,46)" fg:x="265" fg:w="5"/><text x="0.7944%" y="1791.50"></text></g><g><title>asm_exc_page_fault (2,727 samples, 5.60%)</title><rect x="0.5547%" y="1781" width="5.6025%" height="15" fill="rgb(210,31,41)" fg:x="270" fg:w="2727"/><text x="0.8047%" y="1791.50">asm_exc..</text></g><g><title>__GI___libc_free (11 samples, 0.02%)</title><rect x="6.2167%" y="1461" width="0.0226%" height="15" fill="rgb(221,200,47)" fg:x="3026" fg:w="11"/><text x="6.4667%" y="1471.50"></text></g><g><title>_int_free (8 samples, 0.02%)</title><rect x="6.2229%" y="1445" width="0.0164%" height="15" fill="rgb(226,26,5)" fg:x="3029" fg:w="8"/><text x="6.4729%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;common::message::MarketDataEntry&gt;&gt; (19 samples, 0.04%)</title><rect x="6.2065%" y="1541" width="0.0390%" height="15" fill="rgb(249,33,26)" fg:x="3021" fg:w="19"/><text x="6.4565%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;common::message::MarketDataEntry&gt;&gt; (19 samples, 0.04%)</title><rect x="6.2065%" y="1525" width="0.0390%" height="15" fill="rgb(235,183,28)" fg:x="3021" fg:w="19"/><text x="6.4565%" y="1535.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.04%)</title><rect x="6.2065%" y="1509" width="0.0390%" height="15" fill="rgb(221,5,38)" fg:x="3021" fg:w="19"/><text x="6.4565%" y="1519.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (14 samples, 0.03%)</title><rect x="6.2167%" y="1493" width="0.0288%" height="15" fill="rgb(247,18,42)" fg:x="3026" fg:w="14"/><text x="6.4667%" y="1503.50"></text></g><g><title>alloc::alloc::dealloc (14 samples, 0.03%)</title><rect x="6.2167%" y="1477" width="0.0288%" height="15" fill="rgb(241,131,45)" fg:x="3026" fg:w="14"/><text x="6.4667%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;common::message::MarketDataFullSnapshot&gt;&gt; (22 samples, 0.05%)</title><rect x="6.2455%" y="1541" width="0.0452%" height="15" fill="rgb(249,31,29)" fg:x="3040" fg:w="22"/><text x="6.4955%" y="1551.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.05%)</title><rect x="6.2455%" y="1525" width="0.0452%" height="15" fill="rgb(225,111,53)" fg:x="3040" fg:w="22"/><text x="6.4955%" y="1535.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::unlock (20 samples, 0.04%)</title><rect x="6.2496%" y="1509" width="0.0411%" height="15" fill="rgb(238,160,17)" fg:x="3042" fg:w="20"/><text x="6.4996%" y="1519.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (20 samples, 0.04%)</title><rect x="6.2496%" y="1493" width="0.0411%" height="15" fill="rgb(214,148,48)" fg:x="3042" fg:w="20"/><text x="6.4996%" y="1503.50"></text></g><g><title>core::sync::atomic::atomic_swap (20 samples, 0.04%)</title><rect x="6.2496%" y="1477" width="0.0411%" height="15" fill="rgb(232,36,49)" fg:x="3042" fg:w="20"/><text x="6.4996%" y="1487.50"></text></g><g><title>std::sync::poison::Flag::done (5 samples, 0.01%)</title><rect x="6.2907%" y="1509" width="0.0103%" height="15" fill="rgb(209,103,24)" fg:x="3062" fg:w="5"/><text x="6.5407%" y="1519.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (24 samples, 0.05%)</title><rect x="6.3010%" y="1493" width="0.0493%" height="15" fill="rgb(229,88,8)" fg:x="3067" fg:w="24"/><text x="6.5510%" y="1503.50"></text></g><g><title>core::sync::atomic::atomic_swap (24 samples, 0.05%)</title><rect x="6.3010%" y="1477" width="0.0493%" height="15" fill="rgb(213,181,19)" fg:x="3067" fg:w="24"/><text x="6.5510%" y="1487.50"></text></g><g><title>_raw_spin_lock (6 samples, 0.01%)</title><rect x="6.4551%" y="1365" width="0.0123%" height="15" fill="rgb(254,191,54)" fg:x="3142" fg:w="6"/><text x="6.7051%" y="1375.50"></text></g><g><title>native_queued_spin_lock_slowpath (5 samples, 0.01%)</title><rect x="6.4571%" y="1349" width="0.0103%" height="15" fill="rgb(241,83,37)" fg:x="3143" fg:w="5"/><text x="6.7071%" y="1359.50"></text></g><g><title>select_task_rq_fair (12 samples, 0.02%)</title><rect x="6.4735%" y="1365" width="0.0247%" height="15" fill="rgb(233,36,39)" fg:x="3151" fg:w="12"/><text x="6.7235%" y="1375.50"></text></g><g><title>enqueue_entity (21 samples, 0.04%)</title><rect x="6.5270%" y="1333" width="0.0431%" height="15" fill="rgb(226,3,54)" fg:x="3177" fg:w="21"/><text x="6.7770%" y="1343.50"></text></g><g><title>update_load_avg (5 samples, 0.01%)</title><rect x="6.5598%" y="1317" width="0.0103%" height="15" fill="rgb(245,192,40)" fg:x="3193" fg:w="5"/><text x="6.8098%" y="1327.50"></text></g><g><title>reweight_entity (8 samples, 0.02%)</title><rect x="6.5701%" y="1333" width="0.0164%" height="15" fill="rgb(238,167,29)" fg:x="3198" fg:w="8"/><text x="6.8201%" y="1343.50"></text></g><g><title>update_curr (5 samples, 0.01%)</title><rect x="6.5763%" y="1317" width="0.0103%" height="15" fill="rgb(232,182,51)" fg:x="3201" fg:w="5"/><text x="6.8263%" y="1327.50"></text></g><g><title>__calc_delta (5 samples, 0.01%)</title><rect x="6.5763%" y="1301" width="0.0103%" height="15" fill="rgb(231,60,39)" fg:x="3201" fg:w="5"/><text x="6.8263%" y="1311.50"></text></g><g><title>enqueue_task_fair (54 samples, 0.11%)</title><rect x="6.5064%" y="1349" width="0.1109%" height="15" fill="rgb(208,69,12)" fg:x="3167" fg:w="54"/><text x="6.7564%" y="1359.50"></text></g><g><title>update_load_avg (12 samples, 0.02%)</title><rect x="6.5927%" y="1333" width="0.0247%" height="15" fill="rgb(235,93,37)" fg:x="3209" fg:w="12"/><text x="6.8427%" y="1343.50"></text></g><g><title>psi_group_change (14 samples, 0.03%)</title><rect x="6.6215%" y="1333" width="0.0288%" height="15" fill="rgb(213,116,39)" fg:x="3223" fg:w="14"/><text x="6.8715%" y="1343.50"></text></g><g><title>ttwu_do_activate (72 samples, 0.15%)</title><rect x="6.5044%" y="1365" width="0.1479%" height="15" fill="rgb(222,207,29)" fg:x="3166" fg:w="72"/><text x="6.7544%" y="1375.50"></text></g><g><title>psi_task_change (17 samples, 0.03%)</title><rect x="6.6174%" y="1349" width="0.0349%" height="15" fill="rgb(206,96,30)" fg:x="3221" fg:w="17"/><text x="6.8674%" y="1359.50"></text></g><g><title>ttwu_do_wakeup (5 samples, 0.01%)</title><rect x="6.6523%" y="1365" width="0.0103%" height="15" fill="rgb(218,138,4)" fg:x="3238" fg:w="5"/><text x="6.9023%" y="1375.50"></text></g><g><title>check_preempt_curr (5 samples, 0.01%)</title><rect x="6.6523%" y="1349" width="0.0103%" height="15" fill="rgb(250,191,14)" fg:x="3238" fg:w="5"/><text x="6.9023%" y="1359.50"></text></g><g><title>check_preempt_wakeup (5 samples, 0.01%)</title><rect x="6.6523%" y="1333" width="0.0103%" height="15" fill="rgb(239,60,40)" fg:x="3238" fg:w="5"/><text x="6.9023%" y="1343.50"></text></g><g><title>__x64_sys_futex (135 samples, 0.28%)</title><rect x="6.3934%" y="1445" width="0.2773%" height="15" fill="rgb(206,27,48)" fg:x="3112" fg:w="135"/><text x="6.6434%" y="1455.50"></text></g><g><title>do_futex (129 samples, 0.27%)</title><rect x="6.4058%" y="1429" width="0.2650%" height="15" fill="rgb(225,35,8)" fg:x="3118" fg:w="129"/><text x="6.6558%" y="1439.50"></text></g><g><title>futex_wake (127 samples, 0.26%)</title><rect x="6.4099%" y="1413" width="0.2609%" height="15" fill="rgb(250,213,24)" fg:x="3120" fg:w="127"/><text x="6.6599%" y="1423.50"></text></g><g><title>wake_up_q (109 samples, 0.22%)</title><rect x="6.4468%" y="1397" width="0.2239%" height="15" fill="rgb(247,123,22)" fg:x="3138" fg:w="109"/><text x="6.6968%" y="1407.50"></text></g><g><title>try_to_wake_up (109 samples, 0.22%)</title><rect x="6.4468%" y="1381" width="0.2239%" height="15" fill="rgb(231,138,38)" fg:x="3138" fg:w="109"/><text x="6.6968%" y="1391.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (149 samples, 0.31%)</title><rect x="6.3770%" y="1477" width="0.3061%" height="15" fill="rgb(231,145,46)" fg:x="3104" fg:w="149"/><text x="6.6270%" y="1487.50"></text></g><g><title>do_syscall_64 (143 samples, 0.29%)</title><rect x="6.3893%" y="1461" width="0.2938%" height="15" fill="rgb(251,118,11)" fg:x="3110" fg:w="143"/><text x="6.6393%" y="1471.50"></text></g><g><title>syscall_exit_to_user_mode (5 samples, 0.01%)</title><rect x="6.6728%" y="1445" width="0.0103%" height="15" fill="rgb(217,147,25)" fg:x="3248" fg:w="5"/><text x="6.9228%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;engine::engine::book::Book&gt;&gt; (206 samples, 0.42%)</title><rect x="6.2907%" y="1541" width="0.4232%" height="15" fill="rgb(247,81,37)" fg:x="3062" fg:w="206"/><text x="6.5407%" y="1551.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (206 samples, 0.42%)</title><rect x="6.2907%" y="1525" width="0.4232%" height="15" fill="rgb(209,12,38)" fg:x="3062" fg:w="206"/><text x="6.5407%" y="1535.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::unlock (201 samples, 0.41%)</title><rect x="6.3010%" y="1509" width="0.4129%" height="15" fill="rgb(227,1,9)" fg:x="3067" fg:w="201"/><text x="6.5510%" y="1519.50"></text></g><g><title>syscall (171 samples, 0.35%)</title><rect x="6.3626%" y="1493" width="0.3513%" height="15" fill="rgb(248,47,43)" fg:x="3097" fg:w="171"/><text x="6.6126%" y="1503.50"></text></g><g><title>syscall_return_via_sysret (13 samples, 0.03%)</title><rect x="6.6872%" y="1477" width="0.0267%" height="15" fill="rgb(221,10,30)" fg:x="3255" fg:w="13"/><text x="6.9372%" y="1487.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::sift_up (6 samples, 0.01%)</title><rect x="6.7365%" y="1461" width="0.0123%" height="15" fill="rgb(210,229,1)" fg:x="3279" fg:w="6"/><text x="6.9865%" y="1471.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (24 samples, 0.05%)</title><rect x="6.7530%" y="1445" width="0.0493%" height="15" fill="rgb(222,148,37)" fg:x="3287" fg:w="24"/><text x="7.0030%" y="1455.50"></text></g><g><title>alloc::collections::binary_heap::Hole&lt;T&gt;::move_to (25 samples, 0.05%)</title><rect x="6.7530%" y="1461" width="0.0514%" height="15" fill="rgb(234,67,33)" fg:x="3287" fg:w="25"/><text x="7.0030%" y="1471.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::sift_down_to_bottom (70 samples, 0.14%)</title><rect x="6.7262%" y="1477" width="0.1438%" height="15" fill="rgb(247,98,35)" fg:x="3274" fg:w="70"/><text x="6.9762%" y="1487.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::le (29 samples, 0.06%)</title><rect x="6.8105%" y="1461" width="0.0596%" height="15" fill="rgb(247,138,52)" fg:x="3315" fg:w="29"/><text x="7.0605%" y="1471.50"></text></g><g><title>core::cmp::PartialOrd::le (5 samples, 0.01%)</title><rect x="6.8598%" y="1445" width="0.0103%" height="15" fill="rgb(213,79,30)" fg:x="3339" fg:w="5"/><text x="7.1098%" y="1455.50"></text></g><g><title>&lt;engine::domain::order::Order as core::cmp::PartialOrd&gt;::partial_cmp (5 samples, 0.01%)</title><rect x="6.8598%" y="1429" width="0.0103%" height="15" fill="rgb(246,177,23)" fg:x="3339" fg:w="5"/><text x="7.1098%" y="1439.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::pop (73 samples, 0.15%)</title><rect x="6.7221%" y="1525" width="0.1500%" height="15" fill="rgb(230,62,27)" fg:x="3272" fg:w="73"/><text x="6.9721%" y="1535.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (72 samples, 0.15%)</title><rect x="6.7242%" y="1509" width="0.1479%" height="15" fill="rgb(216,154,8)" fg:x="3273" fg:w="72"/><text x="6.9742%" y="1519.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::pop::{{closure}} (71 samples, 0.15%)</title><rect x="6.7262%" y="1493" width="0.1459%" height="15" fill="rgb(244,35,45)" fg:x="3274" fg:w="71"/><text x="6.9762%" y="1503.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::sift_up (13 samples, 0.03%)</title><rect x="6.8721%" y="1493" width="0.0267%" height="15" fill="rgb(251,115,12)" fg:x="3345" fg:w="13"/><text x="7.1221%" y="1503.50"></text></g><g><title>engine::engine::book::Book::apply_order (17 samples, 0.03%)</title><rect x="6.8721%" y="1525" width="0.0349%" height="15" fill="rgb(240,54,50)" fg:x="3345" fg:w="17"/><text x="7.1221%" y="1535.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::push (17 samples, 0.03%)</title><rect x="6.8721%" y="1509" width="0.0349%" height="15" fill="rgb(233,84,52)" fg:x="3345" fg:w="17"/><text x="7.1221%" y="1519.50"></text></g><g><title>engine::engine::book::Book::check_for_trades (98 samples, 0.20%)</title><rect x="6.7139%" y="1541" width="0.2013%" height="15" fill="rgb(207,117,47)" fg:x="3268" fg:w="98"/><text x="6.9639%" y="1551.50"></text></g><g><title>malloc_consolidate (7 samples, 0.01%)</title><rect x="8.4931%" y="1317" width="0.0144%" height="15" fill="rgb(249,43,39)" fg:x="4134" fg:w="7"/><text x="8.7431%" y="1327.50"></text></g><g><title>__irqentry_text_end (16 samples, 0.03%)</title><rect x="8.5177%" y="1301" width="0.0329%" height="15" fill="rgb(209,38,44)" fg:x="4146" fg:w="16"/><text x="8.7677%" y="1311.50"></text></g><g><title>__handle_mm_fault (32 samples, 0.07%)</title><rect x="8.5526%" y="1237" width="0.0657%" height="15" fill="rgb(236,212,23)" fg:x="4163" fg:w="32"/><text x="8.8026%" y="1247.50"></text></g><g><title>vma_alloc_folio (13 samples, 0.03%)</title><rect x="8.5917%" y="1221" width="0.0267%" height="15" fill="rgb(242,79,21)" fg:x="4182" fg:w="13"/><text x="8.8417%" y="1231.50"></text></g><g><title>__folio_alloc (12 samples, 0.02%)</title><rect x="8.5937%" y="1205" width="0.0247%" height="15" fill="rgb(211,96,35)" fg:x="4183" fg:w="12"/><text x="8.8437%" y="1215.50"></text></g><g><title>__alloc_pages (12 samples, 0.02%)</title><rect x="8.5937%" y="1189" width="0.0247%" height="15" fill="rgb(253,215,40)" fg:x="4183" fg:w="12"/><text x="8.8437%" y="1199.50"></text></g><g><title>get_page_from_freelist (8 samples, 0.02%)</title><rect x="8.6020%" y="1173" width="0.0164%" height="15" fill="rgb(211,81,21)" fg:x="4187" fg:w="8"/><text x="8.8520%" y="1183.50"></text></g><g><title>clear_page_erms (6 samples, 0.01%)</title><rect x="8.6061%" y="1157" width="0.0123%" height="15" fill="rgb(208,190,38)" fg:x="4189" fg:w="6"/><text x="8.8561%" y="1167.50"></text></g><g><title>handle_mm_fault (36 samples, 0.07%)</title><rect x="8.5506%" y="1253" width="0.0740%" height="15" fill="rgb(235,213,38)" fg:x="4162" fg:w="36"/><text x="8.8006%" y="1263.50"></text></g><g><title>lock_mm_and_find_vma (5 samples, 0.01%)</title><rect x="8.6246%" y="1253" width="0.0103%" height="15" fill="rgb(237,122,38)" fg:x="4198" fg:w="5"/><text x="8.8746%" y="1263.50"></text></g><g><title>find_vma (5 samples, 0.01%)</title><rect x="8.6246%" y="1237" width="0.0103%" height="15" fill="rgb(244,218,35)" fg:x="4198" fg:w="5"/><text x="8.8746%" y="1247.50"></text></g><g><title>mt_find (5 samples, 0.01%)</title><rect x="8.6246%" y="1221" width="0.0103%" height="15" fill="rgb(240,68,47)" fg:x="4198" fg:w="5"/><text x="8.8746%" y="1231.50"></text></g><g><title>asm_exc_page_fault (44 samples, 0.09%)</title><rect x="8.5506%" y="1301" width="0.0904%" height="15" fill="rgb(210,16,53)" fg:x="4162" fg:w="44"/><text x="8.8006%" y="1311.50"></text></g><g><title>exc_page_fault (44 samples, 0.09%)</title><rect x="8.5506%" y="1285" width="0.0904%" height="15" fill="rgb(235,124,12)" fg:x="4162" fg:w="44"/><text x="8.8006%" y="1295.50"></text></g><g><title>do_user_addr_fault (44 samples, 0.09%)</title><rect x="8.5506%" y="1269" width="0.0904%" height="15" fill="rgb(224,169,11)" fg:x="4162" fg:w="44"/><text x="8.8006%" y="1279.50"></text></g><g><title>grow_heap (5 samples, 0.01%)</title><rect x="8.6471%" y="1301" width="0.0103%" height="15" fill="rgb(250,166,2)" fg:x="4209" fg:w="5"/><text x="8.8971%" y="1311.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (8 samples, 0.02%)</title><rect x="8.6595%" y="1253" width="0.0164%" height="15" fill="rgb(242,216,29)" fg:x="4215" fg:w="8"/><text x="8.9095%" y="1263.50"></text></g><g><title>do_syscall_64 (8 samples, 0.02%)</title><rect x="8.6595%" y="1237" width="0.0164%" height="15" fill="rgb(230,116,27)" fg:x="4215" fg:w="8"/><text x="8.9095%" y="1247.50"></text></g><g><title>vm_mmap_pgoff (8 samples, 0.02%)</title><rect x="8.6595%" y="1221" width="0.0164%" height="15" fill="rgb(228,99,48)" fg:x="4215" fg:w="8"/><text x="8.9095%" y="1231.50"></text></g><g><title>do_mmap (8 samples, 0.02%)</title><rect x="8.6595%" y="1205" width="0.0164%" height="15" fill="rgb(253,11,6)" fg:x="4215" fg:w="8"/><text x="8.9095%" y="1215.50"></text></g><g><title>mmap_region (6 samples, 0.01%)</title><rect x="8.6636%" y="1189" width="0.0123%" height="15" fill="rgb(247,143,39)" fg:x="4217" fg:w="6"/><text x="8.9136%" y="1199.50"></text></g><g><title>__GI___mmap64 (9 samples, 0.02%)</title><rect x="8.6595%" y="1285" width="0.0185%" height="15" fill="rgb(236,97,10)" fg:x="4215" fg:w="9"/><text x="8.9095%" y="1295.50"></text></g><g><title>__GI___mmap64 (9 samples, 0.02%)</title><rect x="8.6595%" y="1269" width="0.0185%" height="15" fill="rgb(233,208,19)" fg:x="4215" fg:w="9"/><text x="8.9095%" y="1279.50"></text></g><g><title>__GI___libc_malloc (117 samples, 0.24%)</title><rect x="8.4479%" y="1349" width="0.2404%" height="15" fill="rgb(216,164,2)" fg:x="4112" fg:w="117"/><text x="8.6979%" y="1359.50"></text></g><g><title>_int_malloc (108 samples, 0.22%)</title><rect x="8.4664%" y="1333" width="0.2219%" height="15" fill="rgb(220,129,5)" fg:x="4121" fg:w="108"/><text x="8.7164%" y="1343.50"></text></g><g><title>sysmalloc (88 samples, 0.18%)</title><rect x="8.5074%" y="1317" width="0.1808%" height="15" fill="rgb(242,17,10)" fg:x="4141" fg:w="88"/><text x="8.7574%" y="1327.50"></text></g><g><title>sysmalloc_mmap (14 samples, 0.03%)</title><rect x="8.6595%" y="1301" width="0.0288%" height="15" fill="rgb(242,107,0)" fg:x="4215" fg:w="14"/><text x="8.9095%" y="1311.50"></text></g><g><title>asm_exc_page_fault (5 samples, 0.01%)</title><rect x="8.6780%" y="1285" width="0.0103%" height="15" fill="rgb(251,28,31)" fg:x="4224" fg:w="5"/><text x="8.9280%" y="1295.50"></text></g><g><title>exc_page_fault (5 samples, 0.01%)</title><rect x="8.6780%" y="1269" width="0.0103%" height="15" fill="rgb(233,223,10)" fg:x="4224" fg:w="5"/><text x="8.9280%" y="1279.50"></text></g><g><title>do_user_addr_fault (5 samples, 0.01%)</title><rect x="8.6780%" y="1253" width="0.0103%" height="15" fill="rgb(215,21,27)" fg:x="4224" fg:w="5"/><text x="8.9280%" y="1263.50"></text></g><g><title>handle_mm_fault (5 samples, 0.01%)</title><rect x="8.6780%" y="1237" width="0.0103%" height="15" fill="rgb(232,23,21)" fg:x="4224" fg:w="5"/><text x="8.9280%" y="1247.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (128 samples, 0.26%)</title><rect x="8.4479%" y="1445" width="0.2630%" height="15" fill="rgb(244,5,23)" fg:x="4112" fg:w="128"/><text x="8.6979%" y="1455.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (128 samples, 0.26%)</title><rect x="8.4479%" y="1429" width="0.2630%" height="15" fill="rgb(226,81,46)" fg:x="4112" fg:w="128"/><text x="8.6979%" y="1439.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (128 samples, 0.26%)</title><rect x="8.4479%" y="1413" width="0.2630%" height="15" fill="rgb(247,70,30)" fg:x="4112" fg:w="128"/><text x="8.6979%" y="1423.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (128 samples, 0.26%)</title><rect x="8.4479%" y="1397" width="0.2630%" height="15" fill="rgb(212,68,19)" fg:x="4112" fg:w="128"/><text x="8.6979%" y="1407.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (128 samples, 0.26%)</title><rect x="8.4479%" y="1381" width="0.2630%" height="15" fill="rgb(240,187,13)" fg:x="4112" fg:w="128"/><text x="8.6979%" y="1391.50"></text></g><g><title>alloc::alloc::alloc (128 samples, 0.26%)</title><rect x="8.4479%" y="1365" width="0.2630%" height="15" fill="rgb(223,113,26)" fg:x="4112" fg:w="128"/><text x="8.6979%" y="1375.50"></text></g><g><title>__memcpy_avx_unaligned_erms (11 samples, 0.02%)</title><rect x="8.6882%" y="1349" width="0.0226%" height="15" fill="rgb(206,192,2)" fg:x="4229" fg:w="11"/><text x="8.9382%" y="1359.50"></text></g><g><title>error_entry (11 samples, 0.02%)</title><rect x="8.6882%" y="1333" width="0.0226%" height="15" fill="rgb(241,108,4)" fg:x="4229" fg:w="11"/><text x="8.9382%" y="1343.50"></text></g><g><title>__GI___libc_malloc (11 samples, 0.02%)</title><rect x="8.7252%" y="1413" width="0.0226%" height="15" fill="rgb(247,173,49)" fg:x="4247" fg:w="11"/><text x="8.9752%" y="1423.50"></text></g><g><title>_int_malloc (11 samples, 0.02%)</title><rect x="8.7252%" y="1397" width="0.0226%" height="15" fill="rgb(224,114,35)" fg:x="4247" fg:w="11"/><text x="8.9752%" y="1407.50"></text></g><g><title>sysmalloc (11 samples, 0.02%)</title><rect x="8.7252%" y="1381" width="0.0226%" height="15" fill="rgb(245,159,27)" fg:x="4247" fg:w="11"/><text x="8.9752%" y="1391.50"></text></g><g><title>error_entry (10 samples, 0.02%)</title><rect x="8.7273%" y="1365" width="0.0205%" height="15" fill="rgb(245,172,44)" fg:x="4248" fg:w="10"/><text x="8.9773%" y="1375.50"></text></g><g><title>__irqentry_text_end (1,214 samples, 2.49%)</title><rect x="15.6466%" y="1397" width="2.4941%" height="15" fill="rgb(236,23,11)" fg:x="7616" fg:w="1214"/><text x="15.8966%" y="1407.50">__..</text></g><g><title>error_entry (8 samples, 0.02%)</title><rect x="18.3955%" y="1381" width="0.0164%" height="15" fill="rgb(205,117,38)" fg:x="8954" fg:w="8"/><text x="18.6455%" y="1391.50"></text></g><g><title>__hrtimer_run_queues (8 samples, 0.02%)</title><rect x="18.7838%" y="1285" width="0.0164%" height="15" fill="rgb(237,72,25)" fg:x="9143" fg:w="8"/><text x="19.0338%" y="1295.50"></text></g><g><title>tick_sched_timer (7 samples, 0.01%)</title><rect x="18.7858%" y="1269" width="0.0144%" height="15" fill="rgb(244,70,9)" fg:x="9144" fg:w="7"/><text x="19.0358%" y="1279.50"></text></g><g><title>tick_sched_handle (7 samples, 0.01%)</title><rect x="18.7858%" y="1253" width="0.0144%" height="15" fill="rgb(217,125,39)" fg:x="9144" fg:w="7"/><text x="19.0358%" y="1263.50"></text></g><g><title>update_process_times (7 samples, 0.01%)</title><rect x="18.7858%" y="1237" width="0.0144%" height="15" fill="rgb(235,36,10)" fg:x="9144" fg:w="7"/><text x="19.0358%" y="1247.50"></text></g><g><title>scheduler_tick (7 samples, 0.01%)</title><rect x="18.7858%" y="1221" width="0.0144%" height="15" fill="rgb(251,123,47)" fg:x="9144" fg:w="7"/><text x="19.0358%" y="1231.50"></text></g><g><title>task_tick_fair (7 samples, 0.01%)</title><rect x="18.7858%" y="1205" width="0.0144%" height="15" fill="rgb(221,13,13)" fg:x="9144" fg:w="7"/><text x="19.0358%" y="1215.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (16 samples, 0.03%)</title><rect x="18.7694%" y="1349" width="0.0329%" height="15" fill="rgb(238,131,9)" fg:x="9136" fg:w="16"/><text x="19.0194%" y="1359.50"></text></g><g><title>sysvec_apic_timer_interrupt (15 samples, 0.03%)</title><rect x="18.7714%" y="1333" width="0.0308%" height="15" fill="rgb(211,50,8)" fg:x="9137" fg:w="15"/><text x="19.0214%" y="1343.50"></text></g><g><title>__sysvec_apic_timer_interrupt (10 samples, 0.02%)</title><rect x="18.7817%" y="1317" width="0.0205%" height="15" fill="rgb(245,182,24)" fg:x="9142" fg:w="10"/><text x="19.0317%" y="1327.50"></text></g><g><title>hrtimer_interrupt (10 samples, 0.02%)</title><rect x="18.7817%" y="1301" width="0.0205%" height="15" fill="rgb(242,14,37)" fg:x="9142" fg:w="10"/><text x="19.0317%" y="1311.50"></text></g><g><title>__rcu_read_lock (21 samples, 0.04%)</title><rect x="20.8197%" y="1285" width="0.0431%" height="15" fill="rgb(246,228,12)" fg:x="10134" fg:w="21"/><text x="21.0697%" y="1295.50"></text></g><g><title>__cgroup_throttle_swaprate (227 samples, 0.47%)</title><rect x="20.4294%" y="1317" width="0.4664%" height="15" fill="rgb(213,55,15)" fg:x="9944" fg:w="227"/><text x="20.6794%" y="1327.50"></text></g><g><title>blk_cgroup_congested (197 samples, 0.40%)</title><rect x="20.4910%" y="1301" width="0.4047%" height="15" fill="rgb(209,9,3)" fg:x="9974" fg:w="197"/><text x="20.7410%" y="1311.50"></text></g><g><title>kthread_blkcg (15 samples, 0.03%)</title><rect x="20.8649%" y="1285" width="0.0308%" height="15" fill="rgb(230,59,30)" fg:x="10156" fg:w="15"/><text x="21.1149%" y="1295.50"></text></g><g><title>__rcu_read_lock (16 samples, 0.03%)</title><rect x="20.9861%" y="1301" width="0.0329%" height="15" fill="rgb(209,121,21)" fg:x="10215" fg:w="16"/><text x="21.2361%" y="1311.50"></text></g><g><title>__rcu_read_unlock (8 samples, 0.02%)</title><rect x="21.0190%" y="1301" width="0.0164%" height="15" fill="rgb(220,109,13)" fg:x="10231" fg:w="8"/><text x="21.2690%" y="1311.50"></text></g><g><title>__count_memcg_events (76 samples, 0.16%)</title><rect x="21.2922%" y="1285" width="0.1561%" height="15" fill="rgb(232,18,1)" fg:x="10364" fg:w="76"/><text x="21.5422%" y="1295.50"></text></g><g><title>cgroup_rstat_updated (26 samples, 0.05%)</title><rect x="21.3950%" y="1269" width="0.0534%" height="15" fill="rgb(215,41,42)" fg:x="10414" fg:w="26"/><text x="21.6450%" y="1279.50"></text></g><g><title>__rcu_read_lock (15 samples, 0.03%)</title><rect x="21.4484%" y="1285" width="0.0308%" height="15" fill="rgb(224,123,36)" fg:x="10440" fg:w="15"/><text x="21.6984%" y="1295.50"></text></g><g><title>__rcu_read_unlock (11 samples, 0.02%)</title><rect x="21.4792%" y="1285" width="0.0226%" height="15" fill="rgb(240,125,3)" fg:x="10455" fg:w="11"/><text x="21.7292%" y="1295.50"></text></g><g><title>memcg_check_events (12 samples, 0.02%)</title><rect x="21.5039%" y="1285" width="0.0247%" height="15" fill="rgb(205,98,50)" fg:x="10467" fg:w="12"/><text x="21.7539%" y="1295.50"></text></g><g><title>charge_memcg (379 samples, 0.78%)</title><rect x="21.0354%" y="1301" width="0.7786%" height="15" fill="rgb(205,185,37)" fg:x="10239" fg:w="379"/><text x="21.2854%" y="1311.50"></text></g><g><title>try_charge_memcg (139 samples, 0.29%)</title><rect x="21.5285%" y="1285" width="0.2856%" height="15" fill="rgb(238,207,15)" fg:x="10479" fg:w="139"/><text x="21.7785%" y="1295.50"></text></g><g><title>page_counter_try_charge (13 samples, 0.03%)</title><rect x="21.7874%" y="1269" width="0.0267%" height="15" fill="rgb(213,199,42)" fg:x="10605" fg:w="13"/><text x="22.0374%" y="1279.50"></text></g><g><title>__rcu_read_lock (25 samples, 0.05%)</title><rect x="22.0277%" y="1285" width="0.0514%" height="15" fill="rgb(235,201,11)" fg:x="10722" fg:w="25"/><text x="22.2777%" y="1295.50"></text></g><g><title>__mem_cgroup_charge (584 samples, 1.20%)</title><rect x="20.8957%" y="1317" width="1.1998%" height="15" fill="rgb(207,46,11)" fg:x="10171" fg:w="584"/><text x="21.1457%" y="1327.50"></text></g><g><title>get_mem_cgroup_from_mm (137 samples, 0.28%)</title><rect x="21.8141%" y="1301" width="0.2815%" height="15" fill="rgb(241,35,35)" fg:x="10618" fg:w="137"/><text x="22.0641%" y="1311.50"></text></g><g><title>__rcu_read_unlock (8 samples, 0.02%)</title><rect x="22.0791%" y="1285" width="0.0164%" height="15" fill="rgb(243,32,47)" fg:x="10747" fg:w="8"/><text x="22.3291%" y="1295.50"></text></g><g><title>__page_set_anon_rmap (57 samples, 0.12%)</title><rect x="22.0955%" y="1317" width="0.1171%" height="15" fill="rgb(247,202,23)" fg:x="10755" fg:w="57"/><text x="22.3455%" y="1327.50"></text></g><g><title>_compound_head (5 samples, 0.01%)</title><rect x="22.2126%" y="1317" width="0.0103%" height="15" fill="rgb(219,102,11)" fg:x="10812" fg:w="5"/><text x="22.4626%" y="1327.50"></text></g><g><title>_raw_spin_lock (76 samples, 0.16%)</title><rect x="22.2229%" y="1317" width="0.1561%" height="15" fill="rgb(243,110,44)" fg:x="10817" fg:w="76"/><text x="22.4729%" y="1327.50"></text></g><g><title>_raw_spin_unlock (10 samples, 0.02%)</title><rect x="22.3790%" y="1317" width="0.0205%" height="15" fill="rgb(222,74,54)" fg:x="10893" fg:w="10"/><text x="22.6290%" y="1327.50"></text></g><g><title>add_mm_counter_fast (5 samples, 0.01%)</title><rect x="22.3996%" y="1317" width="0.0103%" height="15" fill="rgb(216,99,12)" fg:x="10903" fg:w="5"/><text x="22.6496%" y="1327.50"></text></g><g><title>_raw_spin_unlock_irqrestore (7 samples, 0.01%)</title><rect x="22.7406%" y="1285" width="0.0144%" height="15" fill="rgb(226,22,26)" fg:x="11069" fg:w="7"/><text x="22.9906%" y="1295.50"></text></g><g><title>folio_lruvec_lock_irqsave (28 samples, 0.06%)</title><rect x="22.7550%" y="1285" width="0.0575%" height="15" fill="rgb(217,163,10)" fg:x="11076" fg:w="28"/><text x="23.0050%" y="1295.50"></text></g><g><title>_raw_spin_lock_irqsave (14 samples, 0.03%)</title><rect x="22.7838%" y="1269" width="0.0288%" height="15" fill="rgb(213,25,53)" fg:x="11090" fg:w="14"/><text x="23.0338%" y="1279.50"></text></g><g><title>__list_add_valid (28 samples, 0.06%)</title><rect x="23.1926%" y="1269" width="0.0575%" height="15" fill="rgb(252,105,26)" fg:x="11289" fg:w="28"/><text x="23.4426%" y="1279.50"></text></g><g><title>__mod_lruvec_state (58 samples, 0.12%)</title><rect x="23.2501%" y="1269" width="0.1192%" height="15" fill="rgb(220,39,43)" fg:x="11317" fg:w="58"/><text x="23.5001%" y="1279.50"></text></g><g><title>__mod_node_page_state (43 samples, 0.09%)</title><rect x="23.2809%" y="1253" width="0.0883%" height="15" fill="rgb(229,68,48)" fg:x="11332" fg:w="43"/><text x="23.5309%" y="1263.50"></text></g><g><title>__mod_memcg_lruvec_state (49 samples, 0.10%)</title><rect x="23.3693%" y="1269" width="0.1007%" height="15" fill="rgb(252,8,32)" fg:x="11375" fg:w="49"/><text x="23.6193%" y="1279.50"></text></g><g><title>cgroup_rstat_updated (12 samples, 0.02%)</title><rect x="23.4453%" y="1253" width="0.0247%" height="15" fill="rgb(223,20,43)" fg:x="11412" fg:w="12"/><text x="23.6953%" y="1263.50"></text></g><g><title>__mod_zone_page_state (38 samples, 0.08%)</title><rect x="23.4700%" y="1269" width="0.0781%" height="15" fill="rgb(229,81,49)" fg:x="11424" fg:w="38"/><text x="23.7200%" y="1279.50"></text></g><g><title>__rcu_read_unlock (6 samples, 0.01%)</title><rect x="23.5521%" y="1269" width="0.0123%" height="15" fill="rgb(236,28,36)" fg:x="11464" fg:w="6"/><text x="23.8021%" y="1279.50"></text></g><g><title>lru_gen_add_folio (25 samples, 0.05%)</title><rect x="23.5727%" y="1269" width="0.0514%" height="15" fill="rgb(249,185,26)" fg:x="11474" fg:w="25"/><text x="23.8227%" y="1279.50"></text></g><g><title>lru_add_fn (422 samples, 0.87%)</title><rect x="22.8125%" y="1285" width="0.8670%" height="15" fill="rgb(249,174,33)" fg:x="11104" fg:w="422"/><text x="23.0625%" y="1295.50"></text></g><g><title>mem_cgroup_update_lru_size (27 samples, 0.06%)</title><rect x="23.6240%" y="1269" width="0.0555%" height="15" fill="rgb(233,201,37)" fg:x="11499" fg:w="27"/><text x="23.8740%" y="1279.50"></text></g><g><title>folio_add_lru (679 samples, 1.39%)</title><rect x="22.4119%" y="1317" width="1.3950%" height="15" fill="rgb(221,78,26)" fg:x="10909" fg:w="679"/><text x="22.6619%" y="1327.50"></text></g><g><title>folio_batch_move_lru (633 samples, 1.30%)</title><rect x="22.5064%" y="1301" width="1.3005%" height="15" fill="rgb(250,127,30)" fg:x="10955" fg:w="633"/><text x="22.7564%" y="1311.50"></text></g><g><title>release_pages (62 samples, 0.13%)</title><rect x="23.6795%" y="1285" width="0.1274%" height="15" fill="rgb(230,49,44)" fg:x="11526" fg:w="62"/><text x="23.9295%" y="1295.50"></text></g><g><title>p4d_offset (5 samples, 0.01%)</title><rect x="23.8130%" y="1317" width="0.0103%" height="15" fill="rgb(229,67,23)" fg:x="11591" fg:w="5"/><text x="24.0630%" y="1327.50"></text></g><g><title>__mod_lruvec_state (58 samples, 0.12%)</title><rect x="24.0288%" y="1285" width="0.1192%" height="15" fill="rgb(249,83,47)" fg:x="11696" fg:w="58"/><text x="24.2788%" y="1295.50"></text></g><g><title>__mod_node_page_state (47 samples, 0.10%)</title><rect x="24.0514%" y="1269" width="0.0966%" height="15" fill="rgb(215,43,3)" fg:x="11707" fg:w="47"/><text x="24.3014%" y="1279.50"></text></g><g><title>__mod_memcg_lruvec_state (36 samples, 0.07%)</title><rect x="24.1479%" y="1285" width="0.0740%" height="15" fill="rgb(238,154,13)" fg:x="11754" fg:w="36"/><text x="24.3979%" y="1295.50"></text></g><g><title>cgroup_rstat_updated (8 samples, 0.02%)</title><rect x="24.2054%" y="1269" width="0.0164%" height="15" fill="rgb(219,56,2)" fg:x="11782" fg:w="8"/><text x="24.4554%" y="1279.50"></text></g><g><title>__mod_lruvec_page_state (181 samples, 0.37%)</title><rect x="23.8747%" y="1301" width="0.3719%" height="15" fill="rgb(233,0,4)" fg:x="11621" fg:w="181"/><text x="24.1247%" y="1311.50"></text></g><g><title>__rcu_read_lock (12 samples, 0.02%)</title><rect x="24.2219%" y="1285" width="0.0247%" height="15" fill="rgb(235,30,7)" fg:x="11790" fg:w="12"/><text x="24.4719%" y="1295.50"></text></g><g><title>page_add_new_anon_rmap (225 samples, 0.46%)</title><rect x="23.8233%" y="1317" width="0.4622%" height="15" fill="rgb(250,79,13)" fg:x="11596" fg:w="225"/><text x="24.0733%" y="1327.50"></text></g><g><title>__rcu_read_unlock (19 samples, 0.04%)</title><rect x="24.2465%" y="1301" width="0.0390%" height="15" fill="rgb(211,146,34)" fg:x="11802" fg:w="19"/><text x="24.4965%" y="1311.50"></text></g><g><title>pfn_pte (14 samples, 0.03%)</title><rect x="24.2856%" y="1317" width="0.0288%" height="15" fill="rgb(228,22,38)" fg:x="11821" fg:w="14"/><text x="24.5356%" y="1327.50"></text></g><g><title>pmd_page_vaddr (75 samples, 0.15%)</title><rect x="24.3164%" y="1317" width="0.1541%" height="15" fill="rgb(235,168,5)" fg:x="11836" fg:w="75"/><text x="24.5664%" y="1327.50"></text></g><g><title>pmd_val (5 samples, 0.01%)</title><rect x="24.4602%" y="1301" width="0.0103%" height="15" fill="rgb(221,155,16)" fg:x="11906" fg:w="5"/><text x="24.7102%" y="1311.50"></text></g><g><title>pmd_pfn (24 samples, 0.05%)</title><rect x="24.4705%" y="1317" width="0.0493%" height="15" fill="rgb(215,215,53)" fg:x="11911" fg:w="24"/><text x="24.7205%" y="1327.50"></text></g><g><title>pmd_val (5 samples, 0.01%)</title><rect x="24.5095%" y="1301" width="0.0103%" height="15" fill="rgb(223,4,10)" fg:x="11930" fg:w="5"/><text x="24.7595%" y="1311.50"></text></g><g><title>pmd_val (19 samples, 0.04%)</title><rect x="24.5198%" y="1317" width="0.0390%" height="15" fill="rgb(234,103,6)" fg:x="11935" fg:w="19"/><text x="24.7698%" y="1327.50"></text></g><g><title>pud_val (11 samples, 0.02%)</title><rect x="24.5588%" y="1317" width="0.0226%" height="15" fill="rgb(227,97,0)" fg:x="11954" fg:w="11"/><text x="24.8088%" y="1327.50"></text></g><g><title>__next_zones_zonelist (76 samples, 0.16%)</title><rect x="25.1279%" y="1269" width="0.1561%" height="15" fill="rgb(234,150,53)" fg:x="12231" fg:w="76"/><text x="25.3779%" y="1279.50"></text></g><g><title>__list_del_entry_valid (124 samples, 0.25%)</title><rect x="25.6908%" y="1253" width="0.2548%" height="15" fill="rgb(228,201,54)" fg:x="12505" fg:w="124"/><text x="25.9408%" y="1263.50"></text></g><g><title>__next_zones_zonelist (12 samples, 0.02%)</title><rect x="25.9456%" y="1253" width="0.0247%" height="15" fill="rgb(222,22,37)" fg:x="12629" fg:w="12"/><text x="26.1956%" y="1263.50"></text></g><g><title>_raw_spin_trylock (62 samples, 0.13%)</title><rect x="25.9764%" y="1253" width="0.1274%" height="15" fill="rgb(237,53,32)" fg:x="12644" fg:w="62"/><text x="26.2264%" y="1263.50"></text></g><g><title>_raw_spin_unlock (8 samples, 0.02%)</title><rect x="26.1037%" y="1253" width="0.0164%" height="15" fill="rgb(233,25,53)" fg:x="12706" fg:w="8"/><text x="26.3537%" y="1263.50"></text></g><g><title>clear_page_erms (784 samples, 1.61%)</title><rect x="26.1222%" y="1253" width="1.6107%" height="15" fill="rgb(210,40,34)" fg:x="12715" fg:w="784"/><text x="26.3722%" y="1263.50"></text></g><g><title>__list_del_entry_valid (11 samples, 0.02%)</title><rect x="27.7822%" y="1237" width="0.0226%" height="15" fill="rgb(241,220,44)" fg:x="13523" fg:w="11"/><text x="28.0322%" y="1247.50"></text></g><g><title>get_page_from_freelist (1,232 samples, 2.53%)</title><rect x="25.2861%" y="1269" width="2.5311%" height="15" fill="rgb(235,28,35)" fg:x="12308" fg:w="1232"/><text x="25.5361%" y="1279.50">ge..</text></g><g><title>rmqueue_bulk (41 samples, 0.08%)</title><rect x="27.7329%" y="1253" width="0.0842%" height="15" fill="rgb(210,56,17)" fg:x="13499" fg:w="41"/><text x="27.9829%" y="1263.50"></text></g><g><title>check_new_pages (5 samples, 0.01%)</title><rect x="27.8069%" y="1237" width="0.0103%" height="15" fill="rgb(224,130,29)" fg:x="13535" fg:w="5"/><text x="28.0569%" y="1247.50"></text></g><g><title>__folio_alloc (1,475 samples, 3.03%)</title><rect x="24.8115%" y="1301" width="3.0303%" height="15" fill="rgb(235,212,8)" fg:x="12077" fg:w="1475"/><text x="25.0615%" y="1311.50">__f..</text></g><g><title>__alloc_pages (1,459 samples, 3.00%)</title><rect x="24.8444%" y="1285" width="2.9974%" height="15" fill="rgb(223,33,50)" fg:x="12093" fg:w="1459"/><text x="25.0944%" y="1295.50">__a..</text></g><g><title>should_fail_alloc_page (12 samples, 0.02%)</title><rect x="27.8172%" y="1269" width="0.0247%" height="15" fill="rgb(219,149,13)" fg:x="13540" fg:w="12"/><text x="28.0672%" y="1279.50"></text></g><g><title>policy_node (48 samples, 0.10%)</title><rect x="27.8500%" y="1301" width="0.0986%" height="15" fill="rgb(250,156,29)" fg:x="13556" fg:w="48"/><text x="28.1000%" y="1311.50"></text></g><g><title>_find_first_bit (23 samples, 0.05%)</title><rect x="27.9014%" y="1285" width="0.0473%" height="15" fill="rgb(216,193,19)" fg:x="13581" fg:w="23"/><text x="28.1514%" y="1295.50"></text></g><g><title>__handle_mm_fault (4,300 samples, 8.83%)</title><rect x="19.1248%" y="1333" width="8.8341%" height="15" fill="rgb(216,135,14)" fg:x="9309" fg:w="4300"/><text x="19.3748%" y="1343.50">__handle_mm_..</text></g><g><title>vma_alloc_folio (1,640 samples, 3.37%)</title><rect x="24.5896%" y="1317" width="3.3693%" height="15" fill="rgb(241,47,5)" fg:x="11969" fg:w="1640"/><text x="24.8396%" y="1327.50">vma..</text></g><g><title>policy_nodemask (5 samples, 0.01%)</title><rect x="27.9486%" y="1301" width="0.0103%" height="15" fill="rgb(233,42,35)" fg:x="13604" fg:w="5"/><text x="28.1986%" y="1311.50"></text></g><g><title>__rcu_read_lock (21 samples, 0.04%)</title><rect x="27.9589%" y="1333" width="0.0431%" height="15" fill="rgb(231,13,6)" fg:x="13609" fg:w="21"/><text x="28.2089%" y="1343.50"></text></g><g><title>__count_memcg_events (105 samples, 0.22%)</title><rect x="28.0555%" y="1317" width="0.2157%" height="15" fill="rgb(207,181,40)" fg:x="13656" fg:w="105"/><text x="28.3055%" y="1327.50"></text></g><g><title>cgroup_rstat_updated (48 samples, 0.10%)</title><rect x="28.1726%" y="1301" width="0.0986%" height="15" fill="rgb(254,173,49)" fg:x="13713" fg:w="48"/><text x="28.4226%" y="1311.50"></text></g><g><title>count_memcg_events.constprop.0 (130 samples, 0.27%)</title><rect x="28.0062%" y="1333" width="0.2671%" height="15" fill="rgb(221,1,38)" fg:x="13632" fg:w="130"/><text x="28.2562%" y="1343.50"></text></g><g><title>mem_cgroup_from_task (48 samples, 0.10%)</title><rect x="28.2732%" y="1333" width="0.0986%" height="15" fill="rgb(206,124,46)" fg:x="13762" fg:w="48"/><text x="28.5232%" y="1343.50"></text></g><g><title>handle_mm_fault (4,664 samples, 9.58%)</title><rect x="18.8023%" y="1349" width="9.5819%" height="15" fill="rgb(249,21,11)" fg:x="9152" fg:w="4664"/><text x="19.0523%" y="1359.50">handle_mm_fault</text></g><g><title>sync_mm_rss (6 samples, 0.01%)</title><rect x="28.3719%" y="1333" width="0.0123%" height="15" fill="rgb(222,201,40)" fg:x="13810" fg:w="6"/><text x="28.6219%" y="1343.50"></text></g><g><title>__cond_resched (5 samples, 0.01%)</title><rect x="28.5054%" y="1333" width="0.0103%" height="15" fill="rgb(235,61,29)" fg:x="13875" fg:w="5"/><text x="28.7554%" y="1343.50"></text></g><g><title>down_read_trylock (74 samples, 0.15%)</title><rect x="28.5198%" y="1333" width="0.1520%" height="15" fill="rgb(219,207,3)" fg:x="13882" fg:w="74"/><text x="28.7698%" y="1343.50"></text></g><g><title>__rcu_read_lock (17 samples, 0.03%)</title><rect x="28.9266%" y="1301" width="0.0349%" height="15" fill="rgb(222,56,46)" fg:x="14080" fg:w="17"/><text x="29.1766%" y="1311.50"></text></g><g><title>__rcu_read_unlock (27 samples, 0.06%)</title><rect x="28.9615%" y="1301" width="0.0555%" height="15" fill="rgb(239,76,54)" fg:x="14097" fg:w="27"/><text x="29.2115%" y="1311.50"></text></g><g><title>lock_mm_and_find_vma (487 samples, 1.00%)</title><rect x="28.3842%" y="1349" width="1.0005%" height="15" fill="rgb(231,124,27)" fg:x="13816" fg:w="487"/><text x="28.6342%" y="1359.50"></text></g><g><title>find_vma (347 samples, 0.71%)</title><rect x="28.6718%" y="1333" width="0.7129%" height="15" fill="rgb(249,195,6)" fg:x="13956" fg:w="347"/><text x="28.9218%" y="1343.50"></text></g><g><title>mt_find (314 samples, 0.65%)</title><rect x="28.7396%" y="1317" width="0.6451%" height="15" fill="rgb(237,174,47)" fg:x="13989" fg:w="314"/><text x="28.9896%" y="1327.50"></text></g><g><title>mtree_range_walk (178 samples, 0.37%)</title><rect x="29.0190%" y="1301" width="0.3657%" height="15" fill="rgb(206,201,31)" fg:x="14125" fg:w="178"/><text x="29.2690%" y="1311.50"></text></g><g><title>do_user_addr_fault (5,339 samples, 10.97%)</title><rect x="18.5311%" y="1365" width="10.9687%" height="15" fill="rgb(231,57,52)" fg:x="9020" fg:w="5339"/><text x="18.7811%" y="1375.50">do_user_addr_fau..</text></g><g><title>up_read (56 samples, 0.12%)</title><rect x="29.3847%" y="1349" width="0.1150%" height="15" fill="rgb(248,177,22)" fg:x="14303" fg:w="56"/><text x="29.6347%" y="1359.50"></text></g><g><title>exc_page_fault (5,403 samples, 11.10%)</title><rect x="18.4119%" y="1381" width="11.1002%" height="15" fill="rgb(215,211,37)" fg:x="8962" fg:w="5403"/><text x="18.6619%" y="1391.50">exc_page_fault</text></g><g><title>irqentry_enter (6 samples, 0.01%)</title><rect x="29.4997%" y="1365" width="0.0123%" height="15" fill="rgb(241,128,51)" fg:x="14359" fg:w="6"/><text x="29.7497%" y="1375.50"></text></g><g><title>irqentry_exit (6 samples, 0.01%)</title><rect x="29.5121%" y="1381" width="0.0123%" height="15" fill="rgb(227,165,31)" fg:x="14365" fg:w="6"/><text x="29.7621%" y="1391.50"></text></g><g><title>amd_clear_divider (11 samples, 0.02%)</title><rect x="29.6538%" y="1365" width="0.0226%" height="15" fill="rgb(228,167,24)" fg:x="14434" fg:w="11"/><text x="29.9038%" y="1375.50"></text></g><g><title>asm_exc_page_fault (5,698 samples, 11.71%)</title><rect x="18.1489%" y="1397" width="11.7062%" height="15" fill="rgb(228,143,12)" fg:x="8834" fg:w="5698"/><text x="18.3989%" y="1407.50">asm_exc_page_fault</text></g><g><title>irqentry_exit_to_user_mode (161 samples, 0.33%)</title><rect x="29.5244%" y="1381" width="0.3308%" height="15" fill="rgb(249,149,8)" fg:x="14371" fg:w="161"/><text x="29.7744%" y="1391.50"></text></g><g><title>exit_to_user_mode_prepare (87 samples, 0.18%)</title><rect x="29.6764%" y="1365" width="0.1787%" height="15" fill="rgb(243,35,44)" fg:x="14445" fg:w="87"/><text x="29.9264%" y="1375.50"></text></g><g><title>fpregs_assert_state_consistent (24 samples, 0.05%)</title><rect x="29.8059%" y="1349" width="0.0493%" height="15" fill="rgb(246,89,9)" fg:x="14508" fg:w="24"/><text x="30.0559%" y="1359.50"></text></g><g><title>rcu_core (7 samples, 0.01%)</title><rect x="29.8552%" y="1333" width="0.0144%" height="15" fill="rgb(233,213,13)" fg:x="14532" fg:w="7"/><text x="30.1052%" y="1343.50"></text></g><g><title>rcu_do_batch (7 samples, 0.01%)</title><rect x="29.8552%" y="1317" width="0.0144%" height="15" fill="rgb(233,141,41)" fg:x="14532" fg:w="7"/><text x="30.1052%" y="1327.50"></text></g><g><title>__irq_exit_rcu (9 samples, 0.02%)</title><rect x="29.8552%" y="1365" width="0.0185%" height="15" fill="rgb(239,167,4)" fg:x="14532" fg:w="9"/><text x="30.1052%" y="1375.50"></text></g><g><title>__softirqentry_text_start (9 samples, 0.02%)</title><rect x="29.8552%" y="1349" width="0.0185%" height="15" fill="rgb(209,217,16)" fg:x="14532" fg:w="9"/><text x="30.1052%" y="1359.50"></text></g><g><title>tick_sched_timer (5 samples, 0.01%)</title><rect x="29.8737%" y="1317" width="0.0103%" height="15" fill="rgb(219,88,35)" fg:x="14541" fg:w="5"/><text x="30.1237%" y="1327.50"></text></g><g><title>tick_sched_handle (5 samples, 0.01%)</title><rect x="29.8737%" y="1301" width="0.0103%" height="15" fill="rgb(220,193,23)" fg:x="14541" fg:w="5"/><text x="30.1237%" y="1311.50"></text></g><g><title>update_process_times (5 samples, 0.01%)</title><rect x="29.8737%" y="1285" width="0.0103%" height="15" fill="rgb(230,90,52)" fg:x="14541" fg:w="5"/><text x="30.1237%" y="1295.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (15 samples, 0.03%)</title><rect x="29.8552%" y="1397" width="0.0308%" height="15" fill="rgb(252,106,19)" fg:x="14532" fg:w="15"/><text x="30.1052%" y="1407.50"></text></g><g><title>sysvec_apic_timer_interrupt (15 samples, 0.03%)</title><rect x="29.8552%" y="1381" width="0.0308%" height="15" fill="rgb(206,74,20)" fg:x="14532" fg:w="15"/><text x="30.1052%" y="1391.50"></text></g><g><title>__sysvec_apic_timer_interrupt (6 samples, 0.01%)</title><rect x="29.8737%" y="1365" width="0.0123%" height="15" fill="rgb(230,138,44)" fg:x="14541" fg:w="6"/><text x="30.1237%" y="1375.50"></text></g><g><title>hrtimer_interrupt (6 samples, 0.01%)</title><rect x="29.8737%" y="1349" width="0.0123%" height="15" fill="rgb(235,182,43)" fg:x="14541" fg:w="6"/><text x="30.1237%" y="1359.50"></text></g><g><title>__hrtimer_run_queues (6 samples, 0.01%)</title><rect x="29.8737%" y="1333" width="0.0123%" height="15" fill="rgb(242,16,51)" fg:x="14541" fg:w="6"/><text x="30.1237%" y="1343.50"></text></g><g><title>error_entry (1,610 samples, 3.31%)</title><rect x="29.9004%" y="1397" width="3.3077%" height="15" fill="rgb(248,9,4)" fg:x="14554" fg:w="1610"/><text x="30.1504%" y="1407.50">err..</text></g><g><title>sync_regs (477 samples, 0.98%)</title><rect x="32.2280%" y="1381" width="0.9800%" height="15" fill="rgb(210,31,22)" fg:x="15687" fg:w="477"/><text x="32.4780%" y="1391.50"></text></g><g><title>error_return (5 samples, 0.01%)</title><rect x="33.2080%" y="1397" width="0.0103%" height="15" fill="rgb(239,54,39)" fg:x="16164" fg:w="5"/><text x="33.4580%" y="1407.50"></text></g><g><title>&lt;alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt; as core::clone::Clone&gt;::clone (12,068 samples, 24.79%)</title><rect x="8.4273%" y="1525" width="24.7930%" height="15" fill="rgb(230,99,41)" fg:x="4102" fg:w="12068"/><text x="8.6773%" y="1535.50">&lt;alloc::collections::binary_heap::Binary..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (12,061 samples, 24.78%)</title><rect x="8.4417%" y="1509" width="24.7786%" height="15" fill="rgb(253,106,12)" fg:x="4109" fg:w="12061"/><text x="8.6917%" y="1519.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::C..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (12,061 samples, 24.78%)</title><rect x="8.4417%" y="1493" width="24.7786%" height="15" fill="rgb(213,46,41)" fg:x="4109" fg:w="12061"/><text x="8.6917%" y="1503.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (12,061 samples, 24.78%)</title><rect x="8.4417%" y="1477" width="24.7786%" height="15" fill="rgb(215,133,35)" fg:x="4109" fg:w="12061"/><text x="8.6917%" y="1487.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (12,061 samples, 24.78%)</title><rect x="8.4417%" y="1461" width="24.7786%" height="15" fill="rgb(213,28,5)" fg:x="4109" fg:w="12061"/><text x="8.6917%" y="1471.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (11,930 samples, 24.51%)</title><rect x="8.7108%" y="1445" width="24.5095%" height="15" fill="rgb(215,77,49)" fg:x="4240" fg:w="11930"/><text x="8.9608%" y="1455.50">core::ptr::const_ptr::&lt;impl *const T&gt;::..</text></g><g><title>core::intrinsics::copy_nonoverlapping (11,930 samples, 24.51%)</title><rect x="8.7108%" y="1429" width="24.5095%" height="15" fill="rgb(248,100,22)" fg:x="4240" fg:w="11930"/><text x="8.9608%" y="1439.50">core::intrinsics::copy_nonoverlapping</text></g><g><title>__memcpy_avx_unaligned_erms (11,912 samples, 24.47%)</title><rect x="8.7478%" y="1413" width="24.4725%" height="15" fill="rgb(208,67,9)" fg:x="4258" fg:w="11912"/><text x="8.9978%" y="1423.50">__memcpy_avx_unaligned_erms</text></g><g><title>__memset_avx2_unaligned_erms (38 samples, 0.08%)</title><rect x="33.2203%" y="1525" width="0.0781%" height="15" fill="rgb(219,133,21)" fg:x="16170" fg:w="38"/><text x="33.4703%" y="1535.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (197 samples, 0.40%)</title><rect x="33.3046%" y="1509" width="0.4047%" height="15" fill="rgb(246,46,29)" fg:x="16211" fg:w="197"/><text x="33.5546%" y="1519.50"></text></g><g><title>alloc::collections::binary_heap::Hole&lt;T&gt;::get (6 samples, 0.01%)</title><rect x="34.0462%" y="1445" width="0.0123%" height="15" fill="rgb(246,185,52)" fg:x="16572" fg:w="6"/><text x="34.2962%" y="1455.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (6 samples, 0.01%)</title><rect x="34.0462%" y="1429" width="0.0123%" height="15" fill="rgb(252,136,11)" fg:x="16572" fg:w="6"/><text x="34.2962%" y="1439.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (6 samples, 0.01%)</title><rect x="34.0462%" y="1413" width="0.0123%" height="15" fill="rgb(219,138,53)" fg:x="16572" fg:w="6"/><text x="34.2962%" y="1423.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (6 samples, 0.01%)</title><rect x="34.0462%" y="1397" width="0.0123%" height="15" fill="rgb(211,51,23)" fg:x="16572" fg:w="6"/><text x="34.2962%" y="1407.50"></text></g><g><title>alloc::collections::binary_heap::Hole&lt;T&gt;::move_to (6 samples, 0.01%)</title><rect x="34.0586%" y="1445" width="0.0123%" height="15" fill="rgb(247,221,28)" fg:x="16578" fg:w="6"/><text x="34.3086%" y="1455.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::sift_up (35 samples, 0.07%)</title><rect x="34.0380%" y="1461" width="0.0719%" height="15" fill="rgb(251,222,45)" fg:x="16568" fg:w="35"/><text x="34.2880%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::binary_heap::Hole&lt;engine::domain::order::Order&gt;&gt; (13 samples, 0.03%)</title><rect x="34.0832%" y="1445" width="0.0267%" height="15" fill="rgb(217,162,53)" fg:x="16590" fg:w="13"/><text x="34.3332%" y="1455.50"></text></g><g><title>&lt;alloc::collections::binary_heap::Hole&lt;T&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.03%)</title><rect x="34.0832%" y="1429" width="0.0267%" height="15" fill="rgb(229,93,14)" fg:x="16590" fg:w="13"/><text x="34.3332%" y="1439.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (13 samples, 0.03%)</title><rect x="34.0832%" y="1413" width="0.0267%" height="15" fill="rgb(209,67,49)" fg:x="16590" fg:w="13"/><text x="34.3332%" y="1423.50"></text></g><g><title>alloc::collections::binary_heap::Hole&lt;T&gt;::get (20 samples, 0.04%)</title><rect x="34.1099%" y="1461" width="0.0411%" height="15" fill="rgb(213,87,29)" fg:x="16603" fg:w="20"/><text x="34.3599%" y="1471.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (20 samples, 0.04%)</title><rect x="34.1099%" y="1445" width="0.0411%" height="15" fill="rgb(205,151,52)" fg:x="16603" fg:w="20"/><text x="34.3599%" y="1455.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (20 samples, 0.04%)</title><rect x="34.1099%" y="1429" width="0.0411%" height="15" fill="rgb(253,215,39)" fg:x="16603" fg:w="20"/><text x="34.3599%" y="1439.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (20 samples, 0.04%)</title><rect x="34.1099%" y="1413" width="0.0411%" height="15" fill="rgb(221,220,41)" fg:x="16603" fg:w="20"/><text x="34.3599%" y="1423.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (248 samples, 0.51%)</title><rect x="34.1510%" y="1445" width="0.5095%" height="15" fill="rgb(218,133,21)" fg:x="16623" fg:w="248"/><text x="34.4010%" y="1455.50"></text></g><g><title>alloc::collections::binary_heap::Hole&lt;T&gt;::move_to (292 samples, 0.60%)</title><rect x="34.1510%" y="1461" width="0.5999%" height="15" fill="rgb(221,193,43)" fg:x="16623" fg:w="292"/><text x="34.4010%" y="1471.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (44 samples, 0.09%)</title><rect x="34.6605%" y="1445" width="0.0904%" height="15" fill="rgb(240,128,52)" fg:x="16871" fg:w="44"/><text x="34.9105%" y="1455.50"></text></g><g><title>alloc::collections::binary_heap::Hole&lt;T&gt;::new (9 samples, 0.02%)</title><rect x="34.7509%" y="1461" width="0.0185%" height="15" fill="rgb(253,114,12)" fg:x="16915" fg:w="9"/><text x="35.0009%" y="1471.50"></text></g><g><title>core::ptr::read (9 samples, 0.02%)</title><rect x="34.7509%" y="1445" width="0.0185%" height="15" fill="rgb(215,223,47)" fg:x="16915" fg:w="9"/><text x="35.0009%" y="1455.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::le (554 samples, 1.14%)</title><rect x="34.7694%" y="1461" width="1.1382%" height="15" fill="rgb(248,225,23)" fg:x="16924" fg:w="554"/><text x="35.0194%" y="1471.50"></text></g><g><title>core::cmp::PartialOrd::le (102 samples, 0.21%)</title><rect x="35.6980%" y="1445" width="0.2096%" height="15" fill="rgb(250,108,0)" fg:x="17376" fg:w="102"/><text x="35.9480%" y="1455.50"></text></g><g><title>&lt;engine::domain::order::Order as core::cmp::PartialOrd&gt;::partial_cmp (77 samples, 0.16%)</title><rect x="35.7494%" y="1429" width="0.1582%" height="15" fill="rgb(228,208,7)" fg:x="17401" fg:w="77"/><text x="35.9994%" y="1439.50"></text></g><g><title>engine::domain::order::Order::partial_cmp_buy (11 samples, 0.02%)</title><rect x="35.8850%" y="1413" width="0.0226%" height="15" fill="rgb(244,45,10)" fg:x="17467" fg:w="11"/><text x="36.1350%" y="1423.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u32&gt;::cmp (11 samples, 0.02%)</title><rect x="35.8850%" y="1397" width="0.0226%" height="15" fill="rgb(207,125,25)" fg:x="17467" fg:w="11"/><text x="36.1350%" y="1407.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::sift_down_to_bottom (941 samples, 1.93%)</title><rect x="33.9846%" y="1477" width="1.9332%" height="15" fill="rgb(210,195,18)" fg:x="16542" fg:w="941"/><text x="34.2346%" y="1487.50">a..</text></g><g><title>core::mem::drop (5 samples, 0.01%)</title><rect x="35.9076%" y="1461" width="0.0103%" height="15" fill="rgb(249,80,12)" fg:x="17478" fg:w="5"/><text x="36.1576%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::binary_heap::Hole&lt;engine::domain::order::Order&gt;&gt; (5 samples, 0.01%)</title><rect x="35.9076%" y="1445" width="0.0103%" height="15" fill="rgb(221,65,9)" fg:x="17478" fg:w="5"/><text x="36.1576%" y="1455.50"></text></g><g><title>&lt;alloc::collections::binary_heap::Hole&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="35.9076%" y="1429" width="0.0103%" height="15" fill="rgb(235,49,36)" fg:x="17478" fg:w="5"/><text x="36.1576%" y="1439.50"></text></g><g><title>core::ptr::read (11 samples, 0.02%)</title><rect x="35.9178%" y="1445" width="0.0226%" height="15" fill="rgb(225,32,20)" fg:x="17483" fg:w="11"/><text x="36.1678%" y="1455.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::pop (1,290 samples, 2.65%)</title><rect x="33.2984%" y="1525" width="2.6502%" height="15" fill="rgb(215,141,46)" fg:x="16208" fg:w="1290"/><text x="33.5484%" y="1535.50">al..</text></g><g><title>core::option::Option&lt;T&gt;::map (1,090 samples, 2.24%)</title><rect x="33.7093%" y="1509" width="2.2393%" height="15" fill="rgb(250,160,47)" fg:x="16408" fg:w="1090"/><text x="33.9593%" y="1519.50">c..</text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::pop::{{closure}} (957 samples, 1.97%)</title><rect x="33.9825%" y="1493" width="1.9661%" height="15" fill="rgb(216,222,40)" fg:x="16541" fg:w="957"/><text x="34.2325%" y="1503.50">a..</text></g><g><title>core::mem::swap (15 samples, 0.03%)</title><rect x="35.9178%" y="1477" width="0.0308%" height="15" fill="rgb(234,217,39)" fg:x="17483" fg:w="15"/><text x="36.1678%" y="1487.50"></text></g><g><title>core::mem::swap_simple (15 samples, 0.03%)</title><rect x="35.9178%" y="1461" width="0.0308%" height="15" fill="rgb(207,178,40)" fg:x="17483" fg:w="15"/><text x="36.1678%" y="1471.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (5 samples, 0.01%)</title><rect x="35.9486%" y="1525" width="0.0103%" height="15" fill="rgb(221,136,13)" fg:x="17498" fg:w="5"/><text x="36.1986%" y="1535.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (5 samples, 0.01%)</title><rect x="35.9486%" y="1509" width="0.0103%" height="15" fill="rgb(249,199,10)" fg:x="17498" fg:w="5"/><text x="36.1986%" y="1519.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (5 samples, 0.01%)</title><rect x="35.9486%" y="1493" width="0.0103%" height="15" fill="rgb(249,222,13)" fg:x="17498" fg:w="5"/><text x="36.1986%" y="1503.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (5 samples, 0.01%)</title><rect x="35.9856%" y="1397" width="0.0103%" height="15" fill="rgb(244,185,38)" fg:x="17516" fg:w="5"/><text x="36.2356%" y="1407.50"></text></g><g><title>&lt;itertools::groupbylazy::Groups&lt;K,I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (5 samples, 0.01%)</title><rect x="35.9856%" y="1381" width="0.0103%" height="15" fill="rgb(236,202,9)" fg:x="17516" fg:w="5"/><text x="36.2356%" y="1391.50"></text></g><g><title>itertools::groupbylazy::GroupInner&lt;K,I,F&gt;::group_key (5 samples, 0.01%)</title><rect x="35.9856%" y="1365" width="0.0103%" height="15" fill="rgb(250,229,37)" fg:x="17516" fg:w="5"/><text x="36.2356%" y="1375.50"></text></g><g><title>&lt;itertools::groupbylazy::Groups&lt;K,I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.01%)</title><rect x="35.9836%" y="1413" width="0.0144%" height="15" fill="rgb(206,174,23)" fg:x="17515" fg:w="7"/><text x="36.2336%" y="1423.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (5 samples, 0.01%)</title><rect x="36.0431%" y="1317" width="0.0103%" height="15" fill="rgb(211,33,43)" fg:x="17544" fg:w="5"/><text x="36.2931%" y="1327.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (5 samples, 0.01%)</title><rect x="36.0431%" y="1301" width="0.0103%" height="15" fill="rgb(245,58,50)" fg:x="17544" fg:w="5"/><text x="36.2931%" y="1311.50"></text></g><g><title>core::cell::BorrowRefMut::new (5 samples, 0.01%)</title><rect x="36.0431%" y="1285" width="0.0103%" height="15" fill="rgb(244,68,36)" fg:x="17544" fg:w="5"/><text x="36.2931%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefMut&lt;itertools::groupbylazy::GroupInner&lt;u32,core::iter::adapters::take_while::TakeWhile&lt;core::slice::iter::Iter&lt;common::message::MarketDataEntry&gt;,engine::engine::book::Book::create_book_snapshot::{{closure}}&gt;,engine::engine::book::Book::create_book_snapshot::{{closure}}&gt;&gt;&gt; (6 samples, 0.01%)</title><rect x="36.0534%" y="1317" width="0.0123%" height="15" fill="rgb(232,229,15)" fg:x="17549" fg:w="6"/><text x="36.3034%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::BorrowRefMut&gt; (6 samples, 0.01%)</title><rect x="36.0534%" y="1301" width="0.0123%" height="15" fill="rgb(254,30,23)" fg:x="17549" fg:w="6"/><text x="36.3034%" y="1311.50"></text></g><g><title>&lt;core::cell::BorrowRefMut as core::ops::drop::Drop&gt;::drop (6 samples, 0.01%)</title><rect x="36.0534%" y="1285" width="0.0123%" height="15" fill="rgb(235,160,14)" fg:x="17549" fg:w="6"/><text x="36.3034%" y="1295.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (6 samples, 0.01%)</title><rect x="36.0534%" y="1269" width="0.0123%" height="15" fill="rgb(212,155,44)" fg:x="17549" fg:w="6"/><text x="36.3034%" y="1279.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (6 samples, 0.01%)</title><rect x="36.0534%" y="1253" width="0.0123%" height="15" fill="rgb(226,2,50)" fg:x="17549" fg:w="6"/><text x="36.3034%" y="1263.50"></text></g><g><title>core::mem::replace (6 samples, 0.01%)</title><rect x="36.0534%" y="1237" width="0.0123%" height="15" fill="rgb(234,177,6)" fg:x="17549" fg:w="6"/><text x="36.3034%" y="1247.50"></text></g><g><title>core::ptr::write (6 samples, 0.01%)</title><rect x="36.0534%" y="1221" width="0.0123%" height="15" fill="rgb(217,24,9)" fg:x="17549" fg:w="6"/><text x="36.3034%" y="1231.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (5 samples, 0.01%)</title><rect x="36.0924%" y="1285" width="0.0103%" height="15" fill="rgb(220,13,46)" fg:x="17568" fg:w="5"/><text x="36.3424%" y="1295.50"></text></g><g><title>core::mem::replace (5 samples, 0.01%)</title><rect x="36.0924%" y="1269" width="0.0103%" height="15" fill="rgb(239,221,27)" fg:x="17568" fg:w="5"/><text x="36.3424%" y="1279.50"></text></g><g><title>&lt;itertools::groupbylazy::Group&lt;K,I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (37 samples, 0.08%)</title><rect x="36.0431%" y="1349" width="0.0760%" height="15" fill="rgb(222,198,25)" fg:x="17544" fg:w="37"/><text x="36.2931%" y="1359.50"></text></g><g><title>itertools::groupbylazy::GroupBy&lt;K,I,F&gt;::step (37 samples, 0.08%)</title><rect x="36.0431%" y="1333" width="0.0760%" height="15" fill="rgb(211,99,13)" fg:x="17544" fg:w="37"/><text x="36.2931%" y="1343.50"></text></g><g><title>itertools::groupbylazy::GroupInner&lt;K,I,F&gt;::step (26 samples, 0.05%)</title><rect x="36.0657%" y="1317" width="0.0534%" height="15" fill="rgb(232,111,31)" fg:x="17555" fg:w="26"/><text x="36.3157%" y="1327.50"></text></g><g><title>itertools::groupbylazy::GroupInner&lt;K,I,F&gt;::step_current (19 samples, 0.04%)</title><rect x="36.0801%" y="1301" width="0.0390%" height="15" fill="rgb(245,82,37)" fg:x="17562" fg:w="19"/><text x="36.3301%" y="1311.50"></text></g><g><title>itertools::groupbylazy::GroupInner&lt;K,I,F&gt;::next_element (8 samples, 0.02%)</title><rect x="36.1027%" y="1285" width="0.0164%" height="15" fill="rgb(227,149,46)" fg:x="17573" fg:w="8"/><text x="36.3527%" y="1295.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.01%)</title><rect x="36.1048%" y="1269" width="0.0144%" height="15" fill="rgb(218,36,50)" fg:x="17574" fg:w="7"/><text x="36.3548%" y="1279.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (76 samples, 0.16%)</title><rect x="35.9836%" y="1429" width="0.1561%" height="15" fill="rgb(226,80,48)" fg:x="17515" fg:w="76"/><text x="36.2336%" y="1439.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (69 samples, 0.14%)</title><rect x="35.9979%" y="1413" width="0.1418%" height="15" fill="rgb(238,224,15)" fg:x="17522" fg:w="69"/><text x="36.2479%" y="1423.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (68 samples, 0.14%)</title><rect x="36.0000%" y="1397" width="0.1397%" height="15" fill="rgb(241,136,10)" fg:x="17523" fg:w="68"/><text x="36.2500%" y="1407.50"></text></g><g><title>engine::engine::book::Book::create_book_snapshot::{{closure}} (61 samples, 0.13%)</title><rect x="36.0144%" y="1381" width="0.1253%" height="15" fill="rgb(208,32,45)" fg:x="17530" fg:w="61"/><text x="36.2644%" y="1391.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (53 samples, 0.11%)</title><rect x="36.0308%" y="1365" width="0.1089%" height="15" fill="rgb(207,135,9)" fg:x="17538" fg:w="53"/><text x="36.2808%" y="1375.50"></text></g><g><title>engine::engine::book::Book::create_book_snapshot::{{closure}}::{{closure}} (8 samples, 0.02%)</title><rect x="36.1233%" y="1349" width="0.0164%" height="15" fill="rgb(206,86,44)" fg:x="17583" fg:w="8"/><text x="36.3733%" y="1359.50"></text></g><g><title>__GI___libc_realloc (25 samples, 0.05%)</title><rect x="36.1500%" y="1301" width="0.0514%" height="15" fill="rgb(245,177,15)" fg:x="17596" fg:w="25"/><text x="36.4000%" y="1311.50"></text></g><g><title>_int_realloc (22 samples, 0.05%)</title><rect x="36.1561%" y="1285" width="0.0452%" height="15" fill="rgb(206,64,50)" fg:x="17599" fg:w="22"/><text x="36.4061%" y="1295.50"></text></g><g><title>_int_malloc (14 samples, 0.03%)</title><rect x="36.1726%" y="1269" width="0.0288%" height="15" fill="rgb(234,36,40)" fg:x="17607" fg:w="14"/><text x="36.4226%" y="1279.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (28 samples, 0.06%)</title><rect x="36.1500%" y="1349" width="0.0575%" height="15" fill="rgb(213,64,8)" fg:x="17596" fg:w="28"/><text x="36.4000%" y="1359.50"></text></g><g><title>alloc::alloc::Global::grow_impl (28 samples, 0.06%)</title><rect x="36.1500%" y="1333" width="0.0575%" height="15" fill="rgb(210,75,36)" fg:x="17596" fg:w="28"/><text x="36.4000%" y="1343.50"></text></g><g><title>alloc::alloc::realloc (28 samples, 0.06%)</title><rect x="36.1500%" y="1317" width="0.0575%" height="15" fill="rgb(229,88,21)" fg:x="17596" fg:w="28"/><text x="36.4000%" y="1327.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (33 samples, 0.07%)</title><rect x="36.1418%" y="1429" width="0.0678%" height="15" fill="rgb(252,204,47)" fg:x="17592" fg:w="33"/><text x="36.3918%" y="1439.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (33 samples, 0.07%)</title><rect x="36.1418%" y="1413" width="0.0678%" height="15" fill="rgb(208,77,27)" fg:x="17592" fg:w="33"/><text x="36.3918%" y="1423.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (32 samples, 0.07%)</title><rect x="36.1438%" y="1397" width="0.0657%" height="15" fill="rgb(221,76,26)" fg:x="17593" fg:w="32"/><text x="36.3938%" y="1407.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (32 samples, 0.07%)</title><rect x="36.1438%" y="1381" width="0.0657%" height="15" fill="rgb(225,139,18)" fg:x="17593" fg:w="32"/><text x="36.3938%" y="1391.50"></text></g><g><title>alloc::raw_vec::finish_grow (30 samples, 0.06%)</title><rect x="36.1479%" y="1365" width="0.0616%" height="15" fill="rgb(230,137,11)" fg:x="17595" fg:w="30"/><text x="36.3979%" y="1375.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (116 samples, 0.24%)</title><rect x="35.9733%" y="1461" width="0.2383%" height="15" fill="rgb(212,28,1)" fg:x="17510" fg:w="116"/><text x="36.2233%" y="1471.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (116 samples, 0.24%)</title><rect x="35.9733%" y="1445" width="0.2383%" height="15" fill="rgb(248,164,17)" fg:x="17510" fg:w="116"/><text x="36.2233%" y="1455.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (14 samples, 0.03%)</title><rect x="36.2198%" y="1429" width="0.0288%" height="15" fill="rgb(222,171,42)" fg:x="17630" fg:w="14"/><text x="36.4698%" y="1439.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (14 samples, 0.03%)</title><rect x="36.2198%" y="1413" width="0.0288%" height="15" fill="rgb(243,84,45)" fg:x="17630" fg:w="14"/><text x="36.4698%" y="1423.50"></text></g><g><title>core::mem::replace (14 samples, 0.03%)</title><rect x="36.2198%" y="1397" width="0.0288%" height="15" fill="rgb(252,49,23)" fg:x="17630" fg:w="14"/><text x="36.4698%" y="1407.50"></text></g><g><title>core::ptr::write (14 samples, 0.03%)</title><rect x="36.2198%" y="1381" width="0.0288%" height="15" fill="rgb(215,19,7)" fg:x="17630" fg:w="14"/><text x="36.4698%" y="1391.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (5 samples, 0.01%)</title><rect x="36.2486%" y="1429" width="0.0103%" height="15" fill="rgb(238,81,41)" fg:x="17644" fg:w="5"/><text x="36.4986%" y="1439.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (5 samples, 0.01%)</title><rect x="36.2486%" y="1413" width="0.0103%" height="15" fill="rgb(210,199,37)" fg:x="17644" fg:w="5"/><text x="36.4986%" y="1423.50"></text></g><g><title>core::cell::BorrowRefMut::new (5 samples, 0.01%)</title><rect x="36.2486%" y="1397" width="0.0103%" height="15" fill="rgb(244,192,49)" fg:x="17644" fg:w="5"/><text x="36.4986%" y="1407.50"></text></g><g><title>&lt;itertools::groupbylazy::Groups&lt;K,I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (57 samples, 0.12%)</title><rect x="36.2116%" y="1445" width="0.1171%" height="15" fill="rgb(226,211,11)" fg:x="17626" fg:w="57"/><text x="36.4616%" y="1455.50"></text></g><g><title>itertools::groupbylazy::GroupInner&lt;K,I,F&gt;::step (28 samples, 0.06%)</title><rect x="36.2712%" y="1429" width="0.0575%" height="15" fill="rgb(236,162,54)" fg:x="17655" fg:w="28"/><text x="36.5212%" y="1439.50"></text></g><g><title>itertools::groupbylazy::GroupInner&lt;K,I,F&gt;::step_current (19 samples, 0.04%)</title><rect x="36.2897%" y="1413" width="0.0390%" height="15" fill="rgb(220,229,9)" fg:x="17664" fg:w="19"/><text x="36.5397%" y="1423.50"></text></g><g><title>itertools::groupbylazy::GroupInner&lt;K,I,F&gt;::next_element (14 samples, 0.03%)</title><rect x="36.2999%" y="1397" width="0.0288%" height="15" fill="rgb(250,87,22)" fg:x="17669" fg:w="14"/><text x="36.5499%" y="1407.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.02%)</title><rect x="36.3061%" y="1381" width="0.0226%" height="15" fill="rgb(239,43,17)" fg:x="17672" fg:w="11"/><text x="36.5561%" y="1391.50"></text></g><g><title>&lt;itertools::groupbylazy::Group&lt;K,I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.01%)</title><rect x="36.3328%" y="1381" width="0.0144%" height="15" fill="rgb(231,177,25)" fg:x="17685" fg:w="7"/><text x="36.5828%" y="1391.50"></text></g><g><title>itertools::groupbylazy::GroupBy&lt;K,I,F&gt;::step (6 samples, 0.01%)</title><rect x="36.3349%" y="1365" width="0.0123%" height="15" fill="rgb(219,179,1)" fg:x="17686" fg:w="6"/><text x="36.5849%" y="1375.50"></text></g><g><title>itertools::groupbylazy::GroupInner&lt;K,I,F&gt;::step (5 samples, 0.01%)</title><rect x="36.3369%" y="1349" width="0.0103%" height="15" fill="rgb(238,219,53)" fg:x="17687" fg:w="5"/><text x="36.5869%" y="1359.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (69 samples, 0.14%)</title><rect x="36.2116%" y="1461" width="0.1418%" height="15" fill="rgb(232,167,36)" fg:x="17626" fg:w="69"/><text x="36.4616%" y="1471.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (12 samples, 0.02%)</title><rect x="36.3287%" y="1445" width="0.0247%" height="15" fill="rgb(244,19,51)" fg:x="17683" fg:w="12"/><text x="36.5787%" y="1455.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (11 samples, 0.02%)</title><rect x="36.3308%" y="1429" width="0.0226%" height="15" fill="rgb(224,6,22)" fg:x="17684" fg:w="11"/><text x="36.5808%" y="1439.50"></text></g><g><title>engine::engine::book::Book::create_book_snapshot::{{closure}} (11 samples, 0.02%)</title><rect x="36.3308%" y="1413" width="0.0226%" height="15" fill="rgb(224,145,5)" fg:x="17684" fg:w="11"/><text x="36.5808%" y="1423.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (11 samples, 0.02%)</title><rect x="36.3308%" y="1397" width="0.0226%" height="15" fill="rgb(234,130,49)" fg:x="17684" fg:w="11"/><text x="36.5808%" y="1407.50"></text></g><g><title>__GI___libc_malloc (8 samples, 0.02%)</title><rect x="36.3554%" y="1349" width="0.0164%" height="15" fill="rgb(254,6,2)" fg:x="17696" fg:w="8"/><text x="36.6054%" y="1359.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (204 samples, 0.42%)</title><rect x="35.9589%" y="1525" width="0.4191%" height="15" fill="rgb(208,96,46)" fg:x="17503" fg:w="204"/><text x="36.2089%" y="1535.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (204 samples, 0.42%)</title><rect x="35.9589%" y="1509" width="0.4191%" height="15" fill="rgb(239,3,39)" fg:x="17503" fg:w="204"/><text x="36.2089%" y="1519.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (204 samples, 0.42%)</title><rect x="35.9589%" y="1493" width="0.4191%" height="15" fill="rgb(233,210,1)" fg:x="17503" fg:w="204"/><text x="36.2089%" y="1503.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (199 samples, 0.41%)</title><rect x="35.9692%" y="1477" width="0.4088%" height="15" fill="rgb(244,137,37)" fg:x="17508" fg:w="199"/><text x="36.2192%" y="1487.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (11 samples, 0.02%)</title><rect x="36.3554%" y="1461" width="0.0226%" height="15" fill="rgb(240,136,2)" fg:x="17696" fg:w="11"/><text x="36.6054%" y="1471.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (11 samples, 0.02%)</title><rect x="36.3554%" y="1445" width="0.0226%" height="15" fill="rgb(239,18,37)" fg:x="17696" fg:w="11"/><text x="36.6054%" y="1455.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (11 samples, 0.02%)</title><rect x="36.3554%" y="1429" width="0.0226%" height="15" fill="rgb(218,185,22)" fg:x="17696" fg:w="11"/><text x="36.6054%" y="1439.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (11 samples, 0.02%)</title><rect x="36.3554%" y="1413" width="0.0226%" height="15" fill="rgb(225,218,4)" fg:x="17696" fg:w="11"/><text x="36.6054%" y="1423.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11 samples, 0.02%)</title><rect x="36.3554%" y="1397" width="0.0226%" height="15" fill="rgb(230,182,32)" fg:x="17696" fg:w="11"/><text x="36.6054%" y="1407.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 0.02%)</title><rect x="36.3554%" y="1381" width="0.0226%" height="15" fill="rgb(242,56,43)" fg:x="17696" fg:w="11"/><text x="36.6054%" y="1391.50"></text></g><g><title>alloc::alloc::alloc (11 samples, 0.02%)</title><rect x="36.3554%" y="1365" width="0.0226%" height="15" fill="rgb(233,99,24)" fg:x="17696" fg:w="11"/><text x="36.6054%" y="1375.50"></text></g><g><title>__split_vma (5 samples, 0.01%)</title><rect x="36.3903%" y="1301" width="0.0103%" height="15" fill="rgb(234,209,42)" fg:x="17713" fg:w="5"/><text x="36.6403%" y="1311.50"></text></g><g><title>__mem_cgroup_uncharge_list (8 samples, 0.02%)</title><rect x="36.4438%" y="1237" width="0.0164%" height="15" fill="rgb(227,7,12)" fg:x="17739" fg:w="8"/><text x="36.6938%" y="1247.50"></text></g><g><title>uncharge_folio (5 samples, 0.01%)</title><rect x="36.4499%" y="1221" width="0.0103%" height="15" fill="rgb(245,203,43)" fg:x="17742" fg:w="5"/><text x="36.6999%" y="1231.50"></text></g><g><title>__mod_memcg_lruvec_state (6 samples, 0.01%)</title><rect x="36.4664%" y="1237" width="0.0123%" height="15" fill="rgb(238,205,33)" fg:x="17750" fg:w="6"/><text x="36.7164%" y="1247.50"></text></g><g><title>free_unref_page_list (22 samples, 0.05%)</title><rect x="36.4807%" y="1237" width="0.0452%" height="15" fill="rgb(231,56,7)" fg:x="17757" fg:w="22"/><text x="36.7307%" y="1247.50"></text></g><g><title>free_unref_page_commit (5 samples, 0.01%)</title><rect x="36.5157%" y="1221" width="0.0103%" height="15" fill="rgb(244,186,29)" fg:x="17774" fg:w="5"/><text x="36.7657%" y="1231.50"></text></g><g><title>tlb_finish_mmu (62 samples, 0.13%)</title><rect x="36.4027%" y="1285" width="0.1274%" height="15" fill="rgb(234,111,31)" fg:x="17719" fg:w="62"/><text x="36.6527%" y="1295.50"></text></g><g><title>tlb_batch_pages_flush (59 samples, 0.12%)</title><rect x="36.4088%" y="1269" width="0.1212%" height="15" fill="rgb(241,149,10)" fg:x="17722" fg:w="59"/><text x="36.6588%" y="1279.50"></text></g><g><title>release_pages (55 samples, 0.11%)</title><rect x="36.4171%" y="1253" width="0.1130%" height="15" fill="rgb(249,206,44)" fg:x="17726" fg:w="55"/><text x="36.6671%" y="1263.50"></text></g><g><title>_compound_head (9 samples, 0.02%)</title><rect x="36.5547%" y="1253" width="0.0185%" height="15" fill="rgb(251,153,30)" fg:x="17793" fg:w="9"/><text x="36.8047%" y="1263.50"></text></g><g><title>__mod_lruvec_page_state (5 samples, 0.01%)</title><rect x="36.5773%" y="1237" width="0.0103%" height="15" fill="rgb(239,152,38)" fg:x="17804" fg:w="5"/><text x="36.8273%" y="1247.50"></text></g><g><title>unmap_region (94 samples, 0.19%)</title><rect x="36.4027%" y="1301" width="0.1931%" height="15" fill="rgb(249,139,47)" fg:x="17719" fg:w="94"/><text x="36.6527%" y="1311.50"></text></g><g><title>unmap_vmas (32 samples, 0.07%)</title><rect x="36.5300%" y="1285" width="0.0657%" height="15" fill="rgb(244,64,35)" fg:x="17781" fg:w="32"/><text x="36.7800%" y="1295.50"></text></g><g><title>unmap_page_range (32 samples, 0.07%)</title><rect x="36.5300%" y="1269" width="0.0657%" height="15" fill="rgb(216,46,15)" fg:x="17781" fg:w="32"/><text x="36.7800%" y="1279.50"></text></g><g><title>page_remove_rmap (11 samples, 0.02%)</title><rect x="36.5732%" y="1253" width="0.0226%" height="15" fill="rgb(250,74,19)" fg:x="17802" fg:w="11"/><text x="36.8232%" y="1263.50"></text></g><g><title>do_mas_align_munmap (101 samples, 0.21%)</title><rect x="36.3903%" y="1317" width="0.2075%" height="15" fill="rgb(249,42,33)" fg:x="17713" fg:w="101"/><text x="36.6403%" y="1327.50"></text></g><g><title>__GI_munmap (102 samples, 0.21%)</title><rect x="36.3903%" y="1413" width="0.2096%" height="15" fill="rgb(242,149,17)" fg:x="17713" fg:w="102"/><text x="36.6403%" y="1423.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (102 samples, 0.21%)</title><rect x="36.3903%" y="1397" width="0.2096%" height="15" fill="rgb(244,29,21)" fg:x="17713" fg:w="102"/><text x="36.6403%" y="1407.50"></text></g><g><title>do_syscall_64 (102 samples, 0.21%)</title><rect x="36.3903%" y="1381" width="0.2096%" height="15" fill="rgb(220,130,37)" fg:x="17713" fg:w="102"/><text x="36.6403%" y="1391.50"></text></g><g><title>__x64_sys_munmap (102 samples, 0.21%)</title><rect x="36.3903%" y="1365" width="0.2096%" height="15" fill="rgb(211,67,2)" fg:x="17713" fg:w="102"/><text x="36.6403%" y="1375.50"></text></g><g><title>__vm_munmap (102 samples, 0.21%)</title><rect x="36.3903%" y="1349" width="0.2096%" height="15" fill="rgb(235,68,52)" fg:x="17713" fg:w="102"/><text x="36.6403%" y="1359.50"></text></g><g><title>do_mas_munmap (102 samples, 0.21%)</title><rect x="36.3903%" y="1333" width="0.2096%" height="15" fill="rgb(246,142,3)" fg:x="17713" fg:w="102"/><text x="36.6403%" y="1343.50"></text></g><g><title>find_vma_prev (6 samples, 0.01%)</title><rect x="36.6574%" y="1285" width="0.0123%" height="15" fill="rgb(241,25,7)" fg:x="17843" fg:w="6"/><text x="36.9074%" y="1295.50"></text></g><g><title>folio_lruvec_lock_irqsave (5 samples, 0.01%)</title><rect x="36.6965%" y="1221" width="0.0103%" height="15" fill="rgb(242,119,39)" fg:x="17862" fg:w="5"/><text x="36.9465%" y="1231.50"></text></g><g><title>lru_add_fn (11 samples, 0.02%)</title><rect x="36.7067%" y="1221" width="0.0226%" height="15" fill="rgb(241,98,45)" fg:x="17867" fg:w="11"/><text x="36.9567%" y="1231.50"></text></g><g><title>lru_add_drain (25 samples, 0.05%)</title><rect x="36.6821%" y="1269" width="0.0514%" height="15" fill="rgb(254,28,30)" fg:x="17855" fg:w="25"/><text x="36.9321%" y="1279.50"></text></g><g><title>lru_add_drain_cpu (25 samples, 0.05%)</title><rect x="36.6821%" y="1253" width="0.0514%" height="15" fill="rgb(241,142,54)" fg:x="17855" fg:w="25"/><text x="36.9321%" y="1263.50"></text></g><g><title>folio_batch_move_lru (23 samples, 0.05%)</title><rect x="36.6862%" y="1237" width="0.0473%" height="15" fill="rgb(222,85,15)" fg:x="17857" fg:w="23"/><text x="36.9362%" y="1247.50"></text></g><g><title>__x2apic_send_IPI_mask (7 samples, 0.01%)</title><rect x="36.8177%" y="1205" width="0.0144%" height="15" fill="rgb(210,85,47)" fg:x="17921" fg:w="7"/><text x="37.0677%" y="1215.50"></text></g><g><title>flush_tlb_func (11 samples, 0.02%)</title><rect x="36.8341%" y="1205" width="0.0226%" height="15" fill="rgb(224,206,25)" fg:x="17929" fg:w="11"/><text x="37.0841%" y="1215.50"></text></g><g><title>native_flush_tlb_one_user (7 samples, 0.01%)</title><rect x="36.8423%" y="1189" width="0.0144%" height="15" fill="rgb(243,201,19)" fg:x="17933" fg:w="7"/><text x="37.0923%" y="1199.50"></text></g><g><title>flush_tlb_mm_range (58 samples, 0.12%)</title><rect x="36.7458%" y="1253" width="0.1192%" height="15" fill="rgb(236,59,4)" fg:x="17886" fg:w="58"/><text x="36.9958%" y="1263.50"></text></g><g><title>on_each_cpu_cond_mask (53 samples, 0.11%)</title><rect x="36.7560%" y="1237" width="0.1089%" height="15" fill="rgb(254,179,45)" fg:x="17891" fg:w="53"/><text x="37.0060%" y="1247.50"></text></g><g><title>smp_call_function_many_cond (53 samples, 0.11%)</title><rect x="36.7560%" y="1221" width="0.1089%" height="15" fill="rgb(226,14,10)" fg:x="17891" fg:w="53"/><text x="37.0060%" y="1231.50"></text></g><g><title>free_swap_cache (31 samples, 0.06%)</title><rect x="36.8937%" y="1221" width="0.0637%" height="15" fill="rgb(244,27,41)" fg:x="17958" fg:w="31"/><text x="37.1437%" y="1231.50"></text></g><g><title>free_pages_and_swap_cache (39 samples, 0.08%)</title><rect x="36.8814%" y="1237" width="0.0801%" height="15" fill="rgb(235,35,32)" fg:x="17952" fg:w="39"/><text x="37.1314%" y="1247.50"></text></g><g><title>__list_add_valid (5 samples, 0.01%)</title><rect x="37.3374%" y="1221" width="0.0103%" height="15" fill="rgb(218,68,31)" fg:x="18174" fg:w="5"/><text x="37.5874%" y="1231.50"></text></g><g><title>__list_del_entry_valid (44 samples, 0.09%)</title><rect x="37.3477%" y="1221" width="0.0904%" height="15" fill="rgb(207,120,37)" fg:x="18179" fg:w="44"/><text x="37.5977%" y="1231.50"></text></g><g><title>__rcu_read_unlock (12 samples, 0.02%)</title><rect x="37.4422%" y="1205" width="0.0247%" height="15" fill="rgb(227,98,0)" fg:x="18225" fg:w="12"/><text x="37.6922%" y="1215.50"></text></g><g><title>uncharge_batch (18 samples, 0.04%)</title><rect x="37.4669%" y="1205" width="0.0370%" height="15" fill="rgb(207,7,3)" fg:x="18237" fg:w="18"/><text x="37.7169%" y="1215.50"></text></g><g><title>page_counter_uncharge (11 samples, 0.02%)</title><rect x="37.4813%" y="1189" width="0.0226%" height="15" fill="rgb(206,98,19)" fg:x="18244" fg:w="11"/><text x="37.7313%" y="1199.50"></text></g><g><title>__mem_cgroup_uncharge_list (118 samples, 0.24%)</title><rect x="37.4381%" y="1221" width="0.2424%" height="15" fill="rgb(217,5,26)" fg:x="18223" fg:w="118"/><text x="37.6881%" y="1231.50"></text></g><g><title>uncharge_folio (86 samples, 0.18%)</title><rect x="37.5039%" y="1205" width="0.1767%" height="15" fill="rgb(235,190,38)" fg:x="18255" fg:w="86"/><text x="37.7539%" y="1215.50"></text></g><g><title>__rcu_read_lock (21 samples, 0.04%)</title><rect x="37.6374%" y="1189" width="0.0431%" height="15" fill="rgb(247,86,24)" fg:x="18320" fg:w="21"/><text x="37.8874%" y="1199.50"></text></g><g><title>__mod_lruvec_state (45 samples, 0.09%)</title><rect x="37.6805%" y="1221" width="0.0924%" height="15" fill="rgb(205,101,16)" fg:x="18341" fg:w="45"/><text x="37.9305%" y="1231.50"></text></g><g><title>__mod_node_page_state (33 samples, 0.07%)</title><rect x="37.7052%" y="1205" width="0.0678%" height="15" fill="rgb(246,168,33)" fg:x="18353" fg:w="33"/><text x="37.9552%" y="1215.50"></text></g><g><title>__mod_memcg_lruvec_state (58 samples, 0.12%)</title><rect x="37.7730%" y="1221" width="0.1192%" height="15" fill="rgb(231,114,1)" fg:x="18386" fg:w="58"/><text x="38.0230%" y="1231.50"></text></g><g><title>cgroup_rstat_updated (15 samples, 0.03%)</title><rect x="37.8613%" y="1205" width="0.0308%" height="15" fill="rgb(207,184,53)" fg:x="18429" fg:w="15"/><text x="38.1113%" y="1215.50"></text></g><g><title>__mod_zone_page_state (32 samples, 0.07%)</title><rect x="37.8921%" y="1221" width="0.0657%" height="15" fill="rgb(224,95,51)" fg:x="18444" fg:w="32"/><text x="38.1421%" y="1231.50"></text></g><g><title>folio_lruvec_lock_irqsave (6 samples, 0.01%)</title><rect x="37.9640%" y="1221" width="0.0123%" height="15" fill="rgb(212,188,45)" fg:x="18479" fg:w="6"/><text x="38.2140%" y="1231.50"></text></g><g><title>__list_del_entry_valid (29 samples, 0.06%)</title><rect x="38.2332%" y="1205" width="0.0596%" height="15" fill="rgb(223,154,38)" fg:x="18610" fg:w="29"/><text x="38.4832%" y="1215.50"></text></g><g><title>free_pcp_prepare (27 samples, 0.06%)</title><rect x="38.2969%" y="1205" width="0.0555%" height="15" fill="rgb(251,22,52)" fg:x="18641" fg:w="27"/><text x="38.5469%" y="1215.50"></text></g><g><title>__free_one_page (29 samples, 0.06%)</title><rect x="38.3647%" y="1189" width="0.0596%" height="15" fill="rgb(229,209,22)" fg:x="18674" fg:w="29"/><text x="38.6147%" y="1199.50"></text></g><g><title>free_pcppages_bulk (41 samples, 0.08%)</title><rect x="38.3523%" y="1205" width="0.0842%" height="15" fill="rgb(234,138,34)" fg:x="18668" fg:w="41"/><text x="38.6023%" y="1215.50"></text></g><g><title>__list_del_entry_valid (6 samples, 0.01%)</title><rect x="38.4242%" y="1189" width="0.0123%" height="15" fill="rgb(212,95,11)" fg:x="18703" fg:w="6"/><text x="38.6742%" y="1199.50"></text></g><g><title>free_unref_page_list (303 samples, 0.62%)</title><rect x="37.9764%" y="1221" width="0.6225%" height="15" fill="rgb(240,179,47)" fg:x="18485" fg:w="303"/><text x="38.2264%" y="1231.50"></text></g><g><title>free_unref_page_commit (79 samples, 0.16%)</title><rect x="38.4366%" y="1205" width="0.1623%" height="15" fill="rgb(240,163,11)" fg:x="18709" fg:w="79"/><text x="38.6866%" y="1215.50"></text></g><g><title>__list_add_valid (20 samples, 0.04%)</title><rect x="38.5578%" y="1189" width="0.0411%" height="15" fill="rgb(236,37,12)" fg:x="18768" fg:w="20"/><text x="38.8078%" y="1199.50"></text></g><g><title>lru_gen_del_folio.constprop.0 (14 samples, 0.03%)</title><rect x="38.5989%" y="1221" width="0.0288%" height="15" fill="rgb(232,164,16)" fg:x="18788" fg:w="14"/><text x="38.8489%" y="1231.50"></text></g><g><title>tlb_finish_mmu (937 samples, 1.93%)</title><rect x="36.7396%" y="1269" width="1.9250%" height="15" fill="rgb(244,205,15)" fg:x="17883" fg:w="937"/><text x="36.9896%" y="1279.50">t..</text></g><g><title>tlb_batch_pages_flush (874 samples, 1.80%)</title><rect x="36.8690%" y="1253" width="1.7956%" height="15" fill="rgb(223,117,47)" fg:x="17946" fg:w="874"/><text x="37.1190%" y="1263.50">t..</text></g><g><title>release_pages (829 samples, 1.70%)</title><rect x="36.9615%" y="1237" width="1.7031%" height="15" fill="rgb(244,107,35)" fg:x="17991" fg:w="829"/><text x="37.2115%" y="1247.50"></text></g><g><title>mem_cgroup_update_lru_size (18 samples, 0.04%)</title><rect x="38.6276%" y="1221" width="0.0370%" height="15" fill="rgb(205,140,8)" fg:x="18802" fg:w="18"/><text x="38.8776%" y="1231.50"></text></g><g><title>clear_page_erms (7 samples, 0.01%)</title><rect x="39.0282%" y="1189" width="0.0144%" height="15" fill="rgb(228,84,46)" fg:x="18997" fg:w="7"/><text x="39.2782%" y="1199.50"></text></g><g><title>__alloc_pages (18 samples, 0.04%)</title><rect x="39.0077%" y="1221" width="0.0370%" height="15" fill="rgb(254,188,9)" fg:x="18987" fg:w="18"/><text x="39.2577%" y="1231.50"></text></g><g><title>get_page_from_freelist (14 samples, 0.03%)</title><rect x="39.0159%" y="1205" width="0.0288%" height="15" fill="rgb(206,112,54)" fg:x="18991" fg:w="14"/><text x="39.2659%" y="1215.50"></text></g><g><title>__tlb_remove_page_size (49 samples, 0.10%)</title><rect x="38.9502%" y="1253" width="0.1007%" height="15" fill="rgb(216,84,49)" fg:x="18959" fg:w="49"/><text x="39.2002%" y="1263.50"></text></g><g><title>__get_free_pages (21 samples, 0.04%)</title><rect x="39.0077%" y="1237" width="0.0431%" height="15" fill="rgb(214,194,35)" fg:x="18987" fg:w="21"/><text x="39.2577%" y="1247.50"></text></g><g><title>_compound_head (86 samples, 0.18%)</title><rect x="39.0508%" y="1253" width="0.1767%" height="15" fill="rgb(249,28,3)" fg:x="19008" fg:w="86"/><text x="39.3008%" y="1263.50"></text></g><g><title>__mod_lruvec_state (48 samples, 0.10%)</title><rect x="39.4474%" y="1221" width="0.0986%" height="15" fill="rgb(222,56,52)" fg:x="19201" fg:w="48"/><text x="39.6974%" y="1231.50"></text></g><g><title>__mod_node_page_state (36 samples, 0.07%)</title><rect x="39.4720%" y="1205" width="0.0740%" height="15" fill="rgb(245,217,50)" fg:x="19213" fg:w="36"/><text x="39.7220%" y="1215.50"></text></g><g><title>__mod_memcg_lruvec_state (49 samples, 0.10%)</title><rect x="39.5460%" y="1221" width="0.1007%" height="15" fill="rgb(213,201,24)" fg:x="19249" fg:w="49"/><text x="39.7960%" y="1231.50"></text></g><g><title>cgroup_rstat_updated (20 samples, 0.04%)</title><rect x="39.6055%" y="1205" width="0.0411%" height="15" fill="rgb(248,116,28)" fg:x="19278" fg:w="20"/><text x="39.8555%" y="1215.50"></text></g><g><title>__mod_lruvec_page_state (142 samples, 0.29%)</title><rect x="39.3857%" y="1237" width="0.2917%" height="15" fill="rgb(219,72,43)" fg:x="19171" fg:w="142"/><text x="39.6357%" y="1247.50"></text></g><g><title>__rcu_read_lock (15 samples, 0.03%)</title><rect x="39.6466%" y="1221" width="0.0308%" height="15" fill="rgb(209,138,14)" fg:x="19298" fg:w="15"/><text x="39.8966%" y="1231.50"></text></g><g><title>__rcu_read_unlock (36 samples, 0.07%)</title><rect x="39.6775%" y="1237" width="0.0740%" height="15" fill="rgb(222,18,33)" fg:x="19313" fg:w="36"/><text x="39.9275%" y="1247.50"></text></g><g><title>folio_memcg_lock.part.0 (9 samples, 0.02%)</title><rect x="39.7514%" y="1237" width="0.0185%" height="15" fill="rgb(213,199,7)" fg:x="19349" fg:w="9"/><text x="40.0014%" y="1247.50"></text></g><g><title>folio_memcg_unlock (14 samples, 0.03%)</title><rect x="39.7699%" y="1237" width="0.0288%" height="15" fill="rgb(250,110,10)" fg:x="19358" fg:w="14"/><text x="40.0199%" y="1247.50"></text></g><g><title>lock_page_memcg (30 samples, 0.06%)</title><rect x="39.7987%" y="1237" width="0.0616%" height="15" fill="rgb(248,123,6)" fg:x="19372" fg:w="30"/><text x="40.0487%" y="1247.50"></text></g><g><title>__rcu_read_lock (21 samples, 0.04%)</title><rect x="39.8172%" y="1221" width="0.0431%" height="15" fill="rgb(206,91,31)" fg:x="19381" fg:w="21"/><text x="40.0672%" y="1231.50"></text></g><g><title>page_remove_rmap (305 samples, 0.63%)</title><rect x="39.2419%" y="1253" width="0.6266%" height="15" fill="rgb(211,154,13)" fg:x="19101" fg:w="305"/><text x="39.4919%" y="1263.50"></text></g><g><title>sync_mm_rss (6 samples, 0.01%)</title><rect x="39.8706%" y="1253" width="0.0123%" height="15" fill="rgb(225,148,7)" fg:x="19407" fg:w="6"/><text x="40.1206%" y="1263.50"></text></g><g><title>__x64_sys_madvise (1,595 samples, 3.28%)</title><rect x="36.6430%" y="1317" width="3.2768%" height="15" fill="rgb(220,160,43)" fg:x="17836" fg:w="1595"/><text x="36.8930%" y="1327.50">__x..</text></g><g><title>do_madvise (1,594 samples, 3.27%)</title><rect x="36.6451%" y="1301" width="3.2748%" height="15" fill="rgb(213,52,39)" fg:x="17837" fg:w="1594"/><text x="36.8951%" y="1311.50">do_..</text></g><g><title>zap_page_range_single (1,579 samples, 3.24%)</title><rect x="36.6759%" y="1285" width="3.2440%" height="15" fill="rgb(243,137,7)" fg:x="17852" fg:w="1579"/><text x="36.9259%" y="1295.50">zap..</text></g><g><title>unmap_page_range (611 samples, 1.26%)</title><rect x="38.6646%" y="1269" width="1.2553%" height="15" fill="rgb(230,79,13)" fg:x="18820" fg:w="611"/><text x="38.9146%" y="1279.50"></text></g><g><title>vm_normal_page (18 samples, 0.04%)</title><rect x="39.8829%" y="1253" width="0.0370%" height="15" fill="rgb(247,105,23)" fg:x="19413" fg:w="18"/><text x="40.1329%" y="1263.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1,604 samples, 3.30%)</title><rect x="36.6307%" y="1349" width="3.2953%" height="15" fill="rgb(223,179,41)" fg:x="17830" fg:w="1604"/><text x="36.8807%" y="1359.50">ent..</text></g><g><title>do_syscall_64 (1,601 samples, 3.29%)</title><rect x="36.6369%" y="1333" width="3.2892%" height="15" fill="rgb(218,9,34)" fg:x="17833" fg:w="1601"/><text x="36.8869%" y="1343.50">do_..</text></g><g><title>heap_trim (1,613 samples, 3.31%)</title><rect x="36.6184%" y="1397" width="3.3138%" height="15" fill="rgb(222,106,8)" fg:x="17824" fg:w="1613"/><text x="36.8684%" y="1407.50">hea..</text></g><g><title>shrink_heap (1,612 samples, 3.31%)</title><rect x="36.6204%" y="1381" width="3.3118%" height="15" fill="rgb(211,220,0)" fg:x="17825" fg:w="1612"/><text x="36.8704%" y="1391.50">shr..</text></g><g><title>__GI_madvise (1,611 samples, 3.31%)</title><rect x="36.6225%" y="1365" width="3.3097%" height="15" fill="rgb(229,52,16)" fg:x="17826" fg:w="1611"/><text x="36.8725%" y="1375.50">__G..</text></g><g><title>__GI___libc_free (1,735 samples, 3.56%)</title><rect x="36.3780%" y="1429" width="3.5645%" height="15" fill="rgb(212,155,18)" fg:x="17707" fg:w="1735"/><text x="36.6280%" y="1439.50">__GI..</text></g><g><title>_int_free (1,627 samples, 3.34%)</title><rect x="36.5999%" y="1413" width="3.3426%" height="15" fill="rgb(242,21,14)" fg:x="17815" fg:w="1627"/><text x="36.8499%" y="1423.50">_in..</text></g><g><title>malloc_consolidate (5 samples, 0.01%)</title><rect x="39.9322%" y="1397" width="0.0103%" height="15" fill="rgb(222,19,48)" fg:x="19437" fg:w="5"/><text x="40.1822%" y="1407.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,739 samples, 3.57%)</title><rect x="36.3780%" y="1461" width="3.5727%" height="15" fill="rgb(232,45,27)" fg:x="17707" fg:w="1739"/><text x="36.6280%" y="1471.50">&lt;all..</text></g><g><title>alloc::alloc::dealloc (1,739 samples, 3.57%)</title><rect x="36.3780%" y="1445" width="3.5727%" height="15" fill="rgb(249,103,42)" fg:x="17707" fg:w="1739"/><text x="36.6280%" y="1455.50">allo..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::binary_heap::BinaryHeap&lt;engine::domain::order::Order&gt;&gt; (1,745 samples, 3.59%)</title><rect x="36.3780%" y="1525" width="3.5850%" height="15" fill="rgb(246,81,33)" fg:x="17707" fg:w="1745"/><text x="36.6280%" y="1535.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;engine::domain::order::Order&gt;&gt; (1,745 samples, 3.59%)</title><rect x="36.3780%" y="1509" width="3.5850%" height="15" fill="rgb(252,33,42)" fg:x="17707" fg:w="1745"/><text x="36.6280%" y="1519.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;engine::domain::order::Order&gt;&gt; (1,745 samples, 3.59%)</title><rect x="36.3780%" y="1493" width="3.5850%" height="15" fill="rgb(209,212,41)" fg:x="17707" fg:w="1745"/><text x="36.6280%" y="1503.50">core..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,745 samples, 3.59%)</title><rect x="36.3780%" y="1477" width="3.5850%" height="15" fill="rgb(207,154,6)" fg:x="17707" fg:w="1745"/><text x="36.6280%" y="1487.50">&lt;all..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (6 samples, 0.01%)</title><rect x="39.9507%" y="1461" width="0.0123%" height="15" fill="rgb(223,64,47)" fg:x="19446" fg:w="6"/><text x="40.2007%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;itertools::groupbylazy::GroupBy&lt;u32,core::iter::adapters::take_while::TakeWhile&lt;core::slice::iter::Iter&lt;common::message::MarketDataEntry&gt;,engine::engine::book::Book::create_book_snapshot::{{closure}}&gt;,engine::engine::book::Book::create_book_snapshot::{{closure}}&gt;&gt; (6 samples, 0.01%)</title><rect x="39.9630%" y="1525" width="0.0123%" height="15" fill="rgb(211,161,38)" fg:x="19452" fg:w="6"/><text x="40.2130%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;itertools::groupbylazy::GroupInner&lt;u32,core::iter::adapters::take_while::TakeWhile&lt;core::slice::iter::Iter&lt;common::message::MarketDataEntry&gt;,engine::engine::book::Book::create_book_snapshot::{{closure}}&gt;,engine::engine::book::Book::create_book_snapshot::{{closure}}&gt;&gt;&gt; (6 samples, 0.01%)</title><rect x="39.9630%" y="1509" width="0.0123%" height="15" fill="rgb(219,138,40)" fg:x="19452" fg:w="6"/><text x="40.2130%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;itertools::groupbylazy::GroupInner&lt;u32,core::iter::adapters::take_while::TakeWhile&lt;core::slice::iter::Iter&lt;common::message::MarketDataEntry&gt;,engine::engine::book::Book::create_book_snapshot::{{closure}}&gt;,engine::engine::book::Book::create_book_snapshot::{{closure}}&gt;&gt;&gt; (6 samples, 0.01%)</title><rect x="39.9630%" y="1493" width="0.0123%" height="15" fill="rgb(241,228,46)" fg:x="19452" fg:w="6"/><text x="40.2130%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;itertools::groupbylazy::GroupInner&lt;u32,core::iter::adapters::take_while::TakeWhile&lt;core::slice::iter::Iter&lt;common::message::MarketDataEntry&gt;,engine::engine::book::Book::create_book_snapshot::{{closure}}&gt;,engine::engine::book::Book::create_book_snapshot::{{closure}}&gt;&gt; (6 samples, 0.01%)</title><rect x="39.9630%" y="1477" width="0.0123%" height="15" fill="rgb(223,209,38)" fg:x="19452" fg:w="6"/><text x="40.2130%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::into_iter::IntoIter&lt;&amp;common::message::MarketDataEntry&gt;&gt;&gt; (6 samples, 0.01%)</title><rect x="39.9630%" y="1461" width="0.0123%" height="15" fill="rgb(236,164,45)" fg:x="19452" fg:w="6"/><text x="40.2130%" y="1471.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (24 samples, 0.05%)</title><rect x="39.9753%" y="1525" width="0.0493%" height="15" fill="rgb(231,15,5)" fg:x="19458" fg:w="24"/><text x="40.2253%" y="1535.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (24 samples, 0.05%)</title><rect x="39.9753%" y="1509" width="0.0493%" height="15" fill="rgb(252,35,15)" fg:x="19458" fg:w="24"/><text x="40.2253%" y="1519.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (24 samples, 0.05%)</title><rect x="39.9753%" y="1493" width="0.0493%" height="15" fill="rgb(248,181,18)" fg:x="19458" fg:w="24"/><text x="40.2253%" y="1503.50"></text></g><g><title>engine::engine::book::Book::create_book_snapshot (16,156 samples, 33.19%)</title><rect x="6.9153%" y="1541" width="33.1916%" height="15" fill="rgb(233,39,42)" fg:x="3366" fg:w="16156"/><text x="7.1653%" y="1551.50">engine::engine::book::Book::create_book_snapshot</text></g><g><title>itertools::Itertools::group_by (40 samples, 0.08%)</title><rect x="40.0247%" y="1525" width="0.0822%" height="15" fill="rgb(238,110,33)" fg:x="19482" fg:w="40"/><text x="40.2747%" y="1535.50"></text></g><g><title>itertools::groupbylazy::new (40 samples, 0.08%)</title><rect x="40.0247%" y="1509" width="0.0822%" height="15" fill="rgb(233,195,10)" fg:x="19482" fg:w="40"/><text x="40.2747%" y="1519.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (15 samples, 0.03%)</title><rect x="40.0760%" y="1493" width="0.0308%" height="15" fill="rgb(254,105,3)" fg:x="19507" fg:w="15"/><text x="40.3260%" y="1503.50"></text></g><g><title>queue_work_on (5 samples, 0.01%)</title><rect x="40.1233%" y="1157" width="0.0103%" height="15" fill="rgb(221,225,9)" fg:x="19530" fg:w="5"/><text x="40.3733%" y="1167.50"></text></g><g><title>__queue_work (5 samples, 0.01%)</title><rect x="40.1233%" y="1141" width="0.0103%" height="15" fill="rgb(224,227,45)" fg:x="19530" fg:w="5"/><text x="40.3733%" y="1151.50"></text></g><g><title>do_output_char (7 samples, 0.01%)</title><rect x="40.1212%" y="1189" width="0.0144%" height="15" fill="rgb(229,198,43)" fg:x="19529" fg:w="7"/><text x="40.3712%" y="1199.50"></text></g><g><title>tty_insert_flip_string_and_push_buffer (6 samples, 0.01%)</title><rect x="40.1233%" y="1173" width="0.0123%" height="15" fill="rgb(206,209,35)" fg:x="19530" fg:w="6"/><text x="40.3733%" y="1183.50"></text></g><g><title>queue_work_on (5 samples, 0.01%)</title><rect x="40.1438%" y="1173" width="0.0103%" height="15" fill="rgb(245,195,53)" fg:x="19540" fg:w="5"/><text x="40.3938%" y="1183.50"></text></g><g><title>__queue_work (5 samples, 0.01%)</title><rect x="40.1438%" y="1157" width="0.0103%" height="15" fill="rgb(240,92,26)" fg:x="19540" fg:w="5"/><text x="40.3938%" y="1167.50"></text></g><g><title>n_tty_write (20 samples, 0.04%)</title><rect x="40.1171%" y="1205" width="0.0411%" height="15" fill="rgb(207,40,23)" fg:x="19527" fg:w="20"/><text x="40.3671%" y="1215.50"></text></g><g><title>tty_insert_flip_string_and_push_buffer (7 samples, 0.01%)</title><rect x="40.1438%" y="1189" width="0.0144%" height="15" fill="rgb(223,111,35)" fg:x="19540" fg:w="7"/><text x="40.3938%" y="1199.50"></text></g><g><title>file_tty_write.constprop.0 (22 samples, 0.05%)</title><rect x="40.1171%" y="1221" width="0.0452%" height="15" fill="rgb(229,147,28)" fg:x="19527" fg:w="22"/><text x="40.3671%" y="1231.50"></text></g><g><title>ksys_write (25 samples, 0.05%)</title><rect x="40.1130%" y="1253" width="0.0514%" height="15" fill="rgb(211,29,28)" fg:x="19525" fg:w="25"/><text x="40.3630%" y="1263.50"></text></g><g><title>vfs_write (23 samples, 0.05%)</title><rect x="40.1171%" y="1237" width="0.0473%" height="15" fill="rgb(228,72,33)" fg:x="19527" fg:w="23"/><text x="40.3671%" y="1247.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (28 samples, 0.06%)</title><rect x="40.1109%" y="1285" width="0.0575%" height="15" fill="rgb(205,214,31)" fg:x="19524" fg:w="28"/><text x="40.3609%" y="1295.50"></text></g><g><title>do_syscall_64 (27 samples, 0.06%)</title><rect x="40.1130%" y="1269" width="0.0555%" height="15" fill="rgb(224,111,15)" fg:x="19525" fg:w="27"/><text x="40.3630%" y="1279.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (30 samples, 0.06%)</title><rect x="40.1089%" y="1445" width="0.0616%" height="15" fill="rgb(253,21,26)" fg:x="19523" fg:w="30"/><text x="40.3589%" y="1455.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (30 samples, 0.06%)</title><rect x="40.1089%" y="1429" width="0.0616%" height="15" fill="rgb(245,139,43)" fg:x="19523" fg:w="30"/><text x="40.3589%" y="1439.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_all (30 samples, 0.06%)</title><rect x="40.1089%" y="1413" width="0.0616%" height="15" fill="rgb(252,170,7)" fg:x="19523" fg:w="30"/><text x="40.3589%" y="1423.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (30 samples, 0.06%)</title><rect x="40.1089%" y="1397" width="0.0616%" height="15" fill="rgb(231,118,14)" fg:x="19523" fg:w="30"/><text x="40.3589%" y="1407.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (30 samples, 0.06%)</title><rect x="40.1089%" y="1381" width="0.0616%" height="15" fill="rgb(238,83,0)" fg:x="19523" fg:w="30"/><text x="40.3589%" y="1391.50"></text></g><g><title>&lt;std::io::stdio::StdoutRaw as std::io::Write&gt;::write (30 samples, 0.06%)</title><rect x="40.1089%" y="1365" width="0.0616%" height="15" fill="rgb(221,39,39)" fg:x="19523" fg:w="30"/><text x="40.3589%" y="1375.50"></text></g><g><title>&lt;std::sys::unix::stdio::Stdout as std::io::Write&gt;::write (30 samples, 0.06%)</title><rect x="40.1089%" y="1349" width="0.0616%" height="15" fill="rgb(222,119,46)" fg:x="19523" fg:w="30"/><text x="40.3589%" y="1359.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (30 samples, 0.06%)</title><rect x="40.1089%" y="1333" width="0.0616%" height="15" fill="rgb(222,165,49)" fg:x="19523" fg:w="30"/><text x="40.3589%" y="1343.50"></text></g><g><title>__GI___libc_write (30 samples, 0.06%)</title><rect x="40.1089%" y="1317" width="0.0616%" height="15" fill="rgb(219,113,52)" fg:x="19523" fg:w="30"/><text x="40.3589%" y="1327.50"></text></g><g><title>__GI___libc_write (30 samples, 0.06%)</title><rect x="40.1089%" y="1301" width="0.0616%" height="15" fill="rgb(214,7,15)" fg:x="19523" fg:w="30"/><text x="40.3589%" y="1311.50"></text></g><g><title>std::io::stdio::_print (34 samples, 0.07%)</title><rect x="40.1068%" y="1541" width="0.0699%" height="15" fill="rgb(235,32,4)" fg:x="19522" fg:w="34"/><text x="40.3568%" y="1551.50"></text></g><g><title>std::io::stdio::print_to (34 samples, 0.07%)</title><rect x="40.1068%" y="1525" width="0.0699%" height="15" fill="rgb(238,90,54)" fg:x="19522" fg:w="34"/><text x="40.3568%" y="1535.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (34 samples, 0.07%)</title><rect x="40.1068%" y="1509" width="0.0699%" height="15" fill="rgb(213,208,19)" fg:x="19522" fg:w="34"/><text x="40.3568%" y="1519.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (34 samples, 0.07%)</title><rect x="40.1068%" y="1493" width="0.0699%" height="15" fill="rgb(233,156,4)" fg:x="19522" fg:w="34"/><text x="40.3568%" y="1503.50"></text></g><g><title>std::io::Write::write_fmt (33 samples, 0.07%)</title><rect x="40.1089%" y="1477" width="0.0678%" height="15" fill="rgb(207,194,5)" fg:x="19523" fg:w="33"/><text x="40.3589%" y="1487.50"></text></g><g><title>core::fmt::write (33 samples, 0.07%)</title><rect x="40.1089%" y="1461" width="0.0678%" height="15" fill="rgb(206,111,30)" fg:x="19523" fg:w="33"/><text x="40.3589%" y="1471.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (7 samples, 0.01%)</title><rect x="40.1767%" y="1525" width="0.0144%" height="15" fill="rgb(243,70,54)" fg:x="19556" fg:w="7"/><text x="40.4267%" y="1535.50"></text></g><g><title>std::sync::poison::Flag::guard (7 samples, 0.01%)</title><rect x="40.1767%" y="1509" width="0.0144%" height="15" fill="rgb(242,28,8)" fg:x="19556" fg:w="7"/><text x="40.4267%" y="1519.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (91 samples, 0.19%)</title><rect x="40.1911%" y="1509" width="0.1870%" height="15" fill="rgb(219,106,18)" fg:x="19563" fg:w="91"/><text x="40.4411%" y="1519.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (91 samples, 0.19%)</title><rect x="40.1911%" y="1493" width="0.1870%" height="15" fill="rgb(244,222,10)" fg:x="19563" fg:w="91"/><text x="40.4411%" y="1503.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (102 samples, 0.21%)</title><rect x="40.1767%" y="1541" width="0.2096%" height="15" fill="rgb(236,179,52)" fg:x="19556" fg:w="102"/><text x="40.4267%" y="1551.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (95 samples, 0.20%)</title><rect x="40.1911%" y="1525" width="0.1952%" height="15" fill="rgb(213,23,39)" fg:x="19563" fg:w="95"/><text x="40.4411%" y="1535.50"></text></g><g><title>std::sys::unix::time::Timespec::now (86 samples, 0.18%)</title><rect x="40.3862%" y="1541" width="0.1767%" height="15" fill="rgb(238,48,10)" fg:x="19658" fg:w="86"/><text x="40.6362%" y="1551.50"></text></g><g><title>__GI___clock_gettime (84 samples, 0.17%)</title><rect x="40.3903%" y="1525" width="0.1726%" height="15" fill="rgb(251,196,23)" fg:x="19660" fg:w="84"/><text x="40.6403%" y="1535.50"></text></g><g><title>__vdso_clock_gettime (78 samples, 0.16%)</title><rect x="40.4027%" y="1509" width="0.1602%" height="15" fill="rgb(250,152,24)" fg:x="19666" fg:w="78"/><text x="40.6527%" y="1519.50"></text></g><g><title>[[vdso]] (50 samples, 0.10%)</title><rect x="40.4602%" y="1493" width="0.1027%" height="15" fill="rgb(209,150,17)" fg:x="19694" fg:w="50"/><text x="40.7102%" y="1503.50"></text></g><g><title>clone3 (16,756 samples, 34.42%)</title><rect x="6.1674%" y="1781" width="34.4242%" height="15" fill="rgb(234,202,34)" fg:x="3002" fg:w="16756"/><text x="6.4174%" y="1791.50">clone3</text></g><g><title>start_thread (16,756 samples, 34.42%)</title><rect x="6.1674%" y="1765" width="34.4242%" height="15" fill="rgb(253,148,53)" fg:x="3002" fg:w="16756"/><text x="6.4174%" y="1775.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (16,756 samples, 34.42%)</title><rect x="6.1674%" y="1749" width="34.4242%" height="15" fill="rgb(218,129,16)" fg:x="3002" fg:w="16756"/><text x="6.4174%" y="1759.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (16,756 samples, 34.42%)</title><rect x="6.1674%" y="1733" width="34.4242%" height="15" fill="rgb(216,85,19)" fg:x="3002" fg:w="16756"/><text x="6.4174%" y="1743.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;A..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (16,756 samples, 34.42%)</title><rect x="6.1674%" y="1717" width="34.4242%" height="15" fill="rgb(235,228,7)" fg:x="3002" fg:w="16756"/><text x="6.4174%" y="1727.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;A..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (16,756 samples, 34.42%)</title><rect x="6.1674%" y="1701" width="34.4242%" height="15" fill="rgb(245,175,0)" fg:x="3002" fg:w="16756"/><text x="6.4174%" y="1711.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (16,756 samples, 34.42%)</title><rect x="6.1674%" y="1685" width="34.4242%" height="15" fill="rgb(208,168,36)" fg:x="3002" fg:w="16756"/><text x="6.4174%" y="1695.50">std::thread::Builder::spawn_unchecked_::{{closure}}</text></g><g><title>std::panic::catch_unwind (16,756 samples, 34.42%)</title><rect x="6.1674%" y="1669" width="34.4242%" height="15" fill="rgb(246,171,24)" fg:x="3002" fg:w="16756"/><text x="6.4174%" y="1679.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (16,756 samples, 34.42%)</title><rect x="6.1674%" y="1653" width="34.4242%" height="15" fill="rgb(215,142,24)" fg:x="3002" fg:w="16756"/><text x="6.4174%" y="1663.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (16,756 samples, 34.42%)</title><rect x="6.1674%" y="1637" width="34.4242%" height="15" fill="rgb(250,187,7)" fg:x="3002" fg:w="16756"/><text x="6.4174%" y="1647.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (16,756 samples, 34.42%)</title><rect x="6.1674%" y="1621" width="34.4242%" height="15" fill="rgb(228,66,33)" fg:x="3002" fg:w="16756"/><text x="6.4174%" y="1631.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (16,756 samples, 34.42%)</title><rect x="6.1674%" y="1605" width="34.4242%" height="15" fill="rgb(234,215,21)" fg:x="3002" fg:w="16756"/><text x="6.4174%" y="1615.50">std::thread::Builder::spawn_unchecked_::{{closure}}::{{c..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (16,756 samples, 34.42%)</title><rect x="6.1674%" y="1589" width="34.4242%" height="15" fill="rgb(222,191,20)" fg:x="3002" fg:w="16756"/><text x="6.4174%" y="1599.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>engine::engine::match_engine::MatchEngine::run::{{closure}} (16,756 samples, 34.42%)</title><rect x="6.1674%" y="1573" width="34.4242%" height="15" fill="rgb(245,79,54)" fg:x="3002" fg:w="16756"/><text x="6.4174%" y="1583.50">engine::engine::match_engine::MatchEngine::run::{{closur..</text></g><g><title>engine::engine::match_engine::MatchEngine::matching_cycle (16,756 samples, 34.42%)</title><rect x="6.1674%" y="1557" width="34.4242%" height="15" fill="rgb(240,10,37)" fg:x="3002" fg:w="16756"/><text x="6.4174%" y="1567.50">engine::engine::match_engine::MatchEngine::matching_cycle</text></g><g><title>syscall (11 samples, 0.02%)</title><rect x="40.5691%" y="1541" width="0.0226%" height="15" fill="rgb(214,192,32)" fg:x="19747" fg:w="11"/><text x="40.8191%" y="1551.50"></text></g><g><title>error_entry (11 samples, 0.02%)</title><rect x="40.5691%" y="1525" width="0.0226%" height="15" fill="rgb(209,36,54)" fg:x="19747" fg:w="11"/><text x="40.8191%" y="1535.50"></text></g><g><title>entry_SYSCALL_64_safe_stack (5 samples, 0.01%)</title><rect x="40.5999%" y="1781" width="0.0103%" height="15" fill="rgb(220,10,11)" fg:x="19762" fg:w="5"/><text x="40.8499%" y="1791.50"></text></g><g><title>MATCH-CYCLE-THR (19,768 samples, 40.61%)</title><rect x="0.0000%" y="1797" width="40.6122%" height="15" fill="rgb(221,106,17)" fg:x="0" fg:w="19768"/><text x="0.2500%" y="1807.50">MATCH-CYCLE-THR</text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;engine::engine::book::Book&gt;&gt; (6 samples, 0.01%)</title><rect x="40.6184%" y="1557" width="0.0123%" height="15" fill="rgb(251,142,44)" fg:x="19771" fg:w="6"/><text x="40.8684%" y="1567.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.01%)</title><rect x="40.6184%" y="1541" width="0.0123%" height="15" fill="rgb(238,13,15)" fg:x="19771" fg:w="6"/><text x="40.8684%" y="1551.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::unlock (6 samples, 0.01%)</title><rect x="40.6184%" y="1525" width="0.0123%" height="15" fill="rgb(208,107,27)" fg:x="19771" fg:w="6"/><text x="40.8684%" y="1535.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::le (6 samples, 0.01%)</title><rect x="40.6451%" y="1509" width="0.0123%" height="15" fill="rgb(205,136,37)" fg:x="19784" fg:w="6"/><text x="40.8951%" y="1519.50"></text></g><g><title>core::cmp::PartialOrd::le (6 samples, 0.01%)</title><rect x="40.6451%" y="1493" width="0.0123%" height="15" fill="rgb(250,205,27)" fg:x="19784" fg:w="6"/><text x="40.8951%" y="1503.50"></text></g><g><title>&lt;engine::domain::order::Order as core::cmp::PartialOrd&gt;::partial_cmp (5 samples, 0.01%)</title><rect x="40.6471%" y="1477" width="0.0103%" height="15" fill="rgb(210,80,43)" fg:x="19785" fg:w="5"/><text x="40.8971%" y="1487.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::sift_up (10 samples, 0.02%)</title><rect x="40.6389%" y="1525" width="0.0205%" height="15" fill="rgb(247,160,36)" fg:x="19781" fg:w="10"/><text x="40.8889%" y="1535.50"></text></g><g><title>engine::engine::book::Book::apply_order (12 samples, 0.02%)</title><rect x="40.6369%" y="1557" width="0.0247%" height="15" fill="rgb(234,13,49)" fg:x="19780" fg:w="12"/><text x="40.8869%" y="1567.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::push (11 samples, 0.02%)</title><rect x="40.6389%" y="1541" width="0.0226%" height="15" fill="rgb(234,122,0)" fg:x="19781" fg:w="11"/><text x="40.8889%" y="1551.50"></text></g><g><title>futex_wait_queue (18 samples, 0.04%)</title><rect x="40.6800%" y="1269" width="0.0370%" height="15" fill="rgb(207,146,38)" fg:x="19801" fg:w="18"/><text x="40.9300%" y="1279.50"></text></g><g><title>schedule (18 samples, 0.04%)</title><rect x="40.6800%" y="1253" width="0.0370%" height="15" fill="rgb(207,177,25)" fg:x="19801" fg:w="18"/><text x="40.9300%" y="1263.50"></text></g><g><title>__schedule (18 samples, 0.04%)</title><rect x="40.6800%" y="1237" width="0.0370%" height="15" fill="rgb(211,178,42)" fg:x="19801" fg:w="18"/><text x="40.9300%" y="1247.50"></text></g><g><title>finish_task_switch.isra.0 (18 samples, 0.04%)</title><rect x="40.6800%" y="1221" width="0.0370%" height="15" fill="rgb(230,69,54)" fg:x="19801" fg:w="18"/><text x="40.9300%" y="1231.50"></text></g><g><title>__perf_event_task_sched_in (17 samples, 0.03%)</title><rect x="40.6821%" y="1205" width="0.0349%" height="15" fill="rgb(214,135,41)" fg:x="19802" fg:w="17"/><text x="40.9321%" y="1215.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (16 samples, 0.03%)</title><rect x="40.6841%" y="1189" width="0.0329%" height="15" fill="rgb(237,67,25)" fg:x="19803" fg:w="16"/><text x="40.9341%" y="1199.50"></text></g><g><title>native_write_msr (16 samples, 0.03%)</title><rect x="40.6841%" y="1173" width="0.0329%" height="15" fill="rgb(222,189,50)" fg:x="19803" fg:w="16"/><text x="40.9341%" y="1183.50"></text></g><g><title>__x64_sys_futex (20 samples, 0.04%)</title><rect x="40.6780%" y="1317" width="0.0411%" height="15" fill="rgb(245,148,34)" fg:x="19800" fg:w="20"/><text x="40.9280%" y="1327.50"></text></g><g><title>do_futex (20 samples, 0.04%)</title><rect x="40.6780%" y="1301" width="0.0411%" height="15" fill="rgb(222,29,6)" fg:x="19800" fg:w="20"/><text x="40.9280%" y="1311.50"></text></g><g><title>futex_wait (20 samples, 0.04%)</title><rect x="40.6780%" y="1285" width="0.0411%" height="15" fill="rgb(221,189,43)" fg:x="19800" fg:w="20"/><text x="40.9280%" y="1295.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (21 samples, 0.04%)</title><rect x="40.6780%" y="1349" width="0.0431%" height="15" fill="rgb(207,36,27)" fg:x="19800" fg:w="21"/><text x="40.9280%" y="1359.50"></text></g><g><title>do_syscall_64 (21 samples, 0.04%)</title><rect x="40.6780%" y="1333" width="0.0431%" height="15" fill="rgb(217,90,24)" fg:x="19800" fg:w="21"/><text x="40.9280%" y="1343.50"></text></g><g><title>std::sync::mpmc::context::Context::with (23 samples, 0.05%)</title><rect x="40.6780%" y="1509" width="0.0473%" height="15" fill="rgb(224,66,35)" fg:x="19800" fg:w="23"/><text x="40.9280%" y="1519.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (23 samples, 0.05%)</title><rect x="40.6780%" y="1493" width="0.0473%" height="15" fill="rgb(221,13,50)" fg:x="19800" fg:w="23"/><text x="40.9280%" y="1503.50"></text></g><g><title>std::sync::mpmc::context::Context::with::{{closure}} (23 samples, 0.05%)</title><rect x="40.6780%" y="1477" width="0.0473%" height="15" fill="rgb(236,68,49)" fg:x="19800" fg:w="23"/><text x="40.9280%" y="1487.50"></text></g><g><title>std::sync::mpmc::context::Context::with::{{closure}} (23 samples, 0.05%)</title><rect x="40.6780%" y="1461" width="0.0473%" height="15" fill="rgb(229,146,28)" fg:x="19800" fg:w="23"/><text x="40.9280%" y="1471.50"></text></g><g><title>std::sync::mpmc::list::Channel&lt;T&gt;::recv::{{closure}} (23 samples, 0.05%)</title><rect x="40.6780%" y="1445" width="0.0473%" height="15" fill="rgb(225,31,38)" fg:x="19800" fg:w="23"/><text x="40.9280%" y="1455.50"></text></g><g><title>std::sync::mpmc::context::Context::wait_until (23 samples, 0.05%)</title><rect x="40.6780%" y="1429" width="0.0473%" height="15" fill="rgb(250,208,3)" fg:x="19800" fg:w="23"/><text x="40.9280%" y="1439.50"></text></g><g><title>std::thread::park (23 samples, 0.05%)</title><rect x="40.6780%" y="1413" width="0.0473%" height="15" fill="rgb(246,54,23)" fg:x="19800" fg:w="23"/><text x="40.9280%" y="1423.50"></text></g><g><title>std::sys_common::thread_parking::futex::Parker::park (23 samples, 0.05%)</title><rect x="40.6780%" y="1397" width="0.0473%" height="15" fill="rgb(243,76,11)" fg:x="19800" fg:w="23"/><text x="40.9280%" y="1407.50"></text></g><g><title>std::sys::unix::futex::futex_wait (23 samples, 0.05%)</title><rect x="40.6780%" y="1381" width="0.0473%" height="15" fill="rgb(245,21,50)" fg:x="19800" fg:w="23"/><text x="40.9280%" y="1391.50"></text></g><g><title>syscall (23 samples, 0.05%)</title><rect x="40.6780%" y="1365" width="0.0473%" height="15" fill="rgb(228,9,43)" fg:x="19800" fg:w="23"/><text x="40.9280%" y="1375.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (5 samples, 0.01%)</title><rect x="40.7252%" y="1493" width="0.0103%" height="15" fill="rgb(208,100,47)" fg:x="19823" fg:w="5"/><text x="40.9752%" y="1503.50"></text></g><g><title>core::sync::atomic::atomic_or (5 samples, 0.01%)</title><rect x="40.7252%" y="1477" width="0.0103%" height="15" fill="rgb(232,26,8)" fg:x="19823" fg:w="5"/><text x="40.9752%" y="1487.50"></text></g><g><title>std::sync::mpmc::list::Channel&lt;T&gt;::read (9 samples, 0.02%)</title><rect x="40.7252%" y="1509" width="0.0185%" height="15" fill="rgb(216,166,38)" fg:x="19823" fg:w="9"/><text x="40.9752%" y="1519.50"></text></g><g><title>std::sync::mpsc::Receiver&lt;T&gt;::recv (46 samples, 0.09%)</title><rect x="40.6615%" y="1557" width="0.0945%" height="15" fill="rgb(251,202,51)" fg:x="19792" fg:w="46"/><text x="40.9115%" y="1567.50"></text></g><g><title>std::sync::mpmc::Receiver&lt;T&gt;::recv (46 samples, 0.09%)</title><rect x="40.6615%" y="1541" width="0.0945%" height="15" fill="rgb(254,216,34)" fg:x="19792" fg:w="46"/><text x="40.9115%" y="1551.50"></text></g><g><title>std::sync::mpmc::list::Channel&lt;T&gt;::recv (42 samples, 0.09%)</title><rect x="40.6697%" y="1525" width="0.0863%" height="15" fill="rgb(251,32,27)" fg:x="19796" fg:w="42"/><text x="40.9197%" y="1535.50"></text></g><g><title>std::sync::mpmc::list::Channel&lt;T&gt;::start_recv (6 samples, 0.01%)</title><rect x="40.7437%" y="1509" width="0.0123%" height="15" fill="rgb(208,127,28)" fg:x="19832" fg:w="6"/><text x="40.9937%" y="1519.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (6 samples, 0.01%)</title><rect x="40.7437%" y="1493" width="0.0123%" height="15" fill="rgb(224,137,22)" fg:x="19832" fg:w="6"/><text x="40.9937%" y="1503.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (6 samples, 0.01%)</title><rect x="40.7437%" y="1477" width="0.0123%" height="15" fill="rgb(254,70,32)" fg:x="19832" fg:w="6"/><text x="40.9937%" y="1487.50"></text></g><g><title>entry_SYSCALL_64 (12 samples, 0.02%)</title><rect x="40.7827%" y="1477" width="0.0247%" height="15" fill="rgb(229,75,37)" fg:x="19851" fg:w="12"/><text x="41.0327%" y="1487.50"></text></g><g><title>__perf_event_task_sched_out (6 samples, 0.01%)</title><rect x="40.9122%" y="1349" width="0.0123%" height="15" fill="rgb(252,64,23)" fg:x="19914" fg:w="6"/><text x="41.1622%" y="1359.50"></text></g><g><title>update_curr (15 samples, 0.03%)</title><rect x="40.9450%" y="1317" width="0.0308%" height="15" fill="rgb(232,162,48)" fg:x="19930" fg:w="15"/><text x="41.1950%" y="1327.50"></text></g><g><title>dequeue_entity (29 samples, 0.06%)</title><rect x="40.9327%" y="1333" width="0.0596%" height="15" fill="rgb(246,160,12)" fg:x="19924" fg:w="29"/><text x="41.1827%" y="1343.50"></text></g><g><title>update_load_avg (8 samples, 0.02%)</title><rect x="40.9759%" y="1317" width="0.0164%" height="15" fill="rgb(247,166,0)" fg:x="19945" fg:w="8"/><text x="41.2259%" y="1327.50"></text></g><g><title>reweight_entity (7 samples, 0.01%)</title><rect x="40.9923%" y="1333" width="0.0144%" height="15" fill="rgb(249,219,21)" fg:x="19953" fg:w="7"/><text x="41.2423%" y="1343.50"></text></g><g><title>set_next_buddy (6 samples, 0.01%)</title><rect x="41.0067%" y="1333" width="0.0123%" height="15" fill="rgb(205,209,3)" fg:x="19960" fg:w="6"/><text x="41.2567%" y="1343.50"></text></g><g><title>update_cfs_group (5 samples, 0.01%)</title><rect x="41.0190%" y="1333" width="0.0103%" height="15" fill="rgb(243,44,1)" fg:x="19966" fg:w="5"/><text x="41.2690%" y="1343.50"></text></g><g><title>dequeue_task_fair (53 samples, 0.11%)</title><rect x="40.9266%" y="1349" width="0.1089%" height="15" fill="rgb(206,159,16)" fg:x="19921" fg:w="53"/><text x="41.1766%" y="1359.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (69 samples, 0.14%)</title><rect x="41.0519%" y="1317" width="0.1418%" height="15" fill="rgb(244,77,30)" fg:x="19982" fg:w="69"/><text x="41.3019%" y="1327.50"></text></g><g><title>native_write_msr (68 samples, 0.14%)</title><rect x="41.0539%" y="1301" width="0.1397%" height="15" fill="rgb(218,69,12)" fg:x="19983" fg:w="68"/><text x="41.3039%" y="1311.50"></text></g><g><title>__perf_event_task_sched_in (75 samples, 0.15%)</title><rect x="41.0416%" y="1333" width="0.1541%" height="15" fill="rgb(212,87,7)" fg:x="19977" fg:w="75"/><text x="41.2916%" y="1343.50"></text></g><g><title>finish_task_switch.isra.0 (82 samples, 0.17%)</title><rect x="41.0354%" y="1349" width="0.1685%" height="15" fill="rgb(245,114,25)" fg:x="19974" fg:w="82"/><text x="41.2854%" y="1359.50"></text></g><g><title>load_balance (11 samples, 0.02%)</title><rect x="41.2162%" y="1317" width="0.0226%" height="15" fill="rgb(210,61,42)" fg:x="20062" fg:w="11"/><text x="41.4662%" y="1327.50"></text></g><g><title>newidle_balance (21 samples, 0.04%)</title><rect x="41.2101%" y="1333" width="0.0431%" height="15" fill="rgb(211,52,33)" fg:x="20059" fg:w="21"/><text x="41.4601%" y="1343.50"></text></g><g><title>update_blocked_averages (7 samples, 0.01%)</title><rect x="41.2388%" y="1317" width="0.0144%" height="15" fill="rgb(234,58,33)" fg:x="20073" fg:w="7"/><text x="41.4888%" y="1327.50"></text></g><g><title>pick_next_task_fair (30 samples, 0.06%)</title><rect x="41.2039%" y="1349" width="0.0616%" height="15" fill="rgb(220,115,36)" fg:x="20056" fg:w="30"/><text x="41.4539%" y="1359.50"></text></g><g><title>set_next_entity (5 samples, 0.01%)</title><rect x="41.2553%" y="1333" width="0.0103%" height="15" fill="rgb(243,153,54)" fg:x="20081" fg:w="5"/><text x="41.5053%" y="1343.50"></text></g><g><title>psi_task_switch (21 samples, 0.04%)</title><rect x="41.2696%" y="1349" width="0.0431%" height="15" fill="rgb(251,47,18)" fg:x="20088" fg:w="21"/><text x="41.5196%" y="1359.50"></text></g><g><title>psi_group_change (14 samples, 0.03%)</title><rect x="41.2840%" y="1333" width="0.0288%" height="15" fill="rgb(242,102,42)" fg:x="20095" fg:w="14"/><text x="41.5340%" y="1343.50"></text></g><g><title>futex_wait_queue (216 samples, 0.44%)</title><rect x="40.8752%" y="1397" width="0.4438%" height="15" fill="rgb(234,31,38)" fg:x="19896" fg:w="216"/><text x="41.1252%" y="1407.50"></text></g><g><title>schedule (211 samples, 0.43%)</title><rect x="40.8855%" y="1381" width="0.4335%" height="15" fill="rgb(221,117,51)" fg:x="19901" fg:w="211"/><text x="41.1355%" y="1391.50"></text></g><g><title>__schedule (207 samples, 0.43%)</title><rect x="40.8937%" y="1365" width="0.4253%" height="15" fill="rgb(212,20,18)" fg:x="19905" fg:w="207"/><text x="41.1437%" y="1375.50"></text></g><g><title>__x64_sys_futex (249 samples, 0.51%)</title><rect x="40.8300%" y="1445" width="0.5116%" height="15" fill="rgb(245,133,36)" fg:x="19874" fg:w="249"/><text x="41.0800%" y="1455.50"></text></g><g><title>do_futex (243 samples, 0.50%)</title><rect x="40.8423%" y="1429" width="0.4992%" height="15" fill="rgb(212,6,19)" fg:x="19880" fg:w="243"/><text x="41.0923%" y="1439.50"></text></g><g><title>futex_wait (235 samples, 0.48%)</title><rect x="40.8588%" y="1413" width="0.4828%" height="15" fill="rgb(218,1,36)" fg:x="19888" fg:w="235"/><text x="41.1088%" y="1423.50"></text></g><g><title>futex_wait_setup (11 samples, 0.02%)</title><rect x="41.3190%" y="1397" width="0.0226%" height="15" fill="rgb(246,84,54)" fg:x="20112" fg:w="11"/><text x="41.5690%" y="1407.50"></text></g><g><title>__rseq_handle_notify_resume (9 samples, 0.02%)</title><rect x="41.3600%" y="1413" width="0.0185%" height="15" fill="rgb(242,110,6)" fg:x="20132" fg:w="9"/><text x="41.6100%" y="1423.50"></text></g><g><title>__get_user_8 (7 samples, 0.01%)</title><rect x="41.3641%" y="1397" width="0.0144%" height="15" fill="rgb(214,47,5)" fg:x="20134" fg:w="7"/><text x="41.6141%" y="1407.50"></text></g><g><title>exit_to_user_mode_prepare (19 samples, 0.04%)</title><rect x="41.3518%" y="1429" width="0.0390%" height="15" fill="rgb(218,159,25)" fg:x="20128" fg:w="19"/><text x="41.6018%" y="1439.50"></text></g><g><title>switch_fpu_return (6 samples, 0.01%)</title><rect x="41.3785%" y="1413" width="0.0123%" height="15" fill="rgb(215,211,28)" fg:x="20141" fg:w="6"/><text x="41.6285%" y="1423.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (286 samples, 0.59%)</title><rect x="40.8074%" y="1477" width="0.5876%" height="15" fill="rgb(238,59,32)" fg:x="19863" fg:w="286"/><text x="41.0574%" y="1487.50"></text></g><g><title>do_syscall_64 (276 samples, 0.57%)</title><rect x="40.8279%" y="1461" width="0.5670%" height="15" fill="rgb(226,82,3)" fg:x="19873" fg:w="276"/><text x="41.0779%" y="1471.50"></text></g><g><title>syscall_exit_to_user_mode (25 samples, 0.05%)</title><rect x="41.3436%" y="1445" width="0.0514%" height="15" fill="rgb(240,164,32)" fg:x="20124" fg:w="25"/><text x="41.5936%" y="1455.50"></text></g><g><title>std::sys::unix::futex::futex_wait (316 samples, 0.65%)</title><rect x="40.7663%" y="1509" width="0.6492%" height="15" fill="rgb(232,46,7)" fg:x="19843" fg:w="316"/><text x="41.0163%" y="1519.50"></text></g><g><title>syscall (312 samples, 0.64%)</title><rect x="40.7745%" y="1493" width="0.6410%" height="15" fill="rgb(229,129,53)" fg:x="19847" fg:w="312"/><text x="41.0245%" y="1503.50"></text></g><g><title>syscall_return_via_sysret (10 samples, 0.02%)</title><rect x="41.3950%" y="1477" width="0.0205%" height="15" fill="rgb(234,188,29)" fg:x="20149" fg:w="10"/><text x="41.6450%" y="1487.50"></text></g><g><title>core::hint::spin_loop (269 samples, 0.55%)</title><rect x="41.4155%" y="1493" width="0.5526%" height="15" fill="rgb(246,141,4)" fg:x="20159" fg:w="269"/><text x="41.6655%" y="1503.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (269 samples, 0.55%)</title><rect x="41.4155%" y="1477" width="0.5526%" height="15" fill="rgb(229,23,39)" fg:x="20159" fg:w="269"/><text x="41.6655%" y="1487.50"></text></g><g><title>clone3 (679 samples, 1.39%)</title><rect x="40.6163%" y="1781" width="1.3950%" height="15" fill="rgb(206,12,3)" fg:x="19770" fg:w="679"/><text x="40.8663%" y="1791.50"></text></g><g><title>start_thread (679 samples, 1.39%)</title><rect x="40.6163%" y="1765" width="1.3950%" height="15" fill="rgb(252,226,20)" fg:x="19770" fg:w="679"/><text x="40.8663%" y="1775.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (679 samples, 1.39%)</title><rect x="40.6163%" y="1749" width="1.3950%" height="15" fill="rgb(216,123,35)" fg:x="19770" fg:w="679"/><text x="40.8663%" y="1759.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (679 samples, 1.39%)</title><rect x="40.6163%" y="1733" width="1.3950%" height="15" fill="rgb(212,68,40)" fg:x="19770" fg:w="679"/><text x="40.8663%" y="1743.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (679 samples, 1.39%)</title><rect x="40.6163%" y="1717" width="1.3950%" height="15" fill="rgb(254,125,32)" fg:x="19770" fg:w="679"/><text x="40.8663%" y="1727.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (679 samples, 1.39%)</title><rect x="40.6163%" y="1701" width="1.3950%" height="15" fill="rgb(253,97,22)" fg:x="19770" fg:w="679"/><text x="40.8663%" y="1711.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (679 samples, 1.39%)</title><rect x="40.6163%" y="1685" width="1.3950%" height="15" fill="rgb(241,101,14)" fg:x="19770" fg:w="679"/><text x="40.8663%" y="1695.50"></text></g><g><title>std::panic::catch_unwind (679 samples, 1.39%)</title><rect x="40.6163%" y="1669" width="1.3950%" height="15" fill="rgb(238,103,29)" fg:x="19770" fg:w="679"/><text x="40.8663%" y="1679.50"></text></g><g><title>std::panicking::try (679 samples, 1.39%)</title><rect x="40.6163%" y="1653" width="1.3950%" height="15" fill="rgb(233,195,47)" fg:x="19770" fg:w="679"/><text x="40.8663%" y="1663.50"></text></g><g><title>std::panicking::try::do_call (679 samples, 1.39%)</title><rect x="40.6163%" y="1637" width="1.3950%" height="15" fill="rgb(246,218,30)" fg:x="19770" fg:w="679"/><text x="40.8663%" y="1647.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (679 samples, 1.39%)</title><rect x="40.6163%" y="1621" width="1.3950%" height="15" fill="rgb(219,145,47)" fg:x="19770" fg:w="679"/><text x="40.8663%" y="1631.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (679 samples, 1.39%)</title><rect x="40.6163%" y="1605" width="1.3950%" height="15" fill="rgb(243,12,26)" fg:x="19770" fg:w="679"/><text x="40.8663%" y="1615.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (679 samples, 1.39%)</title><rect x="40.6163%" y="1589" width="1.3950%" height="15" fill="rgb(214,87,16)" fg:x="19770" fg:w="679"/><text x="40.8663%" y="1599.50"></text></g><g><title>engine::engine::match_engine::MatchEngine::run::{{closure}} (679 samples, 1.39%)</title><rect x="40.6163%" y="1573" width="1.3950%" height="15" fill="rgb(208,99,42)" fg:x="19770" fg:w="679"/><text x="40.8663%" y="1583.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (611 samples, 1.26%)</title><rect x="40.7560%" y="1557" width="1.2553%" height="15" fill="rgb(253,99,2)" fg:x="19838" fg:w="611"/><text x="41.0060%" y="1567.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (611 samples, 1.26%)</title><rect x="40.7560%" y="1541" width="1.2553%" height="15" fill="rgb(220,168,23)" fg:x="19838" fg:w="611"/><text x="41.0060%" y="1551.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock_contended (607 samples, 1.25%)</title><rect x="40.7643%" y="1525" width="1.2470%" height="15" fill="rgb(242,38,24)" fg:x="19842" fg:w="607"/><text x="41.0143%" y="1535.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::spin (290 samples, 0.60%)</title><rect x="41.4155%" y="1509" width="0.5958%" height="15" fill="rgb(225,182,9)" fg:x="20159" fg:w="290"/><text x="41.6655%" y="1519.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (21 samples, 0.04%)</title><rect x="41.9682%" y="1493" width="0.0431%" height="15" fill="rgb(243,178,37)" fg:x="20428" fg:w="21"/><text x="42.2182%" y="1503.50"></text></g><g><title>core::sync::atomic::atomic_load (21 samples, 0.04%)</title><rect x="41.9682%" y="1477" width="0.0431%" height="15" fill="rgb(232,139,19)" fg:x="20428" fg:w="21"/><text x="42.2182%" y="1487.50"></text></g><g><title>ORDER-ENTRY-THR (685 samples, 1.41%)</title><rect x="40.6122%" y="1797" width="1.4073%" height="15" fill="rgb(225,201,24)" fg:x="19768" fg:w="685"/><text x="40.8622%" y="1807.50"></text></g><g><title>__GI_epoll_ctl (7 samples, 0.01%)</title><rect x="42.0277%" y="1765" width="0.0144%" height="15" fill="rgb(221,47,46)" fg:x="20457" fg:w="7"/><text x="42.2777%" y="1775.50"></text></g><g><title>entry_SYSCALL_64 (46 samples, 0.09%)</title><rect x="42.0483%" y="1749" width="0.0945%" height="15" fill="rgb(249,23,13)" fg:x="20467" fg:w="46"/><text x="42.2983%" y="1759.50"></text></g><g><title>accept4 (47 samples, 0.10%)</title><rect x="42.0483%" y="1765" width="0.0966%" height="15" fill="rgb(219,9,5)" fg:x="20467" fg:w="47"/><text x="42.2983%" y="1775.50"></text></g><g><title>[[heap]] (79 samples, 0.16%)</title><rect x="42.0195%" y="1781" width="0.1623%" height="15" fill="rgb(254,171,16)" fg:x="20453" fg:w="79"/><text x="42.2695%" y="1791.50"></text></g><g><title>unlink_chunk (6 samples, 0.01%)</title><rect x="42.1695%" y="1765" width="0.0123%" height="15" fill="rgb(230,171,20)" fg:x="20526" fg:w="6"/><text x="42.4195%" y="1775.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (5 samples, 0.01%)</title><rect x="42.1818%" y="1765" width="0.0103%" height="15" fill="rgb(210,71,41)" fg:x="20532" fg:w="5"/><text x="42.4318%" y="1775.50"></text></g><g><title>parking_lot_core::parking_lot::park (5 samples, 0.01%)</title><rect x="42.1818%" y="1749" width="0.0103%" height="15" fill="rgb(206,173,20)" fg:x="20532" fg:w="5"/><text x="42.4318%" y="1759.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (5 samples, 0.01%)</title><rect x="42.1818%" y="1733" width="0.0103%" height="15" fill="rgb(233,88,34)" fg:x="20532" fg:w="5"/><text x="42.4318%" y="1743.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (5 samples, 0.01%)</title><rect x="42.1818%" y="1717" width="0.0103%" height="15" fill="rgb(223,209,46)" fg:x="20532" fg:w="5"/><text x="42.4318%" y="1727.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (5 samples, 0.01%)</title><rect x="42.1818%" y="1701" width="0.0103%" height="15" fill="rgb(250,43,18)" fg:x="20532" fg:w="5"/><text x="42.4318%" y="1711.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (5 samples, 0.01%)</title><rect x="42.1818%" y="1685" width="0.0103%" height="15" fill="rgb(208,13,10)" fg:x="20532" fg:w="5"/><text x="42.4318%" y="1695.50"></text></g><g><title>syscall (5 samples, 0.01%)</title><rect x="42.1818%" y="1669" width="0.0103%" height="15" fill="rgb(212,200,36)" fg:x="20532" fg:w="5"/><text x="42.4318%" y="1679.50"></text></g><g><title>entry_SYSCALL_64 (5 samples, 0.01%)</title><rect x="42.1818%" y="1653" width="0.0103%" height="15" fill="rgb(225,90,30)" fg:x="20532" fg:w="5"/><text x="42.4318%" y="1663.50"></text></g><g><title>tokio::runtime::scheduler::Handle::spawn (9 samples, 0.02%)</title><rect x="42.2003%" y="1765" width="0.0185%" height="15" fill="rgb(236,182,39)" fg:x="20541" fg:w="9"/><text x="42.4503%" y="1775.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::handle::Handle::spawn (6 samples, 0.01%)</title><rect x="42.2065%" y="1749" width="0.0123%" height="15" fill="rgb(212,144,35)" fg:x="20544" fg:w="6"/><text x="42.4565%" y="1759.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::handle::Handle::bind_new_task (6 samples, 0.01%)</title><rect x="42.2065%" y="1733" width="0.0123%" height="15" fill="rgb(228,63,44)" fg:x="20544" fg:w="6"/><text x="42.4565%" y="1743.50"></text></g><g><title>[[stack]] (21 samples, 0.04%)</title><rect x="42.1818%" y="1781" width="0.0431%" height="15" fill="rgb(228,109,6)" fg:x="20532" fg:w="21"/><text x="42.4318%" y="1791.50"></text></g><g><title>&lt;tokio::runtime::io::scheduled_io::Readiness as core::future::future::Future&gt;::poll (13 samples, 0.03%)</title><rect x="42.2373%" y="1765" width="0.0267%" height="15" fill="rgb(238,117,24)" fg:x="20559" fg:w="13"/><text x="42.4873%" y="1775.50"></text></g><g><title>&lt;tokio::runtime::io::scheduled_io::Readiness as core::ops::drop::Drop&gt;::drop (10 samples, 0.02%)</title><rect x="42.2640%" y="1765" width="0.0205%" height="15" fill="rgb(242,26,26)" fg:x="20572" fg:w="10"/><text x="42.5140%" y="1775.50"></text></g><g><title>entry_SYSCALL_64 (45 samples, 0.09%)</title><rect x="42.2866%" y="1749" width="0.0924%" height="15" fill="rgb(221,92,48)" fg:x="20583" fg:w="45"/><text x="42.5366%" y="1759.50"></text></g><g><title>__GI_epoll_ctl (46 samples, 0.09%)</title><rect x="42.2866%" y="1765" width="0.0945%" height="15" fill="rgb(209,209,32)" fg:x="20583" fg:w="46"/><text x="42.5366%" y="1775.50"></text></g><g><title>__rdl_alloc (11 samples, 0.02%)</title><rect x="42.3811%" y="1765" width="0.0226%" height="15" fill="rgb(221,70,22)" fg:x="20629" fg:w="11"/><text x="42.6311%" y="1775.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (9 samples, 0.02%)</title><rect x="42.3852%" y="1749" width="0.0185%" height="15" fill="rgb(248,145,5)" fg:x="20631" fg:w="9"/><text x="42.6352%" y="1759.50"></text></g><g><title>_int_free (6 samples, 0.01%)</title><rect x="42.4037%" y="1765" width="0.0123%" height="15" fill="rgb(226,116,26)" fg:x="20640" fg:w="6"/><text x="42.6537%" y="1775.50"></text></g><g><title>_mid_memalign (5 samples, 0.01%)</title><rect x="42.4242%" y="1765" width="0.0103%" height="15" fill="rgb(244,5,17)" fg:x="20650" fg:w="5"/><text x="42.6742%" y="1775.50"></text></g><g><title>malloc_consolidate (6 samples, 0.01%)</title><rect x="42.4345%" y="1765" width="0.0123%" height="15" fill="rgb(252,159,33)" fg:x="20655" fg:w="6"/><text x="42.6845%" y="1775.50"></text></g><g><title>tokio::runtime::park::CachedParkThread::block_on (17 samples, 0.03%)</title><rect x="42.4777%" y="1765" width="0.0349%" height="15" fill="rgb(206,71,0)" fg:x="20676" fg:w="17"/><text x="42.7277%" y="1775.50"></text></g><g><title>tokio::runtime::coop::budget (17 samples, 0.03%)</title><rect x="42.4777%" y="1749" width="0.0349%" height="15" fill="rgb(233,118,54)" fg:x="20676" fg:w="17"/><text x="42.7277%" y="1759.50"></text></g><g><title>tokio::runtime::coop::with_budget (17 samples, 0.03%)</title><rect x="42.4777%" y="1733" width="0.0349%" height="15" fill="rgb(234,83,48)" fg:x="20676" fg:w="17"/><text x="42.7277%" y="1743.50"></text></g><g><title>tokio::runtime::park::CachedParkThread::block_on::{{closure}} (17 samples, 0.03%)</title><rect x="42.4777%" y="1717" width="0.0349%" height="15" fill="rgb(228,3,54)" fg:x="20676" fg:w="17"/><text x="42.7277%" y="1727.50"></text></g><g><title>engine::main::{{closure}} (17 samples, 0.03%)</title><rect x="42.4777%" y="1701" width="0.0349%" height="15" fill="rgb(226,155,13)" fg:x="20676" fg:w="17"/><text x="42.7277%" y="1711.50"></text></g><g><title>engine::engine::match_server::MatchServer::run::{{closure}} (17 samples, 0.03%)</title><rect x="42.4777%" y="1685" width="0.0349%" height="15" fill="rgb(241,28,37)" fg:x="20676" fg:w="17"/><text x="42.7277%" y="1695.50"></text></g><g><title>tokio::net::tcp::listener::TcpListener::accept::{{closure}} (14 samples, 0.03%)</title><rect x="42.4838%" y="1669" width="0.0288%" height="15" fill="rgb(233,93,10)" fg:x="20679" fg:w="14"/><text x="42.7338%" y="1679.50"></text></g><g><title>tokio::runtime::io::registration::Registration::async_io::{{closure}} (12 samples, 0.02%)</title><rect x="42.4879%" y="1653" width="0.0247%" height="15" fill="rgb(225,113,19)" fg:x="20681" fg:w="12"/><text x="42.7379%" y="1663.50"></text></g><g><title>tokio::runtime::io::registration::Registration::readiness::{{closure}} (8 samples, 0.02%)</title><rect x="42.4961%" y="1637" width="0.0164%" height="15" fill="rgb(241,2,18)" fg:x="20685" fg:w="8"/><text x="42.7461%" y="1647.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::readiness::{{closure}} (8 samples, 0.02%)</title><rect x="42.4961%" y="1621" width="0.0164%" height="15" fill="rgb(228,207,21)" fg:x="20685" fg:w="8"/><text x="42.7461%" y="1631.50"></text></g><g><title>[unknown] (152 samples, 0.31%)</title><rect x="42.2332%" y="1781" width="0.3123%" height="15" fill="rgb(213,211,35)" fg:x="20557" fg:w="152"/><text x="42.4832%" y="1791.50"></text></g><g><title>tokio::task::spawn::spawn (9 samples, 0.02%)</title><rect x="42.5270%" y="1765" width="0.0185%" height="15" fill="rgb(209,83,10)" fg:x="20700" fg:w="9"/><text x="42.7770%" y="1775.50"></text></g><g><title>tokio::runtime::builder::Builder::build (6 samples, 0.01%)</title><rect x="42.5496%" y="1509" width="0.0123%" height="15" fill="rgb(209,164,1)" fg:x="20711" fg:w="6"/><text x="42.7996%" y="1519.50"></text></g><g><title>tokio::runtime::builder::Builder::build_threaded_runtime (6 samples, 0.01%)</title><rect x="42.5496%" y="1493" width="0.0123%" height="15" fill="rgb(213,184,43)" fg:x="20711" fg:w="6"/><text x="42.7996%" y="1503.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Launch::launch (6 samples, 0.01%)</title><rect x="42.5496%" y="1477" width="0.0123%" height="15" fill="rgb(231,61,34)" fg:x="20711" fg:w="6"/><text x="42.7996%" y="1487.50"></text></g><g><title>tokio::runtime::blocking::pool::spawn_blocking (6 samples, 0.01%)</title><rect x="42.5496%" y="1461" width="0.0123%" height="15" fill="rgb(235,75,3)" fg:x="20711" fg:w="6"/><text x="42.7996%" y="1471.50"></text></g><g><title>tokio::runtime::handle::Handle::spawn_blocking (6 samples, 0.01%)</title><rect x="42.5496%" y="1445" width="0.0123%" height="15" fill="rgb(220,106,47)" fg:x="20711" fg:w="6"/><text x="42.7996%" y="1455.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_blocking (6 samples, 0.01%)</title><rect x="42.5496%" y="1429" width="0.0123%" height="15" fill="rgb(210,196,33)" fg:x="20711" fg:w="6"/><text x="42.7996%" y="1439.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_blocking_inner (6 samples, 0.01%)</title><rect x="42.5496%" y="1413" width="0.0123%" height="15" fill="rgb(229,154,42)" fg:x="20711" fg:w="6"/><text x="42.7996%" y="1423.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_task (6 samples, 0.01%)</title><rect x="42.5496%" y="1397" width="0.0123%" height="15" fill="rgb(228,114,26)" fg:x="20711" fg:w="6"/><text x="42.7996%" y="1407.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (6 samples, 0.01%)</title><rect x="42.5496%" y="1381" width="0.0123%" height="15" fill="rgb(208,144,1)" fg:x="20711" fg:w="6"/><text x="42.7996%" y="1391.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (6 samples, 0.01%)</title><rect x="42.5496%" y="1365" width="0.0123%" height="15" fill="rgb(239,112,37)" fg:x="20711" fg:w="6"/><text x="42.7996%" y="1375.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (6 samples, 0.01%)</title><rect x="42.5496%" y="1349" width="0.0123%" height="15" fill="rgb(210,96,50)" fg:x="20711" fg:w="6"/><text x="42.7996%" y="1359.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (6 samples, 0.01%)</title><rect x="42.5496%" y="1333" width="0.0123%" height="15" fill="rgb(222,178,2)" fg:x="20711" fg:w="6"/><text x="42.7996%" y="1343.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (6 samples, 0.01%)</title><rect x="42.5496%" y="1317" width="0.0123%" height="15" fill="rgb(226,74,18)" fg:x="20711" fg:w="6"/><text x="42.7996%" y="1327.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (6 samples, 0.01%)</title><rect x="42.5496%" y="1301" width="0.0123%" height="15" fill="rgb(225,67,54)" fg:x="20711" fg:w="6"/><text x="42.7996%" y="1311.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (6 samples, 0.01%)</title><rect x="42.5496%" y="1285" width="0.0123%" height="15" fill="rgb(251,92,32)" fg:x="20711" fg:w="6"/><text x="42.7996%" y="1295.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_resize (6 samples, 0.01%)</title><rect x="42.5496%" y="1269" width="0.0123%" height="15" fill="rgb(228,149,22)" fg:x="20711" fg:w="6"/><text x="42.7996%" y="1279.50"></text></g><g><title>hashbrown::raw::RawTableInner::fallible_with_capacity (6 samples, 0.01%)</title><rect x="42.5496%" y="1253" width="0.0123%" height="15" fill="rgb(243,54,13)" fg:x="20711" fg:w="6"/><text x="42.7996%" y="1263.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (6 samples, 0.01%)</title><rect x="42.5496%" y="1237" width="0.0123%" height="15" fill="rgb(243,180,28)" fg:x="20711" fg:w="6"/><text x="42.7996%" y="1247.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (6 samples, 0.01%)</title><rect x="42.5496%" y="1221" width="0.0123%" height="15" fill="rgb(208,167,24)" fg:x="20711" fg:w="6"/><text x="42.7996%" y="1231.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.01%)</title><rect x="42.5496%" y="1205" width="0.0123%" height="15" fill="rgb(245,73,45)" fg:x="20711" fg:w="6"/><text x="42.7996%" y="1215.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.01%)</title><rect x="42.5496%" y="1189" width="0.0123%" height="15" fill="rgb(237,203,48)" fg:x="20711" fg:w="6"/><text x="42.7996%" y="1199.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.01%)</title><rect x="42.5496%" y="1173" width="0.0123%" height="15" fill="rgb(211,197,16)" fg:x="20711" fg:w="6"/><text x="42.7996%" y="1183.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.01%)</title><rect x="42.5496%" y="1157" width="0.0123%" height="15" fill="rgb(243,99,51)" fg:x="20711" fg:w="6"/><text x="42.7996%" y="1167.50"></text></g><g><title>_int_malloc (6 samples, 0.01%)</title><rect x="42.5496%" y="1141" width="0.0123%" height="15" fill="rgb(215,123,29)" fg:x="20711" fg:w="6"/><text x="42.7996%" y="1151.50"></text></g><g><title>asm_exc_page_fault (5 samples, 0.01%)</title><rect x="42.5516%" y="1125" width="0.0103%" height="15" fill="rgb(239,186,37)" fg:x="20712" fg:w="5"/><text x="42.8016%" y="1135.50"></text></g><g><title>exc_page_fault (5 samples, 0.01%)</title><rect x="42.5516%" y="1109" width="0.0103%" height="15" fill="rgb(252,136,39)" fg:x="20712" fg:w="5"/><text x="42.8016%" y="1119.50"></text></g><g><title>do_user_addr_fault (5 samples, 0.01%)</title><rect x="42.5516%" y="1093" width="0.0103%" height="15" fill="rgb(223,213,32)" fg:x="20712" fg:w="5"/><text x="42.8016%" y="1103.50"></text></g><g><title>lock_mm_and_find_vma (5 samples, 0.01%)</title><rect x="42.5516%" y="1077" width="0.0103%" height="15" fill="rgb(233,115,5)" fg:x="20712" fg:w="5"/><text x="42.8016%" y="1087.50"></text></g><g><title>down_read_killable (5 samples, 0.01%)</title><rect x="42.5516%" y="1061" width="0.0103%" height="15" fill="rgb(207,226,44)" fg:x="20712" fg:w="5"/><text x="42.8016%" y="1071.50"></text></g><g><title>rwsem_down_read_slowpath (5 samples, 0.01%)</title><rect x="42.5516%" y="1045" width="0.0103%" height="15" fill="rgb(208,126,0)" fg:x="20712" fg:w="5"/><text x="42.8016%" y="1055.50"></text></g><g><title>schedule_preempt_disabled (5 samples, 0.01%)</title><rect x="42.5516%" y="1029" width="0.0103%" height="15" fill="rgb(244,66,21)" fg:x="20712" fg:w="5"/><text x="42.8016%" y="1039.50"></text></g><g><title>schedule (5 samples, 0.01%)</title><rect x="42.5516%" y="1013" width="0.0103%" height="15" fill="rgb(222,97,12)" fg:x="20712" fg:w="5"/><text x="42.8016%" y="1023.50"></text></g><g><title>__schedule (5 samples, 0.01%)</title><rect x="42.5516%" y="997" width="0.0103%" height="15" fill="rgb(219,213,19)" fg:x="20712" fg:w="5"/><text x="42.8016%" y="1007.50"></text></g><g><title>finish_task_switch.isra.0 (5 samples, 0.01%)</title><rect x="42.5516%" y="981" width="0.0103%" height="15" fill="rgb(252,169,30)" fg:x="20712" fg:w="5"/><text x="42.8016%" y="991.50"></text></g><g><title>__perf_event_task_sched_in (5 samples, 0.01%)</title><rect x="42.5516%" y="965" width="0.0103%" height="15" fill="rgb(206,32,51)" fg:x="20712" fg:w="5"/><text x="42.8016%" y="975.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (5 samples, 0.01%)</title><rect x="42.5516%" y="949" width="0.0103%" height="15" fill="rgb(250,172,42)" fg:x="20712" fg:w="5"/><text x="42.8016%" y="959.50"></text></g><g><title>native_write_msr (5 samples, 0.01%)</title><rect x="42.5516%" y="933" width="0.0103%" height="15" fill="rgb(209,34,43)" fg:x="20712" fg:w="5"/><text x="42.8016%" y="943.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (9 samples, 0.02%)</title><rect x="42.6030%" y="1333" width="0.0185%" height="15" fill="rgb(223,11,35)" fg:x="20737" fg:w="9"/><text x="42.8530%" y="1343.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (9 samples, 0.02%)</title><rect x="42.6030%" y="1317" width="0.0185%" height="15" fill="rgb(251,219,26)" fg:x="20737" fg:w="9"/><text x="42.8530%" y="1327.50"></text></g><g><title>core::sync::atomic::atomic_add (9 samples, 0.02%)</title><rect x="42.6030%" y="1301" width="0.0185%" height="15" fill="rgb(231,119,3)" fg:x="20737" fg:w="9"/><text x="42.8530%" y="1311.50"></text></g><g><title>&lt;std::sync::mpsc::Sender&lt;T&gt; as core::clone::Clone&gt;::clone (9 samples, 0.02%)</title><rect x="42.6215%" y="1333" width="0.0185%" height="15" fill="rgb(216,97,11)" fg:x="20746" fg:w="9"/><text x="42.8715%" y="1343.50"></text></g><g><title>&lt;std::sync::mpmc::Sender&lt;T&gt; as core::clone::Clone&gt;::clone (9 samples, 0.02%)</title><rect x="42.6215%" y="1317" width="0.0185%" height="15" fill="rgb(223,59,9)" fg:x="20746" fg:w="9"/><text x="42.8715%" y="1327.50"></text></g><g><title>std::sync::mpmc::counter::Sender&lt;C&gt;::acquire (9 samples, 0.02%)</title><rect x="42.6215%" y="1301" width="0.0185%" height="15" fill="rgb(233,93,31)" fg:x="20746" fg:w="9"/><text x="42.8715%" y="1311.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (9 samples, 0.02%)</title><rect x="42.6215%" y="1285" width="0.0185%" height="15" fill="rgb(239,81,33)" fg:x="20746" fg:w="9"/><text x="42.8715%" y="1295.50"></text></g><g><title>core::sync::atomic::atomic_add (9 samples, 0.02%)</title><rect x="42.6215%" y="1269" width="0.0185%" height="15" fill="rgb(213,120,34)" fg:x="20746" fg:w="9"/><text x="42.8715%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::join::JoinHandle&lt;()&gt;&gt; (23 samples, 0.05%)</title><rect x="42.6482%" y="1333" width="0.0473%" height="15" fill="rgb(243,49,53)" fg:x="20759" fg:w="23"/><text x="42.8982%" y="1343.50"></text></g><g><title>&lt;tokio::runtime::task::join::JoinHandle&lt;T&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.05%)</title><rect x="42.6482%" y="1317" width="0.0473%" height="15" fill="rgb(247,216,33)" fg:x="20759" fg:w="23"/><text x="42.8982%" y="1327.50"></text></g><g><title>tokio::runtime::task::state::State::drop_join_handle_fast (12 samples, 0.02%)</title><rect x="42.6708%" y="1301" width="0.0247%" height="15" fill="rgb(226,26,14)" fg:x="20770" fg:w="12"/><text x="42.9208%" y="1311.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (6 samples, 0.01%)</title><rect x="42.6831%" y="1285" width="0.0123%" height="15" fill="rgb(215,49,53)" fg:x="20776" fg:w="6"/><text x="42.9331%" y="1295.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (6 samples, 0.01%)</title><rect x="42.6831%" y="1269" width="0.0123%" height="15" fill="rgb(245,162,40)" fg:x="20776" fg:w="6"/><text x="42.9331%" y="1279.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (17 samples, 0.03%)</title><rect x="42.6954%" y="1333" width="0.0349%" height="15" fill="rgb(229,68,17)" fg:x="20782" fg:w="17"/><text x="42.9454%" y="1343.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (16 samples, 0.03%)</title><rect x="42.6975%" y="1317" width="0.0329%" height="15" fill="rgb(213,182,10)" fg:x="20783" fg:w="16"/><text x="42.9475%" y="1327.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (15 samples, 0.03%)</title><rect x="42.6995%" y="1301" width="0.0308%" height="15" fill="rgb(245,125,30)" fg:x="20784" fg:w="15"/><text x="42.9495%" y="1311.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (15 samples, 0.03%)</title><rect x="42.6995%" y="1285" width="0.0308%" height="15" fill="rgb(232,202,2)" fg:x="20784" fg:w="15"/><text x="42.9495%" y="1295.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (8 samples, 0.02%)</title><rect x="42.7406%" y="1301" width="0.0164%" height="15" fill="rgb(237,140,51)" fg:x="20804" fg:w="8"/><text x="42.9906%" y="1311.50"></text></g><g><title>tokio::runtime::driver::Handle::io (6 samples, 0.01%)</title><rect x="42.7714%" y="1237" width="0.0123%" height="15" fill="rgb(236,157,25)" fg:x="20819" fg:w="6"/><text x="43.0214%" y="1247.50"></text></g><g><title>tokio::runtime::driver::IoHandle::as_ref (6 samples, 0.01%)</title><rect x="42.7714%" y="1221" width="0.0123%" height="15" fill="rgb(219,209,0)" fg:x="20819" fg:w="6"/><text x="43.0214%" y="1231.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (10 samples, 0.02%)</title><rect x="42.8023%" y="1157" width="0.0205%" height="15" fill="rgb(240,116,54)" fg:x="20834" fg:w="10"/><text x="43.0523%" y="1167.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (10 samples, 0.02%)</title><rect x="42.8023%" y="1141" width="0.0205%" height="15" fill="rgb(216,10,36)" fg:x="20834" fg:w="10"/><text x="43.0523%" y="1151.50"></text></g><g><title>__x64_sys_futex (5 samples, 0.01%)</title><rect x="42.8249%" y="1109" width="0.0103%" height="15" fill="rgb(222,72,44)" fg:x="20845" fg:w="5"/><text x="43.0749%" y="1119.50"></text></g><g><title>do_futex (5 samples, 0.01%)</title><rect x="42.8249%" y="1093" width="0.0103%" height="15" fill="rgb(232,159,9)" fg:x="20845" fg:w="5"/><text x="43.0749%" y="1103.50"></text></g><g><title>futex_wake (5 samples, 0.01%)</title><rect x="42.8249%" y="1077" width="0.0103%" height="15" fill="rgb(210,39,32)" fg:x="20845" fg:w="5"/><text x="43.0749%" y="1087.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (6 samples, 0.01%)</title><rect x="42.8249%" y="1141" width="0.0123%" height="15" fill="rgb(216,194,45)" fg:x="20845" fg:w="6"/><text x="43.0749%" y="1151.50"></text></g><g><title>do_syscall_64 (6 samples, 0.01%)</title><rect x="42.8249%" y="1125" width="0.0123%" height="15" fill="rgb(218,18,35)" fg:x="20845" fg:w="6"/><text x="43.0749%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::io::registration_set::Synced&gt;&gt; (18 samples, 0.04%)</title><rect x="42.8023%" y="1221" width="0.0370%" height="15" fill="rgb(207,83,51)" fg:x="20834" fg:w="18"/><text x="43.0523%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::io::registration_set::Synced&gt;&gt; (18 samples, 0.04%)</title><rect x="42.8023%" y="1205" width="0.0370%" height="15" fill="rgb(225,63,43)" fg:x="20834" fg:w="18"/><text x="43.0523%" y="1215.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.04%)</title><rect x="42.8023%" y="1189" width="0.0370%" height="15" fill="rgb(207,57,36)" fg:x="20834" fg:w="18"/><text x="43.0523%" y="1199.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (18 samples, 0.04%)</title><rect x="42.8023%" y="1173" width="0.0370%" height="15" fill="rgb(216,99,33)" fg:x="20834" fg:w="18"/><text x="43.0523%" y="1183.50"></text></g><g><title>syscall (7 samples, 0.01%)</title><rect x="42.8249%" y="1157" width="0.0144%" height="15" fill="rgb(225,42,16)" fg:x="20845" fg:w="7"/><text x="43.0749%" y="1167.50"></text></g><g><title>entry_SYSCALL_64 (9 samples, 0.02%)</title><rect x="42.8927%" y="1125" width="0.0185%" height="15" fill="rgb(220,201,45)" fg:x="20878" fg:w="9"/><text x="43.1427%" y="1135.50"></text></g><g><title>copy_user_enhanced_fast_string (5 samples, 0.01%)</title><rect x="43.1310%" y="1061" width="0.0103%" height="15" fill="rgb(225,33,4)" fg:x="20994" fg:w="5"/><text x="43.3810%" y="1071.50"></text></g><g><title>_copy_from_user (25 samples, 0.05%)</title><rect x="43.1145%" y="1077" width="0.0514%" height="15" fill="rgb(224,33,50)" fg:x="20986" fg:w="25"/><text x="43.3645%" y="1087.50"></text></g><g><title>copy_user_short_string (12 samples, 0.02%)</title><rect x="43.1412%" y="1061" width="0.0247%" height="15" fill="rgb(246,198,51)" fg:x="20999" fg:w="12"/><text x="43.3912%" y="1071.50"></text></g><g><title>__fget_light (37 samples, 0.08%)</title><rect x="43.4001%" y="1061" width="0.0760%" height="15" fill="rgb(205,22,4)" fg:x="21125" fg:w="37"/><text x="43.6501%" y="1071.50"></text></g><g><title>mutex_spin_on_owner (20 samples, 0.04%)</title><rect x="43.5008%" y="1045" width="0.0411%" height="15" fill="rgb(206,3,8)" fg:x="21174" fg:w="20"/><text x="43.7508%" y="1055.50"></text></g><g><title>__mutex_lock.constprop.0 (32 samples, 0.07%)</title><rect x="43.4843%" y="1061" width="0.0657%" height="15" fill="rgb(251,23,15)" fg:x="21166" fg:w="32"/><text x="43.7343%" y="1071.50"></text></g><g><title>select_task_rq_fair (5 samples, 0.01%)</title><rect x="43.5562%" y="1013" width="0.0103%" height="15" fill="rgb(252,88,28)" fg:x="21201" fg:w="5"/><text x="43.8062%" y="1023.50"></text></g><g><title>__mutex_unlock_slowpath.constprop.0 (10 samples, 0.02%)</title><rect x="43.5501%" y="1061" width="0.0205%" height="15" fill="rgb(212,127,14)" fg:x="21198" fg:w="10"/><text x="43.8001%" y="1071.50"></text></g><g><title>wake_up_q (8 samples, 0.02%)</title><rect x="43.5542%" y="1045" width="0.0164%" height="15" fill="rgb(247,145,37)" fg:x="21200" fg:w="8"/><text x="43.8042%" y="1055.50"></text></g><g><title>try_to_wake_up (8 samples, 0.02%)</title><rect x="43.5542%" y="1029" width="0.0164%" height="15" fill="rgb(209,117,53)" fg:x="21200" fg:w="8"/><text x="43.8042%" y="1039.50"></text></g><g><title>_raw_spin_lock (6 samples, 0.01%)</title><rect x="43.7001%" y="997" width="0.0123%" height="15" fill="rgb(212,90,42)" fg:x="21271" fg:w="6"/><text x="43.9501%" y="1007.50"></text></g><g><title>available_idle_cpu (9 samples, 0.02%)</title><rect x="43.7822%" y="981" width="0.0185%" height="15" fill="rgb(218,164,37)" fg:x="21311" fg:w="9"/><text x="44.0322%" y="991.50"></text></g><g><title>select_task_rq_fair (45 samples, 0.09%)</title><rect x="43.7227%" y="997" width="0.0924%" height="15" fill="rgb(246,65,34)" fg:x="21282" fg:w="45"/><text x="43.9727%" y="1007.50"></text></g><g><title>task_h_load (6 samples, 0.01%)</title><rect x="43.8028%" y="981" width="0.0123%" height="15" fill="rgb(231,100,33)" fg:x="21321" fg:w="6"/><text x="44.0528%" y="991.50"></text></g><g><title>update_curr (8 samples, 0.02%)</title><rect x="43.8665%" y="949" width="0.0164%" height="15" fill="rgb(228,126,14)" fg:x="21352" fg:w="8"/><text x="44.1165%" y="959.50"></text></g><g><title>enqueue_entity (26 samples, 0.05%)</title><rect x="43.8398%" y="965" width="0.0534%" height="15" fill="rgb(215,173,21)" fg:x="21339" fg:w="26"/><text x="44.0898%" y="975.50"></text></g><g><title>update_load_avg (5 samples, 0.01%)</title><rect x="43.8829%" y="949" width="0.0103%" height="15" fill="rgb(210,6,40)" fg:x="21360" fg:w="5"/><text x="44.1329%" y="959.50"></text></g><g><title>__calc_delta (6 samples, 0.01%)</title><rect x="43.9178%" y="933" width="0.0123%" height="15" fill="rgb(212,48,18)" fg:x="21377" fg:w="6"/><text x="44.1678%" y="943.50"></text></g><g><title>reweight_entity (20 samples, 0.04%)</title><rect x="43.8932%" y="965" width="0.0411%" height="15" fill="rgb(230,214,11)" fg:x="21365" fg:w="20"/><text x="44.1432%" y="975.50"></text></g><g><title>update_curr (10 samples, 0.02%)</title><rect x="43.9137%" y="949" width="0.0205%" height="15" fill="rgb(254,105,39)" fg:x="21375" fg:w="10"/><text x="44.1637%" y="959.50"></text></g><g><title>update_cfs_group (14 samples, 0.03%)</title><rect x="43.9343%" y="965" width="0.0288%" height="15" fill="rgb(245,158,5)" fg:x="21385" fg:w="14"/><text x="44.1843%" y="975.50"></text></g><g><title>enqueue_task_fair (92 samples, 0.19%)</title><rect x="43.8213%" y="981" width="0.1890%" height="15" fill="rgb(249,208,11)" fg:x="21330" fg:w="92"/><text x="44.0713%" y="991.50"></text></g><g><title>update_load_avg (23 samples, 0.05%)</title><rect x="43.9630%" y="965" width="0.0473%" height="15" fill="rgb(210,39,28)" fg:x="21399" fg:w="23"/><text x="44.2130%" y="975.50"></text></g><g><title>psi_group_change (31 samples, 0.06%)</title><rect x="44.0205%" y="965" width="0.0637%" height="15" fill="rgb(211,56,53)" fg:x="21427" fg:w="31"/><text x="44.2705%" y="975.50"></text></g><g><title>ttwu_do_activate (132 samples, 0.27%)</title><rect x="43.8192%" y="997" width="0.2712%" height="15" fill="rgb(226,201,30)" fg:x="21329" fg:w="132"/><text x="44.0692%" y="1007.50"></text></g><g><title>psi_task_change (39 samples, 0.08%)</title><rect x="44.0103%" y="981" width="0.0801%" height="15" fill="rgb(239,101,34)" fg:x="21422" fg:w="39"/><text x="44.2603%" y="991.50"></text></g><g><title>resched_curr (5 samples, 0.01%)</title><rect x="44.1109%" y="949" width="0.0103%" height="15" fill="rgb(226,209,5)" fg:x="21471" fg:w="5"/><text x="44.3609%" y="959.50"></text></g><g><title>ttwu_do_wakeup (18 samples, 0.04%)</title><rect x="44.0904%" y="997" width="0.0370%" height="15" fill="rgb(250,105,47)" fg:x="21461" fg:w="18"/><text x="44.3404%" y="1007.50"></text></g><g><title>check_preempt_curr (16 samples, 0.03%)</title><rect x="44.0945%" y="981" width="0.0329%" height="15" fill="rgb(230,72,3)" fg:x="21463" fg:w="16"/><text x="44.3445%" y="991.50"></text></g><g><title>check_preempt_wakeup (12 samples, 0.02%)</title><rect x="44.1027%" y="965" width="0.0247%" height="15" fill="rgb(232,218,39)" fg:x="21467" fg:w="12"/><text x="44.3527%" y="975.50"></text></g><g><title>__smp_call_single_queue (8 samples, 0.02%)</title><rect x="44.1397%" y="981" width="0.0164%" height="15" fill="rgb(248,166,6)" fg:x="21485" fg:w="8"/><text x="44.3897%" y="991.50"></text></g><g><title>llist_add_batch (7 samples, 0.01%)</title><rect x="44.1418%" y="965" width="0.0144%" height="15" fill="rgb(247,89,20)" fg:x="21486" fg:w="7"/><text x="44.3918%" y="975.50"></text></g><g><title>ttwu_queue_wakelist (16 samples, 0.03%)</title><rect x="44.1274%" y="997" width="0.0329%" height="15" fill="rgb(248,130,54)" fg:x="21479" fg:w="16"/><text x="44.3774%" y="1007.50"></text></g><g><title>__wake_up_common (288 samples, 0.59%)</title><rect x="43.5850%" y="1045" width="0.5917%" height="15" fill="rgb(234,196,4)" fg:x="21215" fg:w="288"/><text x="43.8350%" y="1055.50"></text></g><g><title>ep_autoremove_wake_function (285 samples, 0.59%)</title><rect x="43.5912%" y="1029" width="0.5855%" height="15" fill="rgb(250,143,31)" fg:x="21218" fg:w="285"/><text x="43.8412%" y="1039.50"></text></g><g><title>try_to_wake_up (282 samples, 0.58%)</title><rect x="43.5973%" y="1013" width="0.5794%" height="15" fill="rgb(211,110,34)" fg:x="21221" fg:w="282"/><text x="43.8473%" y="1023.50"></text></g><g><title>update_rq_clock (8 samples, 0.02%)</title><rect x="44.1602%" y="997" width="0.0164%" height="15" fill="rgb(215,124,48)" fg:x="21495" fg:w="8"/><text x="44.4102%" y="1007.50"></text></g><g><title>__wake_up_common_lock (295 samples, 0.61%)</title><rect x="43.5768%" y="1061" width="0.6061%" height="15" fill="rgb(216,46,13)" fg:x="21211" fg:w="295"/><text x="43.8268%" y="1071.50"></text></g><g><title>_raw_spin_lock (7 samples, 0.01%)</title><rect x="44.1828%" y="1061" width="0.0144%" height="15" fill="rgb(205,184,25)" fg:x="21506" fg:w="7"/><text x="44.4328%" y="1071.50"></text></g><g><title>_raw_write_lock_irq (10 samples, 0.02%)</title><rect x="44.2013%" y="1061" width="0.0205%" height="15" fill="rgb(228,1,10)" fg:x="21515" fg:w="10"/><text x="44.4513%" y="1071.50"></text></g><g><title>asm_sysvec_reschedule_ipi (5 samples, 0.01%)</title><rect x="44.2280%" y="1045" width="0.0103%" height="15" fill="rgb(213,116,27)" fg:x="21528" fg:w="5"/><text x="44.4780%" y="1055.50"></text></g><g><title>_raw_write_unlock_irq (9 samples, 0.02%)</title><rect x="44.2219%" y="1061" width="0.0185%" height="15" fill="rgb(241,95,50)" fg:x="21525" fg:w="9"/><text x="44.4719%" y="1071.50"></text></g><g><title>_raw_spin_unlock_irqrestore (5 samples, 0.01%)</title><rect x="44.4027%" y="997" width="0.0103%" height="15" fill="rgb(238,48,32)" fg:x="21613" fg:w="5"/><text x="44.6527%" y="1007.50"></text></g><g><title>add_wait_queue (19 samples, 0.04%)</title><rect x="44.4129%" y="997" width="0.0390%" height="15" fill="rgb(235,113,49)" fg:x="21618" fg:w="19"/><text x="44.6629%" y="1007.50"></text></g><g><title>_raw_spin_lock_irqsave (10 samples, 0.02%)</title><rect x="44.4314%" y="981" width="0.0205%" height="15" fill="rgb(205,127,43)" fg:x="21627" fg:w="10"/><text x="44.6814%" y="991.50"></text></g><g><title>__get_obj_cgroup_from_memcg (5 samples, 0.01%)</title><rect x="44.5095%" y="965" width="0.0103%" height="15" fill="rgb(250,162,2)" fg:x="21665" fg:w="5"/><text x="44.7595%" y="975.50"></text></g><g><title>get_obj_cgroup_from_current (19 samples, 0.04%)</title><rect x="44.4951%" y="981" width="0.0390%" height="15" fill="rgb(220,13,41)" fg:x="21658" fg:w="19"/><text x="44.7451%" y="991.50"></text></g><g><title>__rcu_read_unlock (6 samples, 0.01%)</title><rect x="44.5218%" y="965" width="0.0123%" height="15" fill="rgb(249,221,25)" fg:x="21671" fg:w="6"/><text x="44.7718%" y="975.50"></text></g><g><title>memcg_slab_post_alloc_hook (21 samples, 0.04%)</title><rect x="44.5342%" y="981" width="0.0431%" height="15" fill="rgb(215,208,19)" fg:x="21677" fg:w="21"/><text x="44.7842%" y="991.50"></text></g><g><title>mod_objcg_state (6 samples, 0.01%)</title><rect x="44.5650%" y="965" width="0.0123%" height="15" fill="rgb(236,175,2)" fg:x="21692" fg:w="6"/><text x="44.8150%" y="975.50"></text></g><g><title>memset_erms (6 samples, 0.01%)</title><rect x="44.5773%" y="981" width="0.0123%" height="15" fill="rgb(241,52,2)" fg:x="21698" fg:w="6"/><text x="44.8273%" y="991.50"></text></g><g><title>obj_cgroup_charge (11 samples, 0.02%)</title><rect x="44.5896%" y="981" width="0.0226%" height="15" fill="rgb(248,140,14)" fg:x="21704" fg:w="11"/><text x="44.8396%" y="991.50"></text></g><g><title>ep_ptable_queue_proc (120 samples, 0.25%)</title><rect x="44.3677%" y="1013" width="0.2465%" height="15" fill="rgb(253,22,42)" fg:x="21596" fg:w="120"/><text x="44.6177%" y="1023.50"></text></g><g><title>kmem_cache_alloc (79 samples, 0.16%)</title><rect x="44.4520%" y="997" width="0.1623%" height="15" fill="rgb(234,61,47)" fg:x="21637" fg:w="79"/><text x="44.7020%" y="1007.50"></text></g><g><title>ep_item_poll.isra.0 (190 samples, 0.39%)</title><rect x="44.2424%" y="1061" width="0.3903%" height="15" fill="rgb(208,226,15)" fg:x="21535" fg:w="190"/><text x="44.4924%" y="1071.50"></text></g><g><title>sock_poll (189 samples, 0.39%)</title><rect x="44.2445%" y="1045" width="0.3883%" height="15" fill="rgb(217,221,4)" fg:x="21536" fg:w="189"/><text x="44.4945%" y="1055.50"></text></g><g><title>tcp_poll (169 samples, 0.35%)</title><rect x="44.2856%" y="1029" width="0.3472%" height="15" fill="rgb(212,174,34)" fg:x="21556" fg:w="169"/><text x="44.5356%" y="1039.50"></text></g><g><title>tcp_stream_memory_free (9 samples, 0.02%)</title><rect x="44.6143%" y="1013" width="0.0185%" height="15" fill="rgb(253,83,4)" fg:x="21716" fg:w="9"/><text x="44.8643%" y="1023.50"></text></g><g><title>fput (10 samples, 0.02%)</title><rect x="44.6328%" y="1061" width="0.0205%" height="15" fill="rgb(250,195,49)" fg:x="21725" fg:w="10"/><text x="44.8828%" y="1071.50"></text></g><g><title>___slab_alloc (28 samples, 0.06%)</title><rect x="44.7499%" y="1045" width="0.0575%" height="15" fill="rgb(241,192,25)" fg:x="21782" fg:w="28"/><text x="44.9999%" y="1055.50"></text></g><g><title>get_partial_node.part.0 (9 samples, 0.02%)</title><rect x="44.7889%" y="1029" width="0.0185%" height="15" fill="rgb(208,124,10)" fg:x="21801" fg:w="9"/><text x="45.0389%" y="1039.50"></text></g><g><title>__cond_resched (5 samples, 0.01%)</title><rect x="44.8074%" y="1045" width="0.0103%" height="15" fill="rgb(222,33,0)" fg:x="21810" fg:w="5"/><text x="45.0574%" y="1055.50"></text></g><g><title>__get_obj_cgroup_from_memcg (25 samples, 0.05%)</title><rect x="44.8526%" y="1029" width="0.0514%" height="15" fill="rgb(234,209,28)" fg:x="21832" fg:w="25"/><text x="45.1026%" y="1039.50"></text></g><g><title>get_obj_cgroup_from_current (43 samples, 0.09%)</title><rect x="44.8238%" y="1045" width="0.0883%" height="15" fill="rgb(224,11,23)" fg:x="21818" fg:w="43"/><text x="45.0738%" y="1055.50"></text></g><g><title>memcg_slab_post_alloc_hook (52 samples, 0.11%)</title><rect x="44.9122%" y="1045" width="0.1068%" height="15" fill="rgb(232,99,1)" fg:x="21861" fg:w="52"/><text x="45.1622%" y="1055.50"></text></g><g><title>mod_objcg_state (11 samples, 0.02%)</title><rect x="44.9964%" y="1029" width="0.0226%" height="15" fill="rgb(237,95,45)" fg:x="21902" fg:w="11"/><text x="45.2464%" y="1039.50"></text></g><g><title>memset_erms (12 samples, 0.02%)</title><rect x="45.0211%" y="1045" width="0.0247%" height="15" fill="rgb(208,109,11)" fg:x="21914" fg:w="12"/><text x="45.2711%" y="1055.50"></text></g><g><title>kmem_cache_alloc (210 samples, 0.43%)</title><rect x="44.6533%" y="1061" width="0.4314%" height="15" fill="rgb(216,190,48)" fg:x="21735" fg:w="210"/><text x="44.9033%" y="1071.50"></text></g><g><title>obj_cgroup_charge (19 samples, 0.04%)</title><rect x="45.0457%" y="1045" width="0.0390%" height="15" fill="rgb(251,171,36)" fg:x="21926" fg:w="19"/><text x="45.2957%" y="1055.50"></text></g><g><title>__cond_resched (5 samples, 0.01%)</title><rect x="45.1156%" y="1045" width="0.0103%" height="15" fill="rgb(230,62,22)" fg:x="21960" fg:w="5"/><text x="45.3656%" y="1055.50"></text></g><g><title>preempt_schedule_common (5 samples, 0.01%)</title><rect x="45.1156%" y="1029" width="0.0103%" height="15" fill="rgb(225,114,35)" fg:x="21960" fg:w="5"/><text x="45.3656%" y="1039.50"></text></g><g><title>__schedule (5 samples, 0.01%)</title><rect x="45.1156%" y="1013" width="0.0103%" height="15" fill="rgb(215,118,42)" fg:x="21960" fg:w="5"/><text x="45.3656%" y="1023.50"></text></g><g><title>mutex_lock (21 samples, 0.04%)</title><rect x="45.0847%" y="1061" width="0.0431%" height="15" fill="rgb(243,119,21)" fg:x="21945" fg:w="21"/><text x="45.3347%" y="1071.50"></text></g><g><title>mutex_unlock (8 samples, 0.02%)</title><rect x="45.1279%" y="1061" width="0.0164%" height="15" fill="rgb(252,177,53)" fg:x="21966" fg:w="8"/><text x="45.3779%" y="1071.50"></text></g><g><title>percpu_counter_add_batch (7 samples, 0.01%)</title><rect x="45.1443%" y="1061" width="0.0144%" height="15" fill="rgb(237,209,29)" fg:x="21974" fg:w="7"/><text x="45.3943%" y="1071.50"></text></g><g><title>queued_write_lock_slowpath (32 samples, 0.07%)</title><rect x="45.1587%" y="1061" width="0.0657%" height="15" fill="rgb(212,65,23)" fg:x="21981" fg:w="32"/><text x="45.4087%" y="1071.50"></text></g><g><title>__x64_sys_epoll_ctl (1,064 samples, 2.19%)</title><rect x="43.0858%" y="1093" width="2.1859%" height="15" fill="rgb(230,222,46)" fg:x="20972" fg:w="1064"/><text x="43.3358%" y="1103.50">_..</text></g><g><title>do_epoll_ctl (1,025 samples, 2.11%)</title><rect x="43.1659%" y="1077" width="2.1058%" height="15" fill="rgb(215,135,32)" fg:x="21011" fg:w="1025"/><text x="43.4159%" y="1087.50">d..</text></g><g><title>rb_insert_color (23 samples, 0.05%)</title><rect x="45.2244%" y="1061" width="0.0473%" height="15" fill="rgb(246,101,22)" fg:x="22013" fg:w="23"/><text x="45.4744%" y="1071.50"></text></g><g><title>fpregs_assert_state_consistent (5 samples, 0.01%)</title><rect x="45.3313%" y="1061" width="0.0103%" height="15" fill="rgb(206,107,13)" fg:x="22065" fg:w="5"/><text x="45.5813%" y="1071.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (7 samples, 0.01%)</title><rect x="45.3641%" y="1013" width="0.0144%" height="15" fill="rgb(250,100,44)" fg:x="22081" fg:w="7"/><text x="45.6141%" y="1023.50"></text></g><g><title>native_write_msr (6 samples, 0.01%)</title><rect x="45.3662%" y="997" width="0.0123%" height="15" fill="rgb(231,147,38)" fg:x="22082" fg:w="6"/><text x="45.6162%" y="1007.50"></text></g><g><title>__perf_event_task_sched_out (11 samples, 0.02%)</title><rect x="45.3621%" y="1029" width="0.0226%" height="15" fill="rgb(229,8,40)" fg:x="22080" fg:w="11"/><text x="45.6121%" y="1039.50"></text></g><g><title>put_prev_entity (6 samples, 0.01%)</title><rect x="45.4135%" y="1013" width="0.0123%" height="15" fill="rgb(221,135,30)" fg:x="22105" fg:w="6"/><text x="45.6635%" y="1023.50"></text></g><g><title>set_next_entity (11 samples, 0.02%)</title><rect x="45.4258%" y="1013" width="0.0226%" height="15" fill="rgb(249,193,18)" fg:x="22111" fg:w="11"/><text x="45.6758%" y="1023.50"></text></g><g><title>pick_next_task_fair (26 samples, 0.05%)</title><rect x="45.3991%" y="1029" width="0.0534%" height="15" fill="rgb(209,133,39)" fg:x="22098" fg:w="26"/><text x="45.6491%" y="1039.50"></text></g><g><title>schedule (59 samples, 0.12%)</title><rect x="45.3416%" y="1061" width="0.1212%" height="15" fill="rgb(232,100,14)" fg:x="22070" fg:w="59"/><text x="45.5916%" y="1071.50"></text></g><g><title>__schedule (57 samples, 0.12%)</title><rect x="45.3457%" y="1045" width="0.1171%" height="15" fill="rgb(224,185,1)" fg:x="22072" fg:w="57"/><text x="45.5957%" y="1055.50"></text></g><g><title>exit_to_user_mode_prepare (83 samples, 0.17%)</title><rect x="45.3005%" y="1077" width="0.1705%" height="15" fill="rgb(223,139,8)" fg:x="22050" fg:w="83"/><text x="45.5505%" y="1087.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1,249 samples, 2.57%)</title><rect x="42.9111%" y="1125" width="2.5660%" height="15" fill="rgb(232,213,38)" fg:x="20887" fg:w="1249"/><text x="43.1611%" y="1135.50">en..</text></g><g><title>do_syscall_64 (1,172 samples, 2.41%)</title><rect x="43.0693%" y="1109" width="2.4078%" height="15" fill="rgb(207,94,22)" fg:x="20964" fg:w="1172"/><text x="43.3193%" y="1119.50">do..</text></g><g><title>syscall_exit_to_user_mode (96 samples, 0.20%)</title><rect x="45.2799%" y="1093" width="0.1972%" height="15" fill="rgb(219,183,54)" fg:x="22040" fg:w="96"/><text x="45.5299%" y="1103.50"></text></g><g><title>save_fpregs_to_fpstate (5 samples, 0.01%)</title><rect x="45.4895%" y="1125" width="0.0103%" height="15" fill="rgb(216,185,54)" fg:x="22142" fg:w="5"/><text x="45.7395%" y="1135.50"></text></g><g><title>__GI_epoll_ctl (1,423 samples, 2.92%)</title><rect x="42.8475%" y="1141" width="2.9235%" height="15" fill="rgb(254,217,39)" fg:x="20856" fg:w="1423"/><text x="43.0975%" y="1151.50">__..</text></g><g><title>syscall_return_via_sysret (132 samples, 0.27%)</title><rect x="45.4997%" y="1125" width="0.2712%" height="15" fill="rgb(240,178,23)" fg:x="22147" fg:w="132"/><text x="45.7497%" y="1135.50"></text></g><g><title>mio::poll::Registry::register (1,428 samples, 2.93%)</title><rect x="42.8392%" y="1221" width="2.9337%" height="15" fill="rgb(218,11,47)" fg:x="20852" fg:w="1428"/><text x="43.0892%" y="1231.50">mi..</text></g><g><title>&lt;mio::net::tcp::stream::TcpStream as mio::event::source::Source&gt;::register (1,428 samples, 2.93%)</title><rect x="42.8392%" y="1205" width="2.9337%" height="15" fill="rgb(218,51,51)" fg:x="20852" fg:w="1428"/><text x="43.0892%" y="1215.50">&lt;m..</text></g><g><title>&lt;mio::io_source::IoSource&lt;T&gt; as mio::event::source::Source&gt;::register (1,428 samples, 2.93%)</title><rect x="42.8392%" y="1189" width="2.9337%" height="15" fill="rgb(238,126,27)" fg:x="20852" fg:w="1428"/><text x="43.0892%" y="1199.50">&lt;m..</text></g><g><title>mio::sys::unix::stateless_io_source::IoSourceState::register (1,428 samples, 2.93%)</title><rect x="42.8392%" y="1173" width="2.9337%" height="15" fill="rgb(249,202,22)" fg:x="20852" fg:w="1428"/><text x="43.0892%" y="1183.50">mi..</text></g><g><title>mio::sys::unix::selector::epoll::Selector::register (1,428 samples, 2.93%)</title><rect x="42.8392%" y="1157" width="2.9337%" height="15" fill="rgb(254,195,49)" fg:x="20852" fg:w="1428"/><text x="43.0892%" y="1167.50">mi..</text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (10 samples, 0.02%)</title><rect x="45.7874%" y="1173" width="0.0205%" height="15" fill="rgb(208,123,14)" fg:x="22287" fg:w="10"/><text x="46.0374%" y="1183.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (10 samples, 0.02%)</title><rect x="45.7874%" y="1157" width="0.0205%" height="15" fill="rgb(224,200,8)" fg:x="22287" fg:w="10"/><text x="46.0374%" y="1167.50"></text></g><g><title>parking_lot_core::parking_lot::park (6 samples, 0.01%)</title><rect x="45.8079%" y="1157" width="0.0123%" height="15" fill="rgb(217,61,36)" fg:x="22297" fg:w="6"/><text x="46.0579%" y="1167.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (6 samples, 0.01%)</title><rect x="45.8079%" y="1141" width="0.0123%" height="15" fill="rgb(206,35,45)" fg:x="22297" fg:w="6"/><text x="46.0579%" y="1151.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (6 samples, 0.01%)</title><rect x="45.8079%" y="1125" width="0.0123%" height="15" fill="rgb(217,65,33)" fg:x="22297" fg:w="6"/><text x="46.0579%" y="1135.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (6 samples, 0.01%)</title><rect x="45.8079%" y="1109" width="0.0123%" height="15" fill="rgb(222,158,48)" fg:x="22297" fg:w="6"/><text x="46.0579%" y="1119.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (6 samples, 0.01%)</title><rect x="45.8079%" y="1093" width="0.0123%" height="15" fill="rgb(254,2,54)" fg:x="22297" fg:w="6"/><text x="46.0579%" y="1103.50"></text></g><g><title>syscall (6 samples, 0.01%)</title><rect x="45.8079%" y="1077" width="0.0123%" height="15" fill="rgb(250,143,38)" fg:x="22297" fg:w="6"/><text x="46.0579%" y="1087.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (6 samples, 0.01%)</title><rect x="45.8079%" y="1061" width="0.0123%" height="15" fill="rgb(248,25,0)" fg:x="22297" fg:w="6"/><text x="46.0579%" y="1071.50"></text></g><g><title>do_syscall_64 (6 samples, 0.01%)</title><rect x="45.8079%" y="1045" width="0.0123%" height="15" fill="rgb(206,152,27)" fg:x="22297" fg:w="6"/><text x="46.0579%" y="1055.50"></text></g><g><title>__x64_sys_futex (6 samples, 0.01%)</title><rect x="45.8079%" y="1029" width="0.0123%" height="15" fill="rgb(240,77,30)" fg:x="22297" fg:w="6"/><text x="46.0579%" y="1039.50"></text></g><g><title>do_futex (6 samples, 0.01%)</title><rect x="45.8079%" y="1013" width="0.0123%" height="15" fill="rgb(231,5,3)" fg:x="22297" fg:w="6"/><text x="46.0579%" y="1023.50"></text></g><g><title>futex_wait (6 samples, 0.01%)</title><rect x="45.8079%" y="997" width="0.0123%" height="15" fill="rgb(207,226,32)" fg:x="22297" fg:w="6"/><text x="46.0579%" y="1007.50"></text></g><g><title>futex_wait_queue (6 samples, 0.01%)</title><rect x="45.8079%" y="981" width="0.0123%" height="15" fill="rgb(222,207,47)" fg:x="22297" fg:w="6"/><text x="46.0579%" y="991.50"></text></g><g><title>schedule (6 samples, 0.01%)</title><rect x="45.8079%" y="965" width="0.0123%" height="15" fill="rgb(229,115,45)" fg:x="22297" fg:w="6"/><text x="46.0579%" y="975.50"></text></g><g><title>__schedule (6 samples, 0.01%)</title><rect x="45.8079%" y="949" width="0.0123%" height="15" fill="rgb(224,191,6)" fg:x="22297" fg:w="6"/><text x="46.0579%" y="959.50"></text></g><g><title>pick_next_task_fair (5 samples, 0.01%)</title><rect x="45.8100%" y="933" width="0.0103%" height="15" fill="rgb(230,227,24)" fg:x="22298" fg:w="5"/><text x="46.0600%" y="943.50"></text></g><g><title>newidle_balance (5 samples, 0.01%)</title><rect x="45.8100%" y="917" width="0.0103%" height="15" fill="rgb(228,80,19)" fg:x="22298" fg:w="5"/><text x="46.0600%" y="927.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (27 samples, 0.06%)</title><rect x="45.7791%" y="1221" width="0.0555%" height="15" fill="rgb(247,229,0)" fg:x="22283" fg:w="27"/><text x="46.0291%" y="1231.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (26 samples, 0.05%)</title><rect x="45.7812%" y="1205" width="0.0534%" height="15" fill="rgb(237,194,15)" fg:x="22284" fg:w="26"/><text x="46.0312%" y="1215.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (26 samples, 0.05%)</title><rect x="45.7812%" y="1189" width="0.0534%" height="15" fill="rgb(219,203,20)" fg:x="22284" fg:w="26"/><text x="46.0312%" y="1199.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (13 samples, 0.03%)</title><rect x="45.8079%" y="1173" width="0.0267%" height="15" fill="rgb(234,128,8)" fg:x="22297" fg:w="13"/><text x="46.0579%" y="1183.50"></text></g><g><title>parking_lot_core::spinwait::SpinWait::spin (7 samples, 0.01%)</title><rect x="45.8202%" y="1157" width="0.0144%" height="15" fill="rgb(248,202,8)" fg:x="22303" fg:w="7"/><text x="46.0702%" y="1167.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (12 samples, 0.02%)</title><rect x="45.8408%" y="1205" width="0.0247%" height="15" fill="rgb(206,104,37)" fg:x="22313" fg:w="12"/><text x="46.0908%" y="1215.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (12 samples, 0.02%)</title><rect x="45.8408%" y="1189" width="0.0247%" height="15" fill="rgb(223,8,27)" fg:x="22313" fg:w="12"/><text x="46.0908%" y="1199.50"></text></g><g><title>core::sync::atomic::atomic_add (12 samples, 0.02%)</title><rect x="45.8408%" y="1173" width="0.0247%" height="15" fill="rgb(216,217,28)" fg:x="22313" fg:w="12"/><text x="46.0908%" y="1183.50"></text></g><g><title>__memcpy_avx_unaligned_erms (33 samples, 0.07%)</title><rect x="45.8757%" y="1173" width="0.0678%" height="15" fill="rgb(249,199,1)" fg:x="22330" fg:w="33"/><text x="46.1257%" y="1183.50"></text></g><g><title>__GI___lll_lock_wait_private (5 samples, 0.01%)</title><rect x="46.0442%" y="1013" width="0.0103%" height="15" fill="rgb(240,85,17)" fg:x="22412" fg:w="5"/><text x="46.2942%" y="1023.50"></text></g><g><title>__x64_sys_futex (6 samples, 0.01%)</title><rect x="46.0565%" y="965" width="0.0123%" height="15" fill="rgb(206,108,45)" fg:x="22418" fg:w="6"/><text x="46.3065%" y="975.50"></text></g><g><title>do_futex (6 samples, 0.01%)</title><rect x="46.0565%" y="949" width="0.0123%" height="15" fill="rgb(245,210,41)" fg:x="22418" fg:w="6"/><text x="46.3065%" y="959.50"></text></g><g><title>futex_wake (6 samples, 0.01%)</title><rect x="46.0565%" y="933" width="0.0123%" height="15" fill="rgb(206,13,37)" fg:x="22418" fg:w="6"/><text x="46.3065%" y="943.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (9 samples, 0.02%)</title><rect x="46.0565%" y="997" width="0.0185%" height="15" fill="rgb(250,61,18)" fg:x="22418" fg:w="9"/><text x="46.3065%" y="1007.50"></text></g><g><title>do_syscall_64 (9 samples, 0.02%)</title><rect x="46.0565%" y="981" width="0.0185%" height="15" fill="rgb(235,172,48)" fg:x="22418" fg:w="9"/><text x="46.3065%" y="991.50"></text></g><g><title>__GI___lll_lock_wake_private (11 samples, 0.02%)</title><rect x="46.0544%" y="1013" width="0.0226%" height="15" fill="rgb(249,201,17)" fg:x="22417" fg:w="11"/><text x="46.3044%" y="1023.50"></text></g><g><title>_int_free (32 samples, 0.07%)</title><rect x="46.1202%" y="997" width="0.0657%" height="15" fill="rgb(219,208,6)" fg:x="22449" fg:w="32"/><text x="46.3702%" y="1007.50"></text></g><g><title>checked_request2size (5 samples, 0.01%)</title><rect x="46.3852%" y="981" width="0.0103%" height="15" fill="rgb(248,31,23)" fg:x="22578" fg:w="5"/><text x="46.6352%" y="991.50"></text></g><g><title>__rdl_alloc (225 samples, 0.46%)</title><rect x="45.9435%" y="1109" width="0.4622%" height="15" fill="rgb(245,15,42)" fg:x="22363" fg:w="225"/><text x="46.1935%" y="1119.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (220 samples, 0.45%)</title><rect x="45.9538%" y="1093" width="0.4520%" height="15" fill="rgb(222,217,39)" fg:x="22368" fg:w="220"/><text x="46.2038%" y="1103.50"></text></g><g><title>std::sys::unix::alloc::aligned_malloc (220 samples, 0.45%)</title><rect x="45.9538%" y="1077" width="0.4520%" height="15" fill="rgb(210,219,27)" fg:x="22368" fg:w="220"/><text x="46.2038%" y="1087.50"></text></g><g><title>__posix_memalign (219 samples, 0.45%)</title><rect x="45.9558%" y="1061" width="0.4499%" height="15" fill="rgb(252,166,36)" fg:x="22369" fg:w="219"/><text x="46.2058%" y="1071.50"></text></g><g><title>__posix_memalign (201 samples, 0.41%)</title><rect x="45.9928%" y="1045" width="0.4129%" height="15" fill="rgb(245,132,34)" fg:x="22387" fg:w="201"/><text x="46.2428%" y="1055.50"></text></g><g><title>_mid_memalign (200 samples, 0.41%)</title><rect x="45.9949%" y="1029" width="0.4109%" height="15" fill="rgb(236,54,3)" fg:x="22388" fg:w="200"/><text x="46.2449%" y="1039.50"></text></g><g><title>_int_memalign (159 samples, 0.33%)</title><rect x="46.0791%" y="1013" width="0.3267%" height="15" fill="rgb(241,173,43)" fg:x="22429" fg:w="159"/><text x="46.3291%" y="1023.50"></text></g><g><title>_int_malloc (107 samples, 0.22%)</title><rect x="46.1859%" y="997" width="0.2198%" height="15" fill="rgb(215,190,9)" fg:x="22481" fg:w="107"/><text x="46.4359%" y="1007.50"></text></g><g><title>unlink_chunk (5 samples, 0.01%)</title><rect x="46.3955%" y="981" width="0.0103%" height="15" fill="rgb(242,101,16)" fg:x="22583" fg:w="5"/><text x="46.6455%" y="991.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::new_with_interest_and_handle (1,787 samples, 3.67%)</title><rect x="42.7571%" y="1269" width="3.6713%" height="15" fill="rgb(223,190,21)" fg:x="20812" fg:w="1787"/><text x="43.0071%" y="1279.50">toki..</text></g><g><title>tokio::runtime::io::registration::Registration::new_with_interest_and_handle (1,782 samples, 3.66%)</title><rect x="42.7673%" y="1253" width="3.6610%" height="15" fill="rgb(215,228,25)" fg:x="20817" fg:w="1782"/><text x="43.0173%" y="1263.50">toki..</text></g><g><title>tokio::runtime::io::driver::Handle::add_source (1,774 samples, 3.64%)</title><rect x="42.7838%" y="1237" width="3.6446%" height="15" fill="rgb(225,36,22)" fg:x="20825" fg:w="1774"/><text x="43.0338%" y="1247.50">toki..</text></g><g><title>tokio::runtime::io::registration_set::RegistrationSet::allocate (289 samples, 0.59%)</title><rect x="45.8346%" y="1221" width="0.5937%" height="15" fill="rgb(251,106,46)" fg:x="22310" fg:w="289"/><text x="46.0846%" y="1231.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (274 samples, 0.56%)</title><rect x="45.8654%" y="1205" width="0.5629%" height="15" fill="rgb(208,90,1)" fg:x="22325" fg:w="274"/><text x="46.1154%" y="1215.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (270 samples, 0.55%)</title><rect x="45.8737%" y="1189" width="0.5547%" height="15" fill="rgb(243,10,4)" fg:x="22329" fg:w="270"/><text x="46.1237%" y="1199.50"></text></g><g><title>alloc::alloc::exchange_malloc (236 samples, 0.48%)</title><rect x="45.9435%" y="1173" width="0.4848%" height="15" fill="rgb(212,137,27)" fg:x="22363" fg:w="236"/><text x="46.1935%" y="1183.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (236 samples, 0.48%)</title><rect x="45.9435%" y="1157" width="0.4848%" height="15" fill="rgb(231,220,49)" fg:x="22363" fg:w="236"/><text x="46.1935%" y="1167.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (236 samples, 0.48%)</title><rect x="45.9435%" y="1141" width="0.4848%" height="15" fill="rgb(237,96,20)" fg:x="22363" fg:w="236"/><text x="46.1935%" y="1151.50"></text></g><g><title>alloc::alloc::alloc (236 samples, 0.48%)</title><rect x="45.9435%" y="1125" width="0.4848%" height="15" fill="rgb(239,229,30)" fg:x="22363" fg:w="236"/><text x="46.1935%" y="1135.50"></text></g><g><title>core::ptr::read_volatile (8 samples, 0.02%)</title><rect x="46.4119%" y="1109" width="0.0164%" height="15" fill="rgb(219,65,33)" fg:x="22591" fg:w="8"/><text x="46.6619%" y="1119.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::new (1,818 samples, 3.73%)</title><rect x="42.7386%" y="1317" width="3.7350%" height="15" fill="rgb(243,134,7)" fg:x="20803" fg:w="1818"/><text x="42.9886%" y="1327.50">toki..</text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::new (1,809 samples, 3.72%)</title><rect x="42.7571%" y="1301" width="3.7165%" height="15" fill="rgb(216,177,54)" fg:x="20812" fg:w="1809"/><text x="43.0071%" y="1311.50">toki..</text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::new_with_interest (1,809 samples, 3.72%)</title><rect x="42.7571%" y="1285" width="3.7165%" height="15" fill="rgb(211,160,20)" fg:x="20812" fg:w="1809"/><text x="43.0071%" y="1295.50">toki..</text></g><g><title>tokio::runtime::scheduler::Handle::current (22 samples, 0.05%)</title><rect x="46.4284%" y="1269" width="0.0452%" height="15" fill="rgb(239,85,39)" fg:x="22599" fg:w="22"/><text x="46.6784%" y="1279.50"></text></g><g><title>tokio::runtime::context::current::with_current (22 samples, 0.05%)</title><rect x="46.4284%" y="1253" width="0.0452%" height="15" fill="rgb(232,125,22)" fg:x="22599" fg:w="22"/><text x="46.6784%" y="1263.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (22 samples, 0.05%)</title><rect x="46.4284%" y="1237" width="0.0452%" height="15" fill="rgb(244,57,34)" fg:x="22599" fg:w="22"/><text x="46.6784%" y="1247.50"></text></g><g><title>tokio::runtime::context::current::with_current::{{closure}} (18 samples, 0.04%)</title><rect x="46.4366%" y="1221" width="0.0370%" height="15" fill="rgb(214,203,32)" fg:x="22603" fg:w="18"/><text x="46.6866%" y="1231.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (16 samples, 0.03%)</title><rect x="46.4407%" y="1205" width="0.0329%" height="15" fill="rgb(207,58,43)" fg:x="22605" fg:w="16"/><text x="46.6907%" y="1215.50"></text></g><g><title>core::ops::function::FnOnce::call_once (16 samples, 0.03%)</title><rect x="46.4407%" y="1189" width="0.0329%" height="15" fill="rgb(215,193,15)" fg:x="22605" fg:w="16"/><text x="46.6907%" y="1199.50"></text></g><g><title>&lt;tokio::runtime::scheduler::Handle as core::clone::Clone&gt;::clone (16 samples, 0.03%)</title><rect x="46.4407%" y="1173" width="0.0329%" height="15" fill="rgb(232,15,44)" fg:x="22605" fg:w="16"/><text x="46.6907%" y="1183.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_or (9 samples, 0.02%)</title><rect x="46.5023%" y="1253" width="0.0185%" height="15" fill="rgb(212,3,48)" fg:x="22635" fg:w="9"/><text x="46.7523%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::poll::Poll&lt;tokio::runtime::coop::RestoreOnPending&gt;&gt; (9 samples, 0.02%)</title><rect x="46.5023%" y="1237" width="0.0185%" height="15" fill="rgb(218,128,7)" fg:x="22635" fg:w="9"/><text x="46.7523%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::coop::RestoreOnPending&gt; (9 samples, 0.02%)</title><rect x="46.5023%" y="1221" width="0.0185%" height="15" fill="rgb(226,216,39)" fg:x="22635" fg:w="9"/><text x="46.7523%" y="1231.50"></text></g><g><title>&lt;tokio::runtime::coop::RestoreOnPending as core::ops::drop::Drop&gt;::drop (9 samples, 0.02%)</title><rect x="46.5023%" y="1205" width="0.0185%" height="15" fill="rgb(243,47,51)" fg:x="22635" fg:w="9"/><text x="46.7523%" y="1215.50"></text></g><g><title>&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (17 samples, 0.03%)</title><rect x="46.4961%" y="1301" width="0.0349%" height="15" fill="rgb(241,183,40)" fg:x="22632" fg:w="17"/><text x="46.7461%" y="1311.50"></text></g><g><title>core::ops::function::FnMut::call_mut (17 samples, 0.03%)</title><rect x="46.4961%" y="1285" width="0.0349%" height="15" fill="rgb(231,217,32)" fg:x="22632" fg:w="17"/><text x="46.7461%" y="1295.50"></text></g><g><title>tokio::runtime::coop::poll_proceed (17 samples, 0.03%)</title><rect x="46.4961%" y="1269" width="0.0349%" height="15" fill="rgb(229,61,38)" fg:x="22632" fg:w="17"/><text x="46.7461%" y="1279.50"></text></g><g><title>tokio::runtime::context::budget (5 samples, 0.01%)</title><rect x="46.5208%" y="1253" width="0.0103%" height="15" fill="rgb(225,210,5)" fg:x="22644" fg:w="5"/><text x="46.7708%" y="1263.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (5 samples, 0.01%)</title><rect x="46.5208%" y="1237" width="0.0103%" height="15" fill="rgb(231,79,45)" fg:x="22644" fg:w="5"/><text x="46.7708%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::coop::RestoreOnPending&gt; (5 samples, 0.01%)</title><rect x="46.5311%" y="1301" width="0.0103%" height="15" fill="rgb(224,100,7)" fg:x="22649" fg:w="5"/><text x="46.7811%" y="1311.50"></text></g><g><title>__GI___pthread_disable_asynccancel (12 samples, 0.02%)</title><rect x="46.6112%" y="1189" width="0.0247%" height="15" fill="rgb(241,198,18)" fg:x="22688" fg:w="12"/><text x="46.8612%" y="1199.50"></text></g><g><title>__GI___pthread_disable_asynccancel (10 samples, 0.02%)</title><rect x="46.6153%" y="1173" width="0.0205%" height="15" fill="rgb(252,97,53)" fg:x="22690" fg:w="10"/><text x="46.8653%" y="1183.50"></text></g><g><title>__GI___pthread_enable_asynccancel (6 samples, 0.01%)</title><rect x="46.6359%" y="1189" width="0.0123%" height="15" fill="rgb(220,88,7)" fg:x="22700" fg:w="6"/><text x="46.8859%" y="1199.50"></text></g><g><title>entry_SYSCALL_64 (7 samples, 0.01%)</title><rect x="46.6523%" y="1189" width="0.0144%" height="15" fill="rgb(213,176,14)" fg:x="22708" fg:w="7"/><text x="46.9023%" y="1199.50"></text></g><g><title>__fget_light (43 samples, 0.09%)</title><rect x="46.9214%" y="1125" width="0.0883%" height="15" fill="rgb(246,73,7)" fg:x="22839" fg:w="43"/><text x="47.1714%" y="1135.50"></text></g><g><title>_raw_spin_lock (21 samples, 0.04%)</title><rect x="47.0529%" y="1109" width="0.0431%" height="15" fill="rgb(245,64,36)" fg:x="22903" fg:w="21"/><text x="47.3029%" y="1119.50"></text></g><g><title>alloc_fd (55 samples, 0.11%)</title><rect x="47.0098%" y="1125" width="0.1130%" height="15" fill="rgb(245,80,10)" fg:x="22882" fg:w="55"/><text x="47.2598%" y="1135.50"></text></g><g><title>expand_files (10 samples, 0.02%)</title><rect x="47.1022%" y="1109" width="0.0205%" height="15" fill="rgb(232,107,50)" fg:x="22927" fg:w="10"/><text x="47.3522%" y="1119.50"></text></g><g><title>fput (6 samples, 0.01%)</title><rect x="47.2049%" y="1109" width="0.0123%" height="15" fill="rgb(253,3,0)" fg:x="22977" fg:w="6"/><text x="47.4549%" y="1119.50"></text></g><g><title>task_work_add (5 samples, 0.01%)</title><rect x="47.2070%" y="1093" width="0.0103%" height="15" fill="rgb(212,99,53)" fg:x="22978" fg:w="5"/><text x="47.4570%" y="1103.50"></text></g><g><title>__local_bh_enable_ip (11 samples, 0.02%)</title><rect x="47.2748%" y="1093" width="0.0226%" height="15" fill="rgb(249,111,54)" fg:x="23011" fg:w="11"/><text x="47.5248%" y="1103.50"></text></g><g><title>_raw_write_lock_bh (15 samples, 0.03%)</title><rect x="47.2994%" y="1093" width="0.0308%" height="15" fill="rgb(249,55,30)" fg:x="23023" fg:w="15"/><text x="47.5494%" y="1103.50"></text></g><g><title>__local_bh_enable_ip (9 samples, 0.02%)</title><rect x="47.4823%" y="1077" width="0.0185%" height="15" fill="rgb(237,47,42)" fg:x="23112" fg:w="9"/><text x="47.7323%" y="1087.50"></text></g><g><title>__slab_free (22 samples, 0.05%)</title><rect x="47.5049%" y="1077" width="0.0452%" height="15" fill="rgb(211,20,18)" fg:x="23123" fg:w="22"/><text x="47.7549%" y="1087.50"></text></g><g><title>_raw_spin_lock_bh (8 samples, 0.02%)</title><rect x="47.5501%" y="1077" width="0.0164%" height="15" fill="rgb(231,203,46)" fg:x="23145" fg:w="8"/><text x="47.8001%" y="1087.50"></text></g><g><title>kmem_cache_free (73 samples, 0.15%)</title><rect x="47.5809%" y="1077" width="0.1500%" height="15" fill="rgb(237,142,3)" fg:x="23160" fg:w="73"/><text x="47.8309%" y="1087.50"></text></g><g><title>cache_from_obj (24 samples, 0.05%)</title><rect x="47.6816%" y="1061" width="0.0493%" height="15" fill="rgb(241,107,1)" fg:x="23209" fg:w="24"/><text x="47.9316%" y="1071.50"></text></g><g><title>lock_sock_nested (65 samples, 0.13%)</title><rect x="47.7309%" y="1077" width="0.1335%" height="15" fill="rgb(229,83,13)" fg:x="23233" fg:w="65"/><text x="47.9809%" y="1087.50"></text></g><g><title>_raw_spin_lock_bh (58 samples, 0.12%)</title><rect x="47.7452%" y="1061" width="0.1192%" height="15" fill="rgb(241,91,40)" fg:x="23240" fg:w="58"/><text x="47.9952%" y="1071.50"></text></g><g><title>native_queued_spin_lock_slowpath (6 samples, 0.01%)</title><rect x="47.8521%" y="1045" width="0.0123%" height="15" fill="rgb(225,3,45)" fg:x="23292" fg:w="6"/><text x="48.1021%" y="1055.50"></text></g><g><title>mod_memcg_state (22 samples, 0.05%)</title><rect x="47.8685%" y="1061" width="0.0452%" height="15" fill="rgb(244,223,14)" fg:x="23300" fg:w="22"/><text x="48.1185%" y="1071.50"></text></g><g><title>__mod_memcg_state (11 samples, 0.02%)</title><rect x="47.8911%" y="1045" width="0.0226%" height="15" fill="rgb(224,124,37)" fg:x="23311" fg:w="11"/><text x="48.1411%" y="1055.50"></text></g><g><title>mem_cgroup_charge_skmem (33 samples, 0.07%)</title><rect x="47.8644%" y="1077" width="0.0678%" height="15" fill="rgb(251,171,30)" fg:x="23298" fg:w="33"/><text x="48.1144%" y="1087.50"></text></g><g><title>try_charge_memcg (9 samples, 0.02%)</title><rect x="47.9137%" y="1061" width="0.0185%" height="15" fill="rgb(236,46,54)" fg:x="23322" fg:w="9"/><text x="48.1637%" y="1071.50"></text></g><g><title>mem_cgroup_sk_alloc (6 samples, 0.01%)</title><rect x="47.9322%" y="1077" width="0.0123%" height="15" fill="rgb(245,213,5)" fg:x="23331" fg:w="6"/><text x="48.1822%" y="1087.50"></text></g><g><title>_raw_spin_lock_bh (9 samples, 0.02%)</title><rect x="47.9692%" y="1061" width="0.0185%" height="15" fill="rgb(230,144,27)" fg:x="23349" fg:w="9"/><text x="48.2192%" y="1071.50"></text></g><g><title>release_sock (34 samples, 0.07%)</title><rect x="47.9445%" y="1077" width="0.0699%" height="15" fill="rgb(220,86,6)" fg:x="23337" fg:w="34"/><text x="48.1945%" y="1087.50"></text></g><g><title>tcp_release_cb (13 samples, 0.03%)</title><rect x="47.9877%" y="1061" width="0.0267%" height="15" fill="rgb(240,20,13)" fg:x="23358" fg:w="13"/><text x="48.2377%" y="1071.50"></text></g><g><title>inet_csk_accept (335 samples, 0.69%)</title><rect x="47.3405%" y="1093" width="0.6882%" height="15" fill="rgb(217,89,34)" fg:x="23043" fg:w="335"/><text x="47.5905%" y="1103.50"></text></g><g><title>tcp_v4_reqsk_destructor (7 samples, 0.01%)</title><rect x="48.0144%" y="1077" width="0.0144%" height="15" fill="rgb(229,13,5)" fg:x="23371" fg:w="7"/><text x="48.2644%" y="1087.50"></text></g><g><title>lock_sock_nested (15 samples, 0.03%)</title><rect x="48.0288%" y="1093" width="0.0308%" height="15" fill="rgb(244,67,35)" fg:x="23378" fg:w="15"/><text x="48.2788%" y="1103.50"></text></g><g><title>_raw_spin_lock_bh (12 samples, 0.02%)</title><rect x="48.0349%" y="1077" width="0.0247%" height="15" fill="rgb(221,40,2)" fg:x="23381" fg:w="12"/><text x="48.2849%" y="1087.50"></text></g><g><title>_raw_spin_lock_bh (6 samples, 0.01%)</title><rect x="48.0616%" y="1077" width="0.0123%" height="15" fill="rgb(237,157,21)" fg:x="23394" fg:w="6"/><text x="48.3116%" y="1087.50"></text></g><g><title>release_sock (10 samples, 0.02%)</title><rect x="48.0596%" y="1093" width="0.0205%" height="15" fill="rgb(222,94,11)" fg:x="23393" fg:w="10"/><text x="48.3096%" y="1103.50"></text></g><g><title>apparmor_sock_graft (18 samples, 0.04%)</title><rect x="48.0924%" y="1077" width="0.0370%" height="15" fill="rgb(249,113,6)" fg:x="23409" fg:w="18"/><text x="48.3424%" y="1087.50"></text></g><g><title>inet_accept (445 samples, 0.91%)</title><rect x="47.2173%" y="1109" width="0.9142%" height="15" fill="rgb(238,137,36)" fg:x="22983" fg:w="445"/><text x="47.4673%" y="1119.50"></text></g><g><title>security_sock_graft (25 samples, 0.05%)</title><rect x="48.0801%" y="1093" width="0.0514%" height="15" fill="rgb(210,102,26)" fg:x="23403" fg:w="25"/><text x="48.3301%" y="1103.50"></text></g><g><title>lock_sock_nested (11 samples, 0.02%)</title><rect x="48.1582%" y="1093" width="0.0226%" height="15" fill="rgb(218,30,30)" fg:x="23441" fg:w="11"/><text x="48.4082%" y="1103.50"></text></g><g><title>_raw_spin_lock_bh (9 samples, 0.02%)</title><rect x="48.1623%" y="1077" width="0.0185%" height="15" fill="rgb(214,67,26)" fg:x="23443" fg:w="9"/><text x="48.4123%" y="1087.50"></text></g><g><title>inet_getname (40 samples, 0.08%)</title><rect x="48.1315%" y="1109" width="0.0822%" height="15" fill="rgb(251,9,53)" fg:x="23428" fg:w="40"/><text x="48.3815%" y="1119.50"></text></g><g><title>release_sock (16 samples, 0.03%)</title><rect x="48.1808%" y="1093" width="0.0329%" height="15" fill="rgb(228,204,25)" fg:x="23452" fg:w="16"/><text x="48.4308%" y="1103.50"></text></g><g><title>tcp_release_cb (6 samples, 0.01%)</title><rect x="48.2013%" y="1077" width="0.0123%" height="15" fill="rgb(207,153,8)" fg:x="23462" fg:w="6"/><text x="48.4513%" y="1087.50"></text></g><g><title>__check_object_size (5 samples, 0.01%)</title><rect x="48.2424%" y="1093" width="0.0103%" height="15" fill="rgb(242,9,16)" fg:x="23482" fg:w="5"/><text x="48.4924%" y="1103.50"></text></g><g><title>__get_user_4 (12 samples, 0.02%)</title><rect x="48.2527%" y="1093" width="0.0247%" height="15" fill="rgb(217,211,10)" fg:x="23487" fg:w="12"/><text x="48.5027%" y="1103.50"></text></g><g><title>__put_user_nocheck_4 (7 samples, 0.01%)</title><rect x="48.2773%" y="1093" width="0.0144%" height="15" fill="rgb(219,228,52)" fg:x="23499" fg:w="7"/><text x="48.5273%" y="1103.50"></text></g><g><title>copy_user_enhanced_fast_string (7 samples, 0.01%)</title><rect x="48.3020%" y="1077" width="0.0144%" height="15" fill="rgb(231,92,29)" fg:x="23511" fg:w="7"/><text x="48.5520%" y="1087.50"></text></g><g><title>move_addr_to_user (54 samples, 0.11%)</title><rect x="48.2137%" y="1109" width="0.1109%" height="15" fill="rgb(232,8,23)" fg:x="23468" fg:w="54"/><text x="48.4637%" y="1119.50"></text></g><g><title>_copy_to_user (16 samples, 0.03%)</title><rect x="48.2917%" y="1093" width="0.0329%" height="15" fill="rgb(216,211,34)" fg:x="23506" fg:w="16"/><text x="48.5417%" y="1103.50"></text></g><g><title>aa_sk_perm (24 samples, 0.05%)</title><rect x="48.3493%" y="1093" width="0.0493%" height="15" fill="rgb(236,151,0)" fg:x="23534" fg:w="24"/><text x="48.5993%" y="1103.50"></text></g><g><title>apparmor_socket_accept (16 samples, 0.03%)</title><rect x="48.3986%" y="1093" width="0.0329%" height="15" fill="rgb(209,168,3)" fg:x="23558" fg:w="16"/><text x="48.6486%" y="1103.50"></text></g><g><title>security_socket_accept (55 samples, 0.11%)</title><rect x="48.3246%" y="1109" width="0.1130%" height="15" fill="rgb(208,129,28)" fg:x="23522" fg:w="55"/><text x="48.5746%" y="1119.50"></text></g><g><title>_raw_spin_lock (12 samples, 0.02%)</title><rect x="48.5074%" y="1077" width="0.0247%" height="15" fill="rgb(229,78,22)" fg:x="23611" fg:w="12"/><text x="48.7574%" y="1087.50"></text></g><g><title>__init_rwsem (9 samples, 0.02%)</title><rect x="48.6369%" y="1045" width="0.0185%" height="15" fill="rgb(228,187,13)" fg:x="23674" fg:w="9"/><text x="48.8869%" y="1055.50"></text></g><g><title>make_kuid (10 samples, 0.02%)</title><rect x="48.6615%" y="1045" width="0.0205%" height="15" fill="rgb(240,119,24)" fg:x="23686" fg:w="10"/><text x="48.9115%" y="1055.50"></text></g><g><title>map_id_range_down (10 samples, 0.02%)</title><rect x="48.6615%" y="1029" width="0.0205%" height="15" fill="rgb(209,194,42)" fg:x="23686" fg:w="10"/><text x="48.9115%" y="1039.50"></text></g><g><title>__cond_resched (5 samples, 0.01%)</title><rect x="48.8074%" y="1013" width="0.0103%" height="15" fill="rgb(247,200,46)" fg:x="23757" fg:w="5"/><text x="49.0574%" y="1023.50"></text></g><g><title>inode_init_always (138 samples, 0.28%)</title><rect x="48.5547%" y="1061" width="0.2835%" height="15" fill="rgb(218,76,16)" fg:x="23634" fg:w="138"/><text x="48.8047%" y="1071.50"></text></g><g><title>security_inode_alloc (76 samples, 0.16%)</title><rect x="48.6821%" y="1045" width="0.1561%" height="15" fill="rgb(225,21,48)" fg:x="23696" fg:w="76"/><text x="48.9321%" y="1055.50"></text></g><g><title>kmem_cache_alloc (47 samples, 0.10%)</title><rect x="48.7417%" y="1029" width="0.0966%" height="15" fill="rgb(239,223,50)" fg:x="23725" fg:w="47"/><text x="48.9917%" y="1039.50"></text></g><g><title>memset_erms (6 samples, 0.01%)</title><rect x="48.8259%" y="1013" width="0.0123%" height="15" fill="rgb(244,45,21)" fg:x="23766" fg:w="6"/><text x="49.0759%" y="1023.50"></text></g><g><title>allocate_slab (13 samples, 0.03%)</title><rect x="48.9882%" y="1013" width="0.0267%" height="15" fill="rgb(232,33,43)" fg:x="23845" fg:w="13"/><text x="49.2382%" y="1023.50"></text></g><g><title>setup_object (5 samples, 0.01%)</title><rect x="49.0046%" y="997" width="0.0103%" height="15" fill="rgb(209,8,3)" fg:x="23853" fg:w="5"/><text x="49.2546%" y="1007.50"></text></g><g><title>___slab_alloc (32 samples, 0.07%)</title><rect x="48.9676%" y="1029" width="0.0657%" height="15" fill="rgb(214,25,53)" fg:x="23835" fg:w="32"/><text x="49.2176%" y="1039.50"></text></g><g><title>get_partial_node.part.0 (6 samples, 0.01%)</title><rect x="49.0211%" y="1013" width="0.0123%" height="15" fill="rgb(254,186,54)" fg:x="23861" fg:w="6"/><text x="49.2711%" y="1023.50"></text></g><g><title>__cond_resched (10 samples, 0.02%)</title><rect x="49.0334%" y="1029" width="0.0205%" height="15" fill="rgb(208,174,49)" fg:x="23867" fg:w="10"/><text x="49.2834%" y="1039.50"></text></g><g><title>__rcu_read_lock (10 samples, 0.02%)</title><rect x="49.0539%" y="1029" width="0.0205%" height="15" fill="rgb(233,191,51)" fg:x="23877" fg:w="10"/><text x="49.3039%" y="1039.50"></text></g><g><title>__rcu_read_unlock (7 samples, 0.01%)</title><rect x="49.0745%" y="1029" width="0.0144%" height="15" fill="rgb(222,134,10)" fg:x="23887" fg:w="7"/><text x="49.3245%" y="1039.50"></text></g><g><title>__get_obj_cgroup_from_memcg (24 samples, 0.05%)</title><rect x="49.1135%" y="1013" width="0.0493%" height="15" fill="rgb(230,226,20)" fg:x="23906" fg:w="24"/><text x="49.3635%" y="1023.50"></text></g><g><title>get_obj_cgroup_from_current (37 samples, 0.08%)</title><rect x="49.0889%" y="1029" width="0.0760%" height="15" fill="rgb(251,111,25)" fg:x="23894" fg:w="37"/><text x="49.3389%" y="1039.50"></text></g><g><title>xas_descend (11 samples, 0.02%)</title><rect x="49.2286%" y="997" width="0.0226%" height="15" fill="rgb(224,40,46)" fg:x="23962" fg:w="11"/><text x="49.4786%" y="1007.50"></text></g><g><title>memcg_list_lru_alloc (56 samples, 0.12%)</title><rect x="49.1649%" y="1029" width="0.1150%" height="15" fill="rgb(236,108,47)" fg:x="23931" fg:w="56"/><text x="49.4149%" y="1039.50"></text></g><g><title>xa_load (43 samples, 0.09%)</title><rect x="49.1916%" y="1013" width="0.0883%" height="15" fill="rgb(234,93,0)" fg:x="23944" fg:w="43"/><text x="49.4416%" y="1023.50"></text></g><g><title>xas_start (14 samples, 0.03%)</title><rect x="49.2512%" y="997" width="0.0288%" height="15" fill="rgb(224,213,32)" fg:x="23973" fg:w="14"/><text x="49.5012%" y="1007.50"></text></g><g><title>memcg_slab_post_alloc_hook (43 samples, 0.09%)</title><rect x="49.2799%" y="1029" width="0.0883%" height="15" fill="rgb(251,11,48)" fg:x="23987" fg:w="43"/><text x="49.5299%" y="1039.50"></text></g><g><title>mod_objcg_state (14 samples, 0.03%)</title><rect x="49.3395%" y="1013" width="0.0288%" height="15" fill="rgb(236,173,5)" fg:x="24016" fg:w="14"/><text x="49.5895%" y="1023.50"></text></g><g><title>mod_memcg_lruvec_state (5 samples, 0.01%)</title><rect x="49.3580%" y="997" width="0.0103%" height="15" fill="rgb(230,95,12)" fg:x="24025" fg:w="5"/><text x="49.6080%" y="1007.50"></text></g><g><title>obj_cgroup_charge (42 samples, 0.09%)</title><rect x="49.3683%" y="1029" width="0.0863%" height="15" fill="rgb(232,209,1)" fg:x="24030" fg:w="42"/><text x="49.6183%" y="1039.50"></text></g><g><title>try_charge_memcg (7 samples, 0.01%)</title><rect x="49.4402%" y="1013" width="0.0144%" height="15" fill="rgb(232,6,1)" fg:x="24065" fg:w="7"/><text x="49.6902%" y="1023.50"></text></g><g><title>sock_alloc (498 samples, 1.02%)</title><rect x="48.4376%" y="1109" width="1.0231%" height="15" fill="rgb(210,224,50)" fg:x="23577" fg:w="498"/><text x="48.6876%" y="1119.50"></text></g><g><title>new_inode_pseudo (466 samples, 0.96%)</title><rect x="48.5033%" y="1093" width="0.9574%" height="15" fill="rgb(228,127,35)" fg:x="23609" fg:w="466"/><text x="48.7533%" y="1103.50"></text></g><g><title>alloc_inode (451 samples, 0.93%)</title><rect x="48.5342%" y="1077" width="0.9266%" height="15" fill="rgb(245,102,45)" fg:x="23624" fg:w="451"/><text x="48.7842%" y="1087.50"></text></g><g><title>sock_alloc_inode (303 samples, 0.62%)</title><rect x="48.8382%" y="1061" width="0.6225%" height="15" fill="rgb(214,1,49)" fg:x="23772" fg:w="303"/><text x="49.0882%" y="1071.50"></text></g><g><title>kmem_cache_alloc_lru (277 samples, 0.57%)</title><rect x="48.8916%" y="1045" width="0.5691%" height="15" fill="rgb(226,163,40)" fg:x="23798" fg:w="277"/><text x="49.1416%" y="1055.50"></text></g><g><title>___slab_alloc (23 samples, 0.05%)</title><rect x="49.6867%" y="1013" width="0.0473%" height="15" fill="rgb(239,212,28)" fg:x="24185" fg:w="23"/><text x="49.9367%" y="1023.50"></text></g><g><title>__cond_resched (6 samples, 0.01%)</title><rect x="49.7339%" y="1013" width="0.0123%" height="15" fill="rgb(220,20,13)" fg:x="24208" fg:w="6"/><text x="49.9839%" y="1023.50"></text></g><g><title>preempt_schedule_common (6 samples, 0.01%)</title><rect x="49.7339%" y="997" width="0.0123%" height="15" fill="rgb(210,164,35)" fg:x="24208" fg:w="6"/><text x="49.9839%" y="1007.50"></text></g><g><title>__schedule (6 samples, 0.01%)</title><rect x="49.7339%" y="981" width="0.0123%" height="15" fill="rgb(248,109,41)" fg:x="24208" fg:w="6"/><text x="49.9839%" y="991.50"></text></g><g><title>pick_next_task_fair (5 samples, 0.01%)</title><rect x="49.7360%" y="965" width="0.0103%" height="15" fill="rgb(238,23,50)" fg:x="24209" fg:w="5"/><text x="49.9860%" y="975.50"></text></g><g><title>__get_obj_cgroup_from_memcg (9 samples, 0.02%)</title><rect x="49.7524%" y="997" width="0.0185%" height="15" fill="rgb(211,48,49)" fg:x="24217" fg:w="9"/><text x="50.0024%" y="1007.50"></text></g><g><title>get_obj_cgroup_from_current (17 samples, 0.03%)</title><rect x="49.7463%" y="1013" width="0.0349%" height="15" fill="rgb(223,36,21)" fg:x="24214" fg:w="17"/><text x="49.9963%" y="1023.50"></text></g><g><title>__rcu_read_lock (7 samples, 0.01%)</title><rect x="49.8428%" y="997" width="0.0144%" height="15" fill="rgb(207,123,46)" fg:x="24261" fg:w="7"/><text x="50.0928%" y="1007.50"></text></g><g><title>memcg_slab_post_alloc_hook (44 samples, 0.09%)</title><rect x="49.7812%" y="1013" width="0.0904%" height="15" fill="rgb(240,218,32)" fg:x="24231" fg:w="44"/><text x="50.0312%" y="1023.50"></text></g><g><title>mod_objcg_state (6 samples, 0.01%)</title><rect x="49.8593%" y="997" width="0.0123%" height="15" fill="rgb(252,5,43)" fg:x="24269" fg:w="6"/><text x="50.1093%" y="1007.50"></text></g><g><title>memset_erms (9 samples, 0.02%)</title><rect x="49.8716%" y="1013" width="0.0185%" height="15" fill="rgb(252,84,19)" fg:x="24275" fg:w="9"/><text x="50.1216%" y="1023.50"></text></g><g><title>kmem_cache_alloc (137 samples, 0.28%)</title><rect x="49.6333%" y="1029" width="0.2815%" height="15" fill="rgb(243,152,39)" fg:x="24159" fg:w="137"/><text x="49.8833%" y="1039.50"></text></g><g><title>obj_cgroup_charge (12 samples, 0.02%)</title><rect x="49.8901%" y="1013" width="0.0247%" height="15" fill="rgb(234,160,15)" fg:x="24284" fg:w="12"/><text x="50.1401%" y="1023.50"></text></g><g><title>apparmor_file_alloc_security (51 samples, 0.10%)</title><rect x="49.9332%" y="1013" width="0.1048%" height="15" fill="rgb(237,34,20)" fg:x="24305" fg:w="51"/><text x="50.1832%" y="1023.50"></text></g><g><title>__alloc_file (258 samples, 0.53%)</title><rect x="49.5675%" y="1045" width="0.5300%" height="15" fill="rgb(229,97,13)" fg:x="24127" fg:w="258"/><text x="49.8175%" y="1055.50"></text></g><g><title>security_file_alloc (89 samples, 0.18%)</title><rect x="49.9147%" y="1029" width="0.1828%" height="15" fill="rgb(234,71,50)" fg:x="24296" fg:w="89"/><text x="50.1647%" y="1039.50"></text></g><g><title>kmem_cache_alloc (29 samples, 0.06%)</title><rect x="50.0380%" y="1013" width="0.0596%" height="15" fill="rgb(253,155,4)" fg:x="24356" fg:w="29"/><text x="50.2880%" y="1023.50"></text></g><g><title>alloc_empty_file (281 samples, 0.58%)</title><rect x="49.5429%" y="1061" width="0.5773%" height="15" fill="rgb(222,185,37)" fg:x="24115" fg:w="281"/><text x="49.7929%" y="1071.50"></text></g><g><title>percpu_counter_add_batch (11 samples, 0.02%)</title><rect x="50.0976%" y="1045" width="0.0226%" height="15" fill="rgb(251,177,13)" fg:x="24385" fg:w="11"/><text x="50.3476%" y="1055.50"></text></g><g><title>alloc_file (303 samples, 0.62%)</title><rect x="49.5080%" y="1077" width="0.6225%" height="15" fill="rgb(250,179,40)" fg:x="24098" fg:w="303"/><text x="49.7580%" y="1087.50"></text></g><g><title>errseq_sample (5 samples, 0.01%)</title><rect x="50.1202%" y="1061" width="0.0103%" height="15" fill="rgb(242,44,2)" fg:x="24396" fg:w="5"/><text x="50.3702%" y="1071.50"></text></g><g><title>d_set_d_op (13 samples, 0.03%)</title><rect x="50.1654%" y="1045" width="0.0267%" height="15" fill="rgb(216,177,13)" fg:x="24418" fg:w="13"/><text x="50.4154%" y="1055.50"></text></g><g><title>___slab_alloc (10 samples, 0.02%)</title><rect x="50.2845%" y="1029" width="0.0205%" height="15" fill="rgb(216,106,43)" fg:x="24476" fg:w="10"/><text x="50.5345%" y="1039.50"></text></g><g><title>__rcu_read_lock (8 samples, 0.02%)</title><rect x="50.3092%" y="1029" width="0.0164%" height="15" fill="rgb(216,183,2)" fg:x="24488" fg:w="8"/><text x="50.5592%" y="1039.50"></text></g><g><title>__get_obj_cgroup_from_memcg (12 samples, 0.02%)</title><rect x="50.3421%" y="1013" width="0.0247%" height="15" fill="rgb(249,75,3)" fg:x="24504" fg:w="12"/><text x="50.5921%" y="1023.50"></text></g><g><title>get_obj_cgroup_from_current (19 samples, 0.04%)</title><rect x="50.3338%" y="1029" width="0.0390%" height="15" fill="rgb(219,67,39)" fg:x="24500" fg:w="19"/><text x="50.5838%" y="1039.50"></text></g><g><title>xas_descend (15 samples, 0.03%)</title><rect x="50.4160%" y="997" width="0.0308%" height="15" fill="rgb(253,228,2)" fg:x="24540" fg:w="15"/><text x="50.6660%" y="1007.50"></text></g><g><title>memcg_list_lru_alloc (40 samples, 0.08%)</title><rect x="50.3729%" y="1029" width="0.0822%" height="15" fill="rgb(235,138,27)" fg:x="24519" fg:w="40"/><text x="50.6229%" y="1039.50"></text></g><g><title>xa_load (31 samples, 0.06%)</title><rect x="50.3914%" y="1013" width="0.0637%" height="15" fill="rgb(236,97,51)" fg:x="24528" fg:w="31"/><text x="50.6414%" y="1023.50"></text></g><g><title>memcg_slab_post_alloc_hook (34 samples, 0.07%)</title><rect x="50.4551%" y="1029" width="0.0699%" height="15" fill="rgb(240,80,30)" fg:x="24559" fg:w="34"/><text x="50.7051%" y="1039.50"></text></g><g><title>mod_objcg_state (16 samples, 0.03%)</title><rect x="50.4920%" y="1013" width="0.0329%" height="15" fill="rgb(230,178,19)" fg:x="24577" fg:w="16"/><text x="50.7420%" y="1023.50"></text></g><g><title>memset_erms (12 samples, 0.02%)</title><rect x="50.5249%" y="1029" width="0.0247%" height="15" fill="rgb(210,190,27)" fg:x="24593" fg:w="12"/><text x="50.7749%" y="1039.50"></text></g><g><title>obj_cgroup_charge (12 samples, 0.02%)</title><rect x="50.5496%" y="1029" width="0.0247%" height="15" fill="rgb(222,107,31)" fg:x="24605" fg:w="12"/><text x="50.7996%" y="1039.50"></text></g><g><title>kmem_cache_alloc_lru (187 samples, 0.38%)</title><rect x="50.1921%" y="1045" width="0.3842%" height="15" fill="rgb(216,127,34)" fg:x="24431" fg:w="187"/><text x="50.4421%" y="1055.50"></text></g><g><title>d_alloc_pseudo (232 samples, 0.48%)</title><rect x="50.1305%" y="1077" width="0.4766%" height="15" fill="rgb(234,116,52)" fg:x="24401" fg:w="232"/><text x="50.3805%" y="1087.50"></text></g><g><title>__d_alloc (232 samples, 0.48%)</title><rect x="50.1305%" y="1061" width="0.4766%" height="15" fill="rgb(222,124,15)" fg:x="24401" fg:w="232"/><text x="50.3805%" y="1071.50"></text></g><g><title>memcpy_erms (14 samples, 0.03%)</title><rect x="50.5783%" y="1045" width="0.0288%" height="15" fill="rgb(231,179,28)" fg:x="24619" fg:w="14"/><text x="50.8283%" y="1055.50"></text></g><g><title>__d_instantiate (25 samples, 0.05%)</title><rect x="50.6194%" y="1061" width="0.0514%" height="15" fill="rgb(226,93,45)" fg:x="24639" fg:w="25"/><text x="50.8694%" y="1071.50"></text></g><g><title>d_flags_for_inode (17 samples, 0.03%)</title><rect x="50.6359%" y="1045" width="0.0349%" height="15" fill="rgb(215,8,51)" fg:x="24647" fg:w="17"/><text x="50.8859%" y="1055.50"></text></g><g><title>_raw_spin_lock (13 samples, 0.03%)</title><rect x="50.6708%" y="1061" width="0.0267%" height="15" fill="rgb(223,106,5)" fg:x="24664" fg:w="13"/><text x="50.9208%" y="1071.50"></text></g><g><title>d_instantiate (66 samples, 0.14%)</title><rect x="50.6071%" y="1077" width="0.1356%" height="15" fill="rgb(250,191,5)" fg:x="24633" fg:w="66"/><text x="50.8571%" y="1087.50"></text></g><g><title>security_d_instantiate (22 samples, 0.05%)</title><rect x="50.6975%" y="1061" width="0.0452%" height="15" fill="rgb(242,132,44)" fg:x="24677" fg:w="22"/><text x="50.9475%" y="1071.50"></text></g><g><title>bpf_lsm_d_instantiate (6 samples, 0.01%)</title><rect x="50.7304%" y="1045" width="0.0123%" height="15" fill="rgb(251,152,29)" fg:x="24693" fg:w="6"/><text x="50.9804%" y="1055.50"></text></g><g><title>mntget (6 samples, 0.01%)</title><rect x="50.7427%" y="1077" width="0.0123%" height="15" fill="rgb(218,179,5)" fg:x="24699" fg:w="6"/><text x="50.9927%" y="1087.50"></text></g><g><title>alloc_file_pseudo (632 samples, 1.30%)</title><rect x="49.4710%" y="1093" width="1.2984%" height="15" fill="rgb(227,67,19)" fg:x="24080" fg:w="632"/><text x="49.7210%" y="1103.50"></text></g><g><title>strlen (7 samples, 0.01%)</title><rect x="50.7550%" y="1077" width="0.0144%" height="15" fill="rgb(233,119,31)" fg:x="24705" fg:w="7"/><text x="51.0050%" y="1087.50"></text></g><g><title>do_accept (1,775 samples, 3.65%)</title><rect x="47.1248%" y="1125" width="3.6466%" height="15" fill="rgb(241,120,22)" fg:x="22938" fg:w="1775"/><text x="47.3748%" y="1135.50">do_a..</text></g><g><title>sock_alloc_file (638 samples, 1.31%)</title><rect x="49.4607%" y="1109" width="1.3107%" height="15" fill="rgb(224,102,30)" fg:x="24075" fg:w="638"/><text x="49.7107%" y="1119.50"></text></g><g><title>fd_install (11 samples, 0.02%)</title><rect x="50.7714%" y="1125" width="0.0226%" height="15" fill="rgb(210,164,37)" fg:x="24713" fg:w="11"/><text x="51.0214%" y="1135.50"></text></g><g><title>fput (15 samples, 0.03%)</title><rect x="50.7940%" y="1125" width="0.0308%" height="15" fill="rgb(226,191,16)" fg:x="24724" fg:w="15"/><text x="51.0440%" y="1135.50"></text></g><g><title>__x64_sys_accept4 (1,926 samples, 3.96%)</title><rect x="46.8742%" y="1157" width="3.9569%" height="15" fill="rgb(214,40,45)" fg:x="22816" fg:w="1926"/><text x="47.1242%" y="1167.50">__x6..</text></g><g><title>__sys_accept4 (1,912 samples, 3.93%)</title><rect x="46.9029%" y="1141" width="3.9281%" height="15" fill="rgb(244,29,26)" fg:x="22830" fg:w="1912"/><text x="47.1529%" y="1151.50">__sy..</text></g><g><title>syscall_enter_from_user_mode (9 samples, 0.02%)</title><rect x="50.8310%" y="1157" width="0.0185%" height="15" fill="rgb(216,16,5)" fg:x="24742" fg:w="9"/><text x="51.0810%" y="1167.50"></text></g><g><title>__rseq_handle_notify_resume (6 samples, 0.01%)</title><rect x="50.8988%" y="1125" width="0.0123%" height="15" fill="rgb(249,76,35)" fg:x="24775" fg:w="6"/><text x="51.1488%" y="1135.50"></text></g><g><title>__schedule (10 samples, 0.02%)</title><rect x="50.9235%" y="1109" width="0.0205%" height="15" fill="rgb(207,11,44)" fg:x="24787" fg:w="10"/><text x="51.1735%" y="1119.50"></text></g><g><title>schedule (12 samples, 0.02%)</title><rect x="50.9214%" y="1125" width="0.0247%" height="15" fill="rgb(228,190,49)" fg:x="24786" fg:w="12"/><text x="51.1714%" y="1135.50"></text></g><g><title>call_rcu (8 samples, 0.02%)</title><rect x="50.9810%" y="1045" width="0.0164%" height="15" fill="rgb(214,173,12)" fg:x="24815" fg:w="8"/><text x="51.2310%" y="1055.50"></text></g><g><title>destroy_inode (25 samples, 0.05%)</title><rect x="50.9810%" y="1077" width="0.0514%" height="15" fill="rgb(218,26,35)" fg:x="24815" fg:w="25"/><text x="51.2310%" y="1087.50"></text></g><g><title>__destroy_inode (25 samples, 0.05%)</title><rect x="50.9810%" y="1061" width="0.0514%" height="15" fill="rgb(220,200,19)" fg:x="24815" fg:w="25"/><text x="51.2310%" y="1071.50"></text></g><g><title>security_inode_free (15 samples, 0.03%)</title><rect x="51.0015%" y="1045" width="0.0308%" height="15" fill="rgb(239,95,49)" fg:x="24825" fg:w="15"/><text x="51.2515%" y="1055.50"></text></g><g><title>evict (14 samples, 0.03%)</title><rect x="51.0324%" y="1077" width="0.0288%" height="15" fill="rgb(235,85,53)" fg:x="24840" fg:w="14"/><text x="51.2824%" y="1087.50"></text></g><g><title>iput (6 samples, 0.01%)</title><rect x="51.0611%" y="1077" width="0.0123%" height="15" fill="rgb(233,133,31)" fg:x="24854" fg:w="6"/><text x="51.3111%" y="1087.50"></text></g><g><title>__dentry_kill (68 samples, 0.14%)</title><rect x="50.9605%" y="1093" width="0.1397%" height="15" fill="rgb(218,25,20)" fg:x="24805" fg:w="68"/><text x="51.2105%" y="1103.50"></text></g><g><title>kmem_cache_free (13 samples, 0.03%)</title><rect x="51.0734%" y="1077" width="0.0267%" height="15" fill="rgb(252,210,38)" fg:x="24860" fg:w="13"/><text x="51.3234%" y="1087.50"></text></g><g><title>dput (5 samples, 0.01%)</title><rect x="51.1002%" y="1093" width="0.0103%" height="15" fill="rgb(242,134,21)" fg:x="24873" fg:w="5"/><text x="51.3502%" y="1103.50"></text></g><g><title>__fput (100 samples, 0.21%)</title><rect x="50.9481%" y="1109" width="0.2054%" height="15" fill="rgb(213,28,48)" fg:x="24799" fg:w="100"/><text x="51.1981%" y="1119.50"></text></g><g><title>sock_close (6 samples, 0.01%)</title><rect x="51.1412%" y="1093" width="0.0123%" height="15" fill="rgb(250,196,2)" fg:x="24893" fg:w="6"/><text x="51.3912%" y="1103.50"></text></g><g><title>exit_to_user_mode_prepare (136 samples, 0.28%)</title><rect x="50.8783%" y="1141" width="0.2794%" height="15" fill="rgb(227,5,17)" fg:x="24765" fg:w="136"/><text x="51.1283%" y="1151.50"></text></g><g><title>task_work_run (102 samples, 0.21%)</title><rect x="50.9481%" y="1125" width="0.2096%" height="15" fill="rgb(221,226,24)" fg:x="24799" fg:w="102"/><text x="51.1981%" y="1135.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2,188 samples, 4.50%)</title><rect x="46.6667%" y="1189" width="4.4951%" height="15" fill="rgb(211,5,48)" fg:x="22715" fg:w="2188"/><text x="46.9167%" y="1199.50">entry..</text></g><g><title>do_syscall_64 (2,099 samples, 4.31%)</title><rect x="46.8495%" y="1173" width="4.3123%" height="15" fill="rgb(219,150,6)" fg:x="22804" fg:w="2099"/><text x="47.0995%" y="1183.50">do_sy..</text></g><g><title>syscall_exit_to_user_mode (152 samples, 0.31%)</title><rect x="50.8495%" y="1157" width="0.3123%" height="15" fill="rgb(251,46,16)" fg:x="24751" fg:w="152"/><text x="51.0995%" y="1167.50"></text></g><g><title>accept4 (2,410 samples, 4.95%)</title><rect x="46.5496%" y="1205" width="4.9512%" height="15" fill="rgb(220,204,40)" fg:x="22658" fg:w="2410"/><text x="46.7996%" y="1215.50">accept4</text></g><g><title>syscall_return_via_sysret (159 samples, 0.33%)</title><rect x="51.1741%" y="1189" width="0.3267%" height="15" fill="rgb(211,85,2)" fg:x="24909" fg:w="159"/><text x="51.4241%" y="1199.50"></text></g><g><title>mio::net::tcp::listener::TcpListener::accept (2,419 samples, 4.97%)</title><rect x="46.5455%" y="1285" width="4.9697%" height="15" fill="rgb(229,17,7)" fg:x="22656" fg:w="2419"/><text x="46.7955%" y="1295.50">mio::n..</text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (2,418 samples, 4.97%)</title><rect x="46.5475%" y="1269" width="4.9676%" height="15" fill="rgb(239,72,28)" fg:x="22657" fg:w="2418"/><text x="46.7975%" y="1279.50">mio::i..</text></g><g><title>mio::sys::unix::stateless_io_source::IoSourceState::do_io (2,418 samples, 4.97%)</title><rect x="46.5475%" y="1253" width="4.9676%" height="15" fill="rgb(230,47,54)" fg:x="22657" fg:w="2418"/><text x="46.7975%" y="1263.50">mio::s..</text></g><g><title>mio::net::tcp::listener::TcpListener::accept::{{closure}} (2,418 samples, 4.97%)</title><rect x="46.5475%" y="1237" width="4.9676%" height="15" fill="rgb(214,50,8)" fg:x="22657" fg:w="2418"/><text x="46.7975%" y="1247.50">mio::n..</text></g><g><title>mio::sys::unix::tcp::accept (2,418 samples, 4.97%)</title><rect x="46.5475%" y="1221" width="4.9676%" height="15" fill="rgb(216,198,43)" fg:x="22657" fg:w="2418"/><text x="46.7975%" y="1231.50">mio::s..</text></g><g><title>std::io::error::Error::last_os_error (5 samples, 0.01%)</title><rect x="51.5049%" y="1205" width="0.0103%" height="15" fill="rgb(234,20,35)" fg:x="25070" fg:w="5"/><text x="51.7549%" y="1215.50"></text></g><g><title>std::sys::unix::os::errno (5 samples, 0.01%)</title><rect x="51.5049%" y="1189" width="0.0103%" height="15" fill="rgb(254,45,19)" fg:x="25070" fg:w="5"/><text x="51.7549%" y="1199.50"></text></g><g><title>__GI___errno_location (5 samples, 0.01%)</title><rect x="51.5049%" y="1173" width="0.0103%" height="15" fill="rgb(219,14,44)" fg:x="25070" fg:w="5"/><text x="51.7549%" y="1183.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (8 samples, 0.02%)</title><rect x="51.5152%" y="1061" width="0.0164%" height="15" fill="rgb(217,220,26)" fg:x="25075" fg:w="8"/><text x="51.7652%" y="1071.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (8 samples, 0.02%)</title><rect x="51.5152%" y="1045" width="0.0164%" height="15" fill="rgb(213,158,28)" fg:x="25075" fg:w="8"/><text x="51.7652%" y="1055.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (8 samples, 0.02%)</title><rect x="51.5152%" y="1029" width="0.0164%" height="15" fill="rgb(252,51,52)" fg:x="25075" fg:w="8"/><text x="51.7652%" y="1039.50"></text></g><g><title>syscall (8 samples, 0.02%)</title><rect x="51.5152%" y="1013" width="0.0164%" height="15" fill="rgb(246,89,16)" fg:x="25075" fg:w="8"/><text x="51.7652%" y="1023.50"></text></g><g><title>entry_SYSCALL_64 (8 samples, 0.02%)</title><rect x="51.5152%" y="997" width="0.0164%" height="15" fill="rgb(216,158,49)" fg:x="25075" fg:w="8"/><text x="51.7652%" y="1007.50"></text></g><g><title>tokio::net::tcp::listener::TcpListener::accept::{{closure}}::{{closure}} (2,429 samples, 4.99%)</title><rect x="46.5434%" y="1301" width="4.9902%" height="15" fill="rgb(236,107,19)" fg:x="22655" fg:w="2429"/><text x="46.7934%" y="1311.50">tokio:..</text></g><g><title>tokio::task::spawn::spawn (9 samples, 0.02%)</title><rect x="51.5152%" y="1285" width="0.0185%" height="15" fill="rgb(228,185,30)" fg:x="25075" fg:w="9"/><text x="51.7652%" y="1295.50"></text></g><g><title>tokio::task::spawn::spawn_inner (9 samples, 0.02%)</title><rect x="51.5152%" y="1269" width="0.0185%" height="15" fill="rgb(246,134,8)" fg:x="25075" fg:w="9"/><text x="51.7652%" y="1279.50"></text></g><g><title>tokio::runtime::context::current::with_current (9 samples, 0.02%)</title><rect x="51.5152%" y="1253" width="0.0185%" height="15" fill="rgb(214,143,50)" fg:x="25075" fg:w="9"/><text x="51.7652%" y="1263.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (9 samples, 0.02%)</title><rect x="51.5152%" y="1237" width="0.0185%" height="15" fill="rgb(228,75,8)" fg:x="25075" fg:w="9"/><text x="51.7652%" y="1247.50"></text></g><g><title>tokio::runtime::context::current::with_current::{{closure}} (9 samples, 0.02%)</title><rect x="51.5152%" y="1221" width="0.0185%" height="15" fill="rgb(207,175,4)" fg:x="25075" fg:w="9"/><text x="51.7652%" y="1231.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (9 samples, 0.02%)</title><rect x="51.5152%" y="1205" width="0.0185%" height="15" fill="rgb(205,108,24)" fg:x="25075" fg:w="9"/><text x="51.7652%" y="1215.50"></text></g><g><title>tokio::task::spawn::spawn_inner::{{closure}} (9 samples, 0.02%)</title><rect x="51.5152%" y="1189" width="0.0185%" height="15" fill="rgb(244,120,49)" fg:x="25075" fg:w="9"/><text x="51.7652%" y="1199.50"></text></g><g><title>tokio::runtime::scheduler::Handle::spawn (9 samples, 0.02%)</title><rect x="51.5152%" y="1173" width="0.0185%" height="15" fill="rgb(223,47,38)" fg:x="25075" fg:w="9"/><text x="51.7652%" y="1183.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::handle::Handle::spawn (9 samples, 0.02%)</title><rect x="51.5152%" y="1157" width="0.0185%" height="15" fill="rgb(229,179,11)" fg:x="25075" fg:w="9"/><text x="51.7652%" y="1167.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::handle::Handle::bind_new_task (9 samples, 0.02%)</title><rect x="51.5152%" y="1141" width="0.0185%" height="15" fill="rgb(231,122,1)" fg:x="25075" fg:w="9"/><text x="51.7652%" y="1151.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_option_task_without_yield (9 samples, 0.02%)</title><rect x="51.5152%" y="1125" width="0.0185%" height="15" fill="rgb(245,119,9)" fg:x="25075" fg:w="9"/><text x="51.7652%" y="1135.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (9 samples, 0.02%)</title><rect x="51.5152%" y="1109" width="0.0185%" height="15" fill="rgb(241,163,25)" fg:x="25075" fg:w="9"/><text x="51.7652%" y="1119.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current (9 samples, 0.02%)</title><rect x="51.5152%" y="1093" width="0.0185%" height="15" fill="rgb(217,214,3)" fg:x="25075" fg:w="9"/><text x="51.7652%" y="1103.50"></text></g><g><title>tokio::runtime::context::with_scheduler (9 samples, 0.02%)</title><rect x="51.5152%" y="1077" width="0.0185%" height="15" fill="rgb(240,86,28)" fg:x="25075" fg:w="9"/><text x="51.7652%" y="1087.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (7 samples, 0.01%)</title><rect x="51.5809%" y="1253" width="0.0144%" height="15" fill="rgb(215,47,9)" fg:x="25107" fg:w="7"/><text x="51.8309%" y="1263.50"></text></g><g><title>tokio::runtime::park::clone (7 samples, 0.01%)</title><rect x="51.5809%" y="1237" width="0.0144%" height="15" fill="rgb(252,25,45)" fg:x="25107" fg:w="7"/><text x="51.8309%" y="1247.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::increment_strong_count (7 samples, 0.01%)</title><rect x="51.5809%" y="1221" width="0.0144%" height="15" fill="rgb(251,164,9)" fg:x="25107" fg:w="7"/><text x="51.8309%" y="1231.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::increment_strong_count_in (7 samples, 0.01%)</title><rect x="51.5809%" y="1205" width="0.0144%" height="15" fill="rgb(233,194,0)" fg:x="25107" fg:w="7"/><text x="51.8309%" y="1215.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (7 samples, 0.01%)</title><rect x="51.5809%" y="1189" width="0.0144%" height="15" fill="rgb(249,111,24)" fg:x="25107" fg:w="7"/><text x="51.8309%" y="1199.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (7 samples, 0.01%)</title><rect x="51.5809%" y="1173" width="0.0144%" height="15" fill="rgb(250,223,3)" fg:x="25107" fg:w="7"/><text x="51.8309%" y="1183.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (7 samples, 0.01%)</title><rect x="51.5809%" y="1157" width="0.0144%" height="15" fill="rgb(236,178,37)" fg:x="25107" fg:w="7"/><text x="51.8309%" y="1167.50"></text></g><g><title>core::sync::atomic::atomic_add (7 samples, 0.01%)</title><rect x="51.5809%" y="1141" width="0.0144%" height="15" fill="rgb(241,158,50)" fg:x="25107" fg:w="7"/><text x="51.8309%" y="1151.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (6 samples, 0.01%)</title><rect x="51.5953%" y="1253" width="0.0123%" height="15" fill="rgb(213,121,41)" fg:x="25114" fg:w="6"/><text x="51.8453%" y="1263.50"></text></g><g><title>core::sync::atomic::atomic_load (6 samples, 0.01%)</title><rect x="51.5953%" y="1237" width="0.0123%" height="15" fill="rgb(240,92,3)" fg:x="25114" fg:w="6"/><text x="51.8453%" y="1247.50"></text></g><g><title>&lt;tokio::runtime::io::scheduled_io::Readiness as core::future::future::Future&gt;::poll (28 samples, 0.06%)</title><rect x="51.5624%" y="1269" width="0.0575%" height="15" fill="rgb(205,123,3)" fg:x="25098" fg:w="28"/><text x="51.8124%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::io::scheduled_io::Waiters&gt;&gt; (7 samples, 0.01%)</title><rect x="51.6199%" y="1237" width="0.0144%" height="15" fill="rgb(205,97,47)" fg:x="25126" fg:w="7"/><text x="51.8699%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::io::scheduled_io::Waiters&gt;&gt; (7 samples, 0.01%)</title><rect x="51.6199%" y="1221" width="0.0144%" height="15" fill="rgb(247,152,14)" fg:x="25126" fg:w="7"/><text x="51.8699%" y="1231.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.01%)</title><rect x="51.6199%" y="1205" width="0.0144%" height="15" fill="rgb(248,195,53)" fg:x="25126" fg:w="7"/><text x="51.8699%" y="1215.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (7 samples, 0.01%)</title><rect x="51.6199%" y="1189" width="0.0144%" height="15" fill="rgb(226,201,16)" fg:x="25126" fg:w="7"/><text x="51.8699%" y="1199.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (7 samples, 0.01%)</title><rect x="51.6199%" y="1173" width="0.0144%" height="15" fill="rgb(205,98,0)" fg:x="25126" fg:w="7"/><text x="51.8699%" y="1183.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (7 samples, 0.01%)</title><rect x="51.6199%" y="1157" width="0.0144%" height="15" fill="rgb(214,191,48)" fg:x="25126" fg:w="7"/><text x="51.8699%" y="1167.50"></text></g><g><title>&lt;tokio::runtime::io::scheduled_io::Readiness as core::ops::drop::Drop&gt;::drop (12 samples, 0.02%)</title><rect x="51.6199%" y="1253" width="0.0247%" height="15" fill="rgb(237,112,39)" fg:x="25126" fg:w="12"/><text x="51.8699%" y="1263.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (5 samples, 0.01%)</title><rect x="51.6343%" y="1237" width="0.0103%" height="15" fill="rgb(247,203,27)" fg:x="25133" fg:w="5"/><text x="51.8843%" y="1247.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (5 samples, 0.01%)</title><rect x="51.6343%" y="1221" width="0.0103%" height="15" fill="rgb(235,124,28)" fg:x="25133" fg:w="5"/><text x="51.8843%" y="1231.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (5 samples, 0.01%)</title><rect x="51.6343%" y="1205" width="0.0103%" height="15" fill="rgb(208,207,46)" fg:x="25133" fg:w="5"/><text x="51.8843%" y="1215.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (5 samples, 0.01%)</title><rect x="51.6343%" y="1189" width="0.0103%" height="15" fill="rgb(234,176,4)" fg:x="25133" fg:w="5"/><text x="51.8843%" y="1199.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (5 samples, 0.01%)</title><rect x="51.6343%" y="1173" width="0.0103%" height="15" fill="rgb(230,133,28)" fg:x="25133" fg:w="5"/><text x="51.8843%" y="1183.50"></text></g><g><title>tokio::net::tcp::listener::TcpListener::accept::{{closure}} (4,340 samples, 8.92%)</title><rect x="42.7304%" y="1333" width="8.9163%" height="15" fill="rgb(211,137,40)" fg:x="20799" fg:w="4340"/><text x="42.9804%" y="1343.50">tokio::net::t..</text></g><g><title>tokio::runtime::io::registration::Registration::async_io::{{closure}} (2,518 samples, 5.17%)</title><rect x="46.4735%" y="1317" width="5.1731%" height="15" fill="rgb(254,35,13)" fg:x="22621" fg:w="2518"/><text x="46.7235%" y="1327.50">tokio:..</text></g><g><title>tokio::runtime::io::registration::Registration::readiness::{{closure}} (51 samples, 0.10%)</title><rect x="51.5419%" y="1301" width="0.1048%" height="15" fill="rgb(225,49,51)" fg:x="25088" fg:w="51"/><text x="51.7919%" y="1311.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::readiness::{{closure}} (47 samples, 0.10%)</title><rect x="51.5501%" y="1285" width="0.0966%" height="15" fill="rgb(251,10,15)" fg:x="25092" fg:w="47"/><text x="51.8001%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::io::scheduled_io::Readiness&gt; (13 samples, 0.03%)</title><rect x="51.6199%" y="1269" width="0.0267%" height="15" fill="rgb(228,207,15)" fg:x="25126" fg:w="13"/><text x="51.8699%" y="1279.50"></text></g><g><title>__memcpy_avx_unaligned_erms (49 samples, 0.10%)</title><rect x="51.6487%" y="1317" width="0.1007%" height="15" fill="rgb(241,99,19)" fg:x="25140" fg:w="49"/><text x="51.8987%" y="1327.50"></text></g><g><title>__memcpy_avx_unaligned_erms (10 samples, 0.02%)</title><rect x="51.7494%" y="1301" width="0.0205%" height="15" fill="rgb(207,104,49)" fg:x="25189" fg:w="10"/><text x="51.9994%" y="1311.50"></text></g><g><title>__memcpy_avx_unaligned_erms (19 samples, 0.04%)</title><rect x="51.7720%" y="1269" width="0.0390%" height="15" fill="rgb(234,99,18)" fg:x="25200" fg:w="19"/><text x="52.0220%" y="1279.50"></text></g><g><title>__memcpy_avx_unaligned_erms (19 samples, 0.04%)</title><rect x="51.8192%" y="1253" width="0.0390%" height="15" fill="rgb(213,191,49)" fg:x="25223" fg:w="19"/><text x="52.0692%" y="1263.50"></text></g><g><title>__memcpy_avx_unaligned_erms (17 samples, 0.03%)</title><rect x="51.8644%" y="1237" width="0.0349%" height="15" fill="rgb(210,226,19)" fg:x="25245" fg:w="17"/><text x="52.1144%" y="1247.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (10 samples, 0.02%)</title><rect x="51.9096%" y="1173" width="0.0205%" height="15" fill="rgb(229,97,18)" fg:x="25267" fg:w="10"/><text x="52.1596%" y="1183.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (10 samples, 0.02%)</title><rect x="51.9096%" y="1157" width="0.0205%" height="15" fill="rgb(211,167,15)" fg:x="25267" fg:w="10"/><text x="52.1596%" y="1167.50"></text></g><g><title>core::sync::atomic::atomic_add (10 samples, 0.02%)</title><rect x="51.9096%" y="1141" width="0.0205%" height="15" fill="rgb(210,169,34)" fg:x="25267" fg:w="10"/><text x="52.1596%" y="1151.50"></text></g><g><title>__memcpy_avx_unaligned_erms (16 samples, 0.03%)</title><rect x="51.9322%" y="1173" width="0.0329%" height="15" fill="rgb(241,121,31)" fg:x="25278" fg:w="16"/><text x="52.1822%" y="1183.50"></text></g><g><title>futex_wake_mark (5 samples, 0.01%)</title><rect x="52.0616%" y="965" width="0.0103%" height="15" fill="rgb(232,40,11)" fg:x="25341" fg:w="5"/><text x="52.3116%" y="975.50"></text></g><g><title>_raw_spin_lock (5 samples, 0.01%)</title><rect x="52.1171%" y="933" width="0.0103%" height="15" fill="rgb(205,86,26)" fg:x="25368" fg:w="5"/><text x="52.3671%" y="943.50"></text></g><g><title>native_queued_spin_lock_slowpath (5 samples, 0.01%)</title><rect x="52.1171%" y="917" width="0.0103%" height="15" fill="rgb(231,126,28)" fg:x="25368" fg:w="5"/><text x="52.3671%" y="927.50"></text></g><g><title>available_idle_cpu (5 samples, 0.01%)</title><rect x="52.1931%" y="917" width="0.0103%" height="15" fill="rgb(219,221,18)" fg:x="25405" fg:w="5"/><text x="52.4431%" y="927.50"></text></g><g><title>select_task_rq_fair (34 samples, 0.07%)</title><rect x="52.1376%" y="933" width="0.0699%" height="15" fill="rgb(211,40,0)" fg:x="25378" fg:w="34"/><text x="52.3876%" y="943.50"></text></g><g><title>set_task_cpu (6 samples, 0.01%)</title><rect x="52.2075%" y="933" width="0.0123%" height="15" fill="rgb(239,85,43)" fg:x="25412" fg:w="6"/><text x="52.4575%" y="943.50"></text></g><g><title>enqueue_entity (19 samples, 0.04%)</title><rect x="52.2548%" y="901" width="0.0390%" height="15" fill="rgb(231,55,21)" fg:x="25435" fg:w="19"/><text x="52.5048%" y="911.50"></text></g><g><title>reweight_entity (12 samples, 0.02%)</title><rect x="52.2938%" y="901" width="0.0247%" height="15" fill="rgb(225,184,43)" fg:x="25454" fg:w="12"/><text x="52.5438%" y="911.50"></text></g><g><title>update_curr (6 samples, 0.01%)</title><rect x="52.3061%" y="885" width="0.0123%" height="15" fill="rgb(251,158,41)" fg:x="25460" fg:w="6"/><text x="52.5561%" y="895.50"></text></g><g><title>__calc_delta (6 samples, 0.01%)</title><rect x="52.3061%" y="869" width="0.0123%" height="15" fill="rgb(234,159,37)" fg:x="25460" fg:w="6"/><text x="52.5561%" y="879.50"></text></g><g><title>update_cfs_group (13 samples, 0.03%)</title><rect x="52.3184%" y="901" width="0.0267%" height="15" fill="rgb(216,204,22)" fg:x="25466" fg:w="13"/><text x="52.5684%" y="911.50"></text></g><g><title>__update_load_avg_cfs_rq (6 samples, 0.01%)</title><rect x="52.3719%" y="885" width="0.0123%" height="15" fill="rgb(214,17,3)" fg:x="25492" fg:w="6"/><text x="52.6219%" y="895.50"></text></g><g><title>enqueue_task_fair (81 samples, 0.17%)</title><rect x="52.2239%" y="917" width="0.1664%" height="15" fill="rgb(212,111,17)" fg:x="25420" fg:w="81"/><text x="52.4739%" y="927.50"></text></g><g><title>update_load_avg (22 samples, 0.05%)</title><rect x="52.3451%" y="901" width="0.0452%" height="15" fill="rgb(221,157,24)" fg:x="25479" fg:w="22"/><text x="52.5951%" y="911.50"></text></g><g><title>ttwu_do_activate (117 samples, 0.24%)</title><rect x="52.2198%" y="933" width="0.2404%" height="15" fill="rgb(252,16,13)" fg:x="25418" fg:w="117"/><text x="52.4698%" y="943.50"></text></g><g><title>psi_task_change (34 samples, 0.07%)</title><rect x="52.3903%" y="917" width="0.0699%" height="15" fill="rgb(221,62,2)" fg:x="25501" fg:w="34"/><text x="52.6403%" y="927.50"></text></g><g><title>psi_group_change (25 samples, 0.05%)</title><rect x="52.4088%" y="901" width="0.0514%" height="15" fill="rgb(247,87,22)" fg:x="25510" fg:w="25"/><text x="52.6588%" y="911.50"></text></g><g><title>ttwu_do_wakeup (13 samples, 0.03%)</title><rect x="52.4602%" y="933" width="0.0267%" height="15" fill="rgb(215,73,9)" fg:x="25535" fg:w="13"/><text x="52.7102%" y="943.50"></text></g><g><title>check_preempt_curr (12 samples, 0.02%)</title><rect x="52.4622%" y="917" width="0.0247%" height="15" fill="rgb(207,175,33)" fg:x="25536" fg:w="12"/><text x="52.7122%" y="927.50"></text></g><g><title>check_preempt_wakeup (11 samples, 0.02%)</title><rect x="52.4643%" y="901" width="0.0226%" height="15" fill="rgb(243,129,54)" fg:x="25537" fg:w="11"/><text x="52.7143%" y="911.50"></text></g><g><title>ttwu_queue_wakelist (9 samples, 0.02%)</title><rect x="52.4869%" y="933" width="0.0185%" height="15" fill="rgb(227,119,45)" fg:x="25548" fg:w="9"/><text x="52.7369%" y="943.50"></text></g><g><title>__x64_sys_futex (233 samples, 0.48%)</title><rect x="52.0288%" y="1013" width="0.4787%" height="15" fill="rgb(205,109,36)" fg:x="25325" fg:w="233"/><text x="52.2788%" y="1023.50"></text></g><g><title>do_futex (231 samples, 0.47%)</title><rect x="52.0329%" y="997" width="0.4746%" height="15" fill="rgb(205,6,39)" fg:x="25327" fg:w="231"/><text x="52.2829%" y="1007.50"></text></g><g><title>futex_wake (230 samples, 0.47%)</title><rect x="52.0349%" y="981" width="0.4725%" height="15" fill="rgb(221,32,16)" fg:x="25328" fg:w="230"/><text x="52.2849%" y="991.50"></text></g><g><title>wake_up_q (208 samples, 0.43%)</title><rect x="52.0801%" y="965" width="0.4273%" height="15" fill="rgb(228,144,50)" fg:x="25350" fg:w="208"/><text x="52.3301%" y="975.50"></text></g><g><title>try_to_wake_up (206 samples, 0.42%)</title><rect x="52.0842%" y="949" width="0.4232%" height="15" fill="rgb(229,201,53)" fg:x="25352" fg:w="206"/><text x="52.3342%" y="959.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (6 samples, 0.01%)</title><rect x="52.5485%" y="933" width="0.0123%" height="15" fill="rgb(249,153,27)" fg:x="25578" fg:w="6"/><text x="52.7985%" y="943.50"></text></g><g><title>native_write_msr (5 samples, 0.01%)</title><rect x="52.5506%" y="917" width="0.0103%" height="15" fill="rgb(227,106,25)" fg:x="25579" fg:w="5"/><text x="52.8006%" y="927.50"></text></g><g><title>__perf_event_task_sched_out (13 samples, 0.03%)</title><rect x="52.5424%" y="949" width="0.0267%" height="15" fill="rgb(230,65,29)" fg:x="25575" fg:w="13"/><text x="52.7924%" y="959.50"></text></g><g><title>_raw_spin_lock (6 samples, 0.01%)</title><rect x="52.5711%" y="949" width="0.0123%" height="15" fill="rgb(221,57,46)" fg:x="25589" fg:w="6"/><text x="52.8211%" y="959.50"></text></g><g><title>finish_task_switch.isra.0 (5 samples, 0.01%)</title><rect x="52.5835%" y="949" width="0.0103%" height="15" fill="rgb(229,161,17)" fg:x="25595" fg:w="5"/><text x="52.8335%" y="959.50"></text></g><g><title>put_prev_entity (5 samples, 0.01%)</title><rect x="52.6061%" y="933" width="0.0103%" height="15" fill="rgb(222,213,11)" fg:x="25606" fg:w="5"/><text x="52.8561%" y="943.50"></text></g><g><title>set_next_entity (5 samples, 0.01%)</title><rect x="52.6163%" y="933" width="0.0103%" height="15" fill="rgb(235,35,13)" fg:x="25611" fg:w="5"/><text x="52.8663%" y="943.50"></text></g><g><title>pick_next_task_fair (18 samples, 0.04%)</title><rect x="52.5937%" y="949" width="0.0370%" height="15" fill="rgb(233,158,34)" fg:x="25600" fg:w="18"/><text x="52.8437%" y="959.50"></text></g><g><title>schedule (58 samples, 0.12%)</title><rect x="52.5280%" y="981" width="0.1192%" height="15" fill="rgb(215,151,48)" fg:x="25568" fg:w="58"/><text x="52.7780%" y="991.50"></text></g><g><title>__schedule (57 samples, 0.12%)</title><rect x="52.5300%" y="965" width="0.1171%" height="15" fill="rgb(229,84,14)" fg:x="25569" fg:w="57"/><text x="52.7800%" y="975.50"></text></g><g><title>exit_to_user_mode_prepare (65 samples, 0.13%)</title><rect x="52.5177%" y="997" width="0.1335%" height="15" fill="rgb(229,68,14)" fg:x="25563" fg:w="65"/><text x="52.7677%" y="1007.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (317 samples, 0.65%)</title><rect x="52.0021%" y="1045" width="0.6513%" height="15" fill="rgb(243,106,26)" fg:x="25312" fg:w="317"/><text x="52.2521%" y="1055.50"></text></g><g><title>do_syscall_64 (305 samples, 0.63%)</title><rect x="52.0267%" y="1029" width="0.6266%" height="15" fill="rgb(206,45,38)" fg:x="25324" fg:w="305"/><text x="52.2767%" y="1039.50"></text></g><g><title>syscall_exit_to_user_mode (71 samples, 0.15%)</title><rect x="52.5074%" y="1013" width="0.1459%" height="15" fill="rgb(226,6,15)" fg:x="25558" fg:w="71"/><text x="52.7574%" y="1023.50"></text></g><g><title>syscall_return_via_sysret (25 samples, 0.05%)</title><rect x="52.6615%" y="1045" width="0.0514%" height="15" fill="rgb(232,22,54)" fg:x="25633" fg:w="25"/><text x="52.9115%" y="1055.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (357 samples, 0.73%)</title><rect x="51.9815%" y="1077" width="0.7334%" height="15" fill="rgb(229,222,32)" fg:x="25302" fg:w="357"/><text x="52.2315%" y="1087.50"></text></g><g><title>syscall (356 samples, 0.73%)</title><rect x="51.9836%" y="1061" width="0.7314%" height="15" fill="rgb(228,62,29)" fg:x="25303" fg:w="356"/><text x="52.2336%" y="1071.50"></text></g><g><title>std::sys::unix::time::Timespec::now (6 samples, 0.01%)</title><rect x="52.7232%" y="1061" width="0.0123%" height="15" fill="rgb(251,103,34)" fg:x="25663" fg:w="6"/><text x="52.9732%" y="1071.50"></text></g><g><title>__GI___clock_gettime (6 samples, 0.01%)</title><rect x="52.7232%" y="1045" width="0.0123%" height="15" fill="rgb(233,12,30)" fg:x="25663" fg:w="6"/><text x="52.9732%" y="1055.50"></text></g><g><title>__vdso_clock_gettime (6 samples, 0.01%)</title><rect x="52.7232%" y="1029" width="0.0123%" height="15" fill="rgb(238,52,0)" fg:x="25663" fg:w="6"/><text x="52.9732%" y="1039.50"></text></g><g><title>parking_lot_core::parking_lot::FairTimeout::should_timeout (8 samples, 0.02%)</title><rect x="52.7232%" y="1077" width="0.0164%" height="15" fill="rgb(223,98,5)" fg:x="25663" fg:w="8"/><text x="52.9732%" y="1087.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (6 samples, 0.01%)</title><rect x="52.7396%" y="1077" width="0.0123%" height="15" fill="rgb(228,75,37)" fg:x="25671" fg:w="6"/><text x="52.9896%" y="1087.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (377 samples, 0.77%)</title><rect x="51.9815%" y="1109" width="0.7745%" height="15" fill="rgb(205,115,49)" fg:x="25302" fg:w="377"/><text x="52.2315%" y="1119.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (377 samples, 0.77%)</title><rect x="51.9815%" y="1093" width="0.7745%" height="15" fill="rgb(250,154,43)" fg:x="25302" fg:w="377"/><text x="52.2315%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (9 samples, 0.02%)</title><rect x="52.7663%" y="1013" width="0.0185%" height="15" fill="rgb(226,43,29)" fg:x="25684" fg:w="9"/><text x="53.0163%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (9 samples, 0.02%)</title><rect x="52.7663%" y="997" width="0.0185%" height="15" fill="rgb(249,228,39)" fg:x="25684" fg:w="9"/><text x="53.0163%" y="1007.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.02%)</title><rect x="52.7663%" y="981" width="0.0185%" height="15" fill="rgb(216,79,43)" fg:x="25684" fg:w="9"/><text x="53.0163%" y="991.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (9 samples, 0.02%)</title><rect x="52.7663%" y="965" width="0.0185%" height="15" fill="rgb(228,95,12)" fg:x="25684" fg:w="9"/><text x="53.0163%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (8 samples, 0.02%)</title><rect x="52.7684%" y="949" width="0.0164%" height="15" fill="rgb(249,221,15)" fg:x="25685" fg:w="8"/><text x="53.0184%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (8 samples, 0.02%)</title><rect x="52.7684%" y="933" width="0.0164%" height="15" fill="rgb(233,34,13)" fg:x="25685" fg:w="8"/><text x="53.0184%" y="943.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (11 samples, 0.02%)</title><rect x="52.7848%" y="1013" width="0.0226%" height="15" fill="rgb(214,103,39)" fg:x="25693" fg:w="11"/><text x="53.0348%" y="1023.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (10 samples, 0.02%)</title><rect x="52.7869%" y="997" width="0.0205%" height="15" fill="rgb(251,126,39)" fg:x="25694" fg:w="10"/><text x="53.0369%" y="1007.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (10 samples, 0.02%)</title><rect x="52.7869%" y="981" width="0.0205%" height="15" fill="rgb(214,216,36)" fg:x="25694" fg:w="10"/><text x="53.0369%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (9 samples, 0.02%)</title><rect x="52.7889%" y="965" width="0.0185%" height="15" fill="rgb(220,221,8)" fg:x="25695" fg:w="9"/><text x="53.0389%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (9 samples, 0.02%)</title><rect x="52.7889%" y="949" width="0.0185%" height="15" fill="rgb(240,216,3)" fg:x="25695" fg:w="9"/><text x="53.0389%" y="959.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (26 samples, 0.05%)</title><rect x="52.7560%" y="1109" width="0.0534%" height="15" fill="rgb(232,218,17)" fg:x="25679" fg:w="26"/><text x="53.0060%" y="1119.50"></text></g><g><title>tokio::runtime::context::with_scheduler::{{closure}} (23 samples, 0.05%)</title><rect x="52.7622%" y="1093" width="0.0473%" height="15" fill="rgb(229,163,45)" fg:x="25682" fg:w="23"/><text x="53.0122%" y="1103.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::with (22 samples, 0.05%)</title><rect x="52.7643%" y="1077" width="0.0452%" height="15" fill="rgb(231,110,42)" fg:x="25683" fg:w="22"/><text x="53.0143%" y="1087.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current::{{closure}} (22 samples, 0.05%)</title><rect x="52.7643%" y="1061" width="0.0452%" height="15" fill="rgb(208,170,48)" fg:x="25683" fg:w="22"/><text x="53.0143%" y="1071.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task::{{closure}} (22 samples, 0.05%)</title><rect x="52.7643%" y="1045" width="0.0452%" height="15" fill="rgb(239,116,25)" fg:x="25683" fg:w="22"/><text x="53.0143%" y="1055.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::push_remote_task (22 samples, 0.05%)</title><rect x="52.7643%" y="1029" width="0.0452%" height="15" fill="rgb(219,200,50)" fg:x="25683" fg:w="22"/><text x="53.0143%" y="1039.50"></text></g><g><title>enqueue_task_fair (9 samples, 0.02%)</title><rect x="52.8629%" y="773" width="0.0185%" height="15" fill="rgb(245,200,0)" fg:x="25731" fg:w="9"/><text x="53.1129%" y="783.50"></text></g><g><title>ttwu_do_activate (11 samples, 0.02%)</title><rect x="52.8629%" y="789" width="0.0226%" height="15" fill="rgb(245,119,33)" fg:x="25731" fg:w="11"/><text x="53.1129%" y="799.50"></text></g><g><title>__wake_up_common (18 samples, 0.04%)</title><rect x="52.8546%" y="837" width="0.0370%" height="15" fill="rgb(231,125,12)" fg:x="25727" fg:w="18"/><text x="53.1046%" y="847.50"></text></g><g><title>ep_autoremove_wake_function (18 samples, 0.04%)</title><rect x="52.8546%" y="821" width="0.0370%" height="15" fill="rgb(216,96,41)" fg:x="25727" fg:w="18"/><text x="53.1046%" y="831.50"></text></g><g><title>try_to_wake_up (18 samples, 0.04%)</title><rect x="52.8546%" y="805" width="0.0370%" height="15" fill="rgb(248,43,45)" fg:x="25727" fg:w="18"/><text x="53.1046%" y="815.50"></text></g><g><title>__wake_up_common_lock (21 samples, 0.04%)</title><rect x="52.8546%" y="853" width="0.0431%" height="15" fill="rgb(217,222,7)" fg:x="25727" fg:w="21"/><text x="53.1046%" y="863.50"></text></g><g><title>__wake_up_common (24 samples, 0.05%)</title><rect x="52.8526%" y="885" width="0.0493%" height="15" fill="rgb(233,28,6)" fg:x="25726" fg:w="24"/><text x="53.1026%" y="895.50"></text></g><g><title>ep_poll_callback (24 samples, 0.05%)</title><rect x="52.8526%" y="869" width="0.0493%" height="15" fill="rgb(231,218,15)" fg:x="25726" fg:w="24"/><text x="53.1026%" y="879.50"></text></g><g><title>eventfd_write (29 samples, 0.06%)</title><rect x="52.8505%" y="901" width="0.0596%" height="15" fill="rgb(226,171,48)" fg:x="25725" fg:w="29"/><text x="53.1005%" y="911.50"></text></g><g><title>ksys_write (38 samples, 0.08%)</title><rect x="52.8464%" y="933" width="0.0781%" height="15" fill="rgb(235,201,9)" fg:x="25723" fg:w="38"/><text x="53.0964%" y="943.50"></text></g><g><title>vfs_write (37 samples, 0.08%)</title><rect x="52.8485%" y="917" width="0.0760%" height="15" fill="rgb(217,80,15)" fg:x="25724" fg:w="37"/><text x="53.0985%" y="927.50"></text></g><g><title>security_file_permission (7 samples, 0.01%)</title><rect x="52.9101%" y="901" width="0.0144%" height="15" fill="rgb(219,152,8)" fg:x="25754" fg:w="7"/><text x="53.1601%" y="911.50"></text></g><g><title>apparmor_file_permission (5 samples, 0.01%)</title><rect x="52.9142%" y="885" width="0.0103%" height="15" fill="rgb(243,107,38)" fg:x="25756" fg:w="5"/><text x="53.1642%" y="895.50"></text></g><g><title>schedule (10 samples, 0.02%)</title><rect x="52.9266%" y="901" width="0.0205%" height="15" fill="rgb(231,17,5)" fg:x="25762" fg:w="10"/><text x="53.1766%" y="911.50"></text></g><g><title>__schedule (10 samples, 0.02%)</title><rect x="52.9266%" y="885" width="0.0205%" height="15" fill="rgb(209,25,54)" fg:x="25762" fg:w="10"/><text x="53.1766%" y="895.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (62 samples, 0.13%)</title><rect x="52.8238%" y="965" width="0.1274%" height="15" fill="rgb(219,0,2)" fg:x="25712" fg:w="62"/><text x="53.0738%" y="975.50"></text></g><g><title>do_syscall_64 (58 samples, 0.12%)</title><rect x="52.8320%" y="949" width="0.1192%" height="15" fill="rgb(246,9,5)" fg:x="25716" fg:w="58"/><text x="53.0820%" y="959.50"></text></g><g><title>syscall_exit_to_user_mode (13 samples, 0.03%)</title><rect x="52.9245%" y="933" width="0.0267%" height="15" fill="rgb(226,159,4)" fg:x="25761" fg:w="13"/><text x="53.1745%" y="943.50"></text></g><g><title>exit_to_user_mode_prepare (13 samples, 0.03%)</title><rect x="52.9245%" y="917" width="0.0267%" height="15" fill="rgb(219,175,34)" fg:x="25761" fg:w="13"/><text x="53.1745%" y="927.50"></text></g><g><title>tokio::runtime::driver::Handle::unpark (76 samples, 0.16%)</title><rect x="52.8095%" y="1109" width="0.1561%" height="15" fill="rgb(236,10,46)" fg:x="25705" fg:w="76"/><text x="53.0595%" y="1119.50"></text></g><g><title>tokio::runtime::driver::IoHandle::unpark (76 samples, 0.16%)</title><rect x="52.8095%" y="1093" width="0.1561%" height="15" fill="rgb(240,211,16)" fg:x="25705" fg:w="76"/><text x="53.0595%" y="1103.50"></text></g><g><title>tokio::runtime::io::driver::Handle::unpark (76 samples, 0.16%)</title><rect x="52.8095%" y="1077" width="0.1561%" height="15" fill="rgb(205,3,43)" fg:x="25705" fg:w="76"/><text x="53.0595%" y="1087.50"></text></g><g><title>mio::sys::unix::waker::eventfd::WakerInternal::wake (76 samples, 0.16%)</title><rect x="52.8095%" y="1061" width="0.1561%" height="15" fill="rgb(245,7,22)" fg:x="25705" fg:w="76"/><text x="53.0595%" y="1071.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (76 samples, 0.16%)</title><rect x="52.8095%" y="1045" width="0.1561%" height="15" fill="rgb(239,132,32)" fg:x="25705" fg:w="76"/><text x="53.0595%" y="1055.50"></text></g><g><title>std::sys::unix::fs::File::write (76 samples, 0.16%)</title><rect x="52.8095%" y="1029" width="0.1561%" height="15" fill="rgb(228,202,34)" fg:x="25705" fg:w="76"/><text x="53.0595%" y="1039.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (76 samples, 0.16%)</title><rect x="52.8095%" y="1013" width="0.1561%" height="15" fill="rgb(254,200,22)" fg:x="25705" fg:w="76"/><text x="53.0595%" y="1023.50"></text></g><g><title>__GI___libc_write (76 samples, 0.16%)</title><rect x="52.8095%" y="997" width="0.1561%" height="15" fill="rgb(219,10,39)" fg:x="25705" fg:w="76"/><text x="53.0595%" y="1007.50"></text></g><g><title>__GI___libc_write (76 samples, 0.16%)</title><rect x="52.8095%" y="981" width="0.1561%" height="15" fill="rgb(226,210,39)" fg:x="25705" fg:w="76"/><text x="53.0595%" y="991.50"></text></g><g><title>syscall_return_via_sysret (7 samples, 0.01%)</title><rect x="52.9512%" y="965" width="0.0144%" height="15" fill="rgb(208,219,16)" fg:x="25774" fg:w="7"/><text x="53.2012%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (7 samples, 0.01%)</title><rect x="52.9676%" y="1077" width="0.0144%" height="15" fill="rgb(216,158,51)" fg:x="25782" fg:w="7"/><text x="53.2176%" y="1087.50"></text></g><g><title>core::sync::atomic::atomic_swap (7 samples, 0.01%)</title><rect x="52.9676%" y="1061" width="0.0144%" height="15" fill="rgb(233,14,44)" fg:x="25782" fg:w="7"/><text x="53.2176%" y="1071.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (10 samples, 0.02%)</title><rect x="52.9656%" y="1109" width="0.0205%" height="15" fill="rgb(237,97,39)" fg:x="25781" fg:w="10"/><text x="53.2156%" y="1119.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::unpark (10 samples, 0.02%)</title><rect x="52.9656%" y="1093" width="0.0205%" height="15" fill="rgb(218,198,43)" fg:x="25781" fg:w="10"/><text x="53.2156%" y="1103.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::notify_should_wakeup (13 samples, 0.03%)</title><rect x="52.9944%" y="1077" width="0.0267%" height="15" fill="rgb(231,104,20)" fg:x="25795" fg:w="13"/><text x="53.2444%" y="1087.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (12 samples, 0.02%)</title><rect x="52.9964%" y="1061" width="0.0247%" height="15" fill="rgb(254,36,13)" fg:x="25796" fg:w="12"/><text x="53.2464%" y="1071.50"></text></g><g><title>core::sync::atomic::atomic_add (12 samples, 0.02%)</title><rect x="52.9964%" y="1045" width="0.0247%" height="15" fill="rgb(248,14,50)" fg:x="25796" fg:w="12"/><text x="53.2464%" y="1055.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_option_task_without_yield (514 samples, 1.06%)</title><rect x="51.9671%" y="1173" width="1.0560%" height="15" fill="rgb(217,107,29)" fg:x="25295" fg:w="514"/><text x="52.2171%" y="1183.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (513 samples, 1.05%)</title><rect x="51.9692%" y="1157" width="1.0539%" height="15" fill="rgb(251,169,33)" fg:x="25296" fg:w="513"/><text x="52.2192%" y="1167.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current (513 samples, 1.05%)</title><rect x="51.9692%" y="1141" width="1.0539%" height="15" fill="rgb(217,108,32)" fg:x="25296" fg:w="513"/><text x="52.2192%" y="1151.50"></text></g><g><title>tokio::runtime::context::with_scheduler (512 samples, 1.05%)</title><rect x="51.9712%" y="1125" width="1.0519%" height="15" fill="rgb(219,66,42)" fg:x="25297" fg:w="512"/><text x="52.2212%" y="1135.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_parked_remote (18 samples, 0.04%)</title><rect x="52.9861%" y="1109" width="0.0370%" height="15" fill="rgb(206,180,7)" fg:x="25791" fg:w="18"/><text x="53.2361%" y="1119.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::worker_to_notify (17 samples, 0.03%)</title><rect x="52.9882%" y="1093" width="0.0349%" height="15" fill="rgb(208,226,31)" fg:x="25792" fg:w="17"/><text x="53.2382%" y="1103.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (6 samples, 0.01%)</title><rect x="53.0745%" y="1125" width="0.0123%" height="15" fill="rgb(218,26,49)" fg:x="25834" fg:w="6"/><text x="53.3245%" y="1135.50"></text></g><g><title>core::sync::atomic::atomic_add (6 samples, 0.01%)</title><rect x="53.0745%" y="1109" width="0.0123%" height="15" fill="rgb(233,197,48)" fg:x="25834" fg:w="6"/><text x="53.3245%" y="1119.50"></text></g><g><title>tokio::util::sharded_list::ShardGuard&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::push (12 samples, 0.02%)</title><rect x="53.0642%" y="1141" width="0.0247%" height="15" fill="rgb(252,181,51)" fg:x="25829" fg:w="12"/><text x="53.3142%" y="1151.50"></text></g><g><title>&lt;tokio::runtime::task::Task&lt;S&gt; as tokio::util::sharded_list::ShardedListItem&gt;::get_shard_id (7 samples, 0.01%)</title><rect x="53.0889%" y="1125" width="0.0144%" height="15" fill="rgb(253,90,19)" fg:x="25841" fg:w="7"/><text x="53.3389%" y="1135.50"></text></g><g><title>tokio::runtime::task::core::Header::get_id (7 samples, 0.01%)</title><rect x="53.0889%" y="1109" width="0.0144%" height="15" fill="rgb(215,171,30)" fg:x="25841" fg:w="7"/><text x="53.3389%" y="1119.50"></text></g><g><title>tokio::runtime::task::core::Header::get_id_ptr (5 samples, 0.01%)</title><rect x="53.0930%" y="1093" width="0.0103%" height="15" fill="rgb(214,222,9)" fg:x="25843" fg:w="5"/><text x="53.3430%" y="1103.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::bind_inner (56 samples, 0.12%)</title><rect x="53.0231%" y="1157" width="0.1150%" height="15" fill="rgb(223,3,22)" fg:x="25809" fg:w="56"/><text x="53.2731%" y="1167.50"></text></g><g><title>tokio::util::sharded_list::ShardedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::lock_shard (24 samples, 0.05%)</title><rect x="53.0889%" y="1141" width="0.0493%" height="15" fill="rgb(225,196,46)" fg:x="25841" fg:w="24"/><text x="53.3389%" y="1151.50"></text></g><g><title>tokio::util::sharded_list::ShardedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::shard_inner (17 samples, 0.03%)</title><rect x="53.1032%" y="1125" width="0.0349%" height="15" fill="rgb(209,110,37)" fg:x="25848" fg:w="17"/><text x="53.3532%" y="1135.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (17 samples, 0.03%)</title><rect x="53.1032%" y="1109" width="0.0349%" height="15" fill="rgb(249,89,12)" fg:x="25848" fg:w="17"/><text x="53.3532%" y="1119.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (17 samples, 0.03%)</title><rect x="53.1032%" y="1093" width="0.0349%" height="15" fill="rgb(226,27,33)" fg:x="25848" fg:w="17"/><text x="53.3532%" y="1103.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (17 samples, 0.03%)</title><rect x="53.1032%" y="1077" width="0.0349%" height="15" fill="rgb(213,82,22)" fg:x="25848" fg:w="17"/><text x="53.3532%" y="1087.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (17 samples, 0.03%)</title><rect x="53.1032%" y="1061" width="0.0349%" height="15" fill="rgb(248,140,0)" fg:x="25848" fg:w="17"/><text x="53.3532%" y="1071.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (17 samples, 0.03%)</title><rect x="53.1032%" y="1045" width="0.0349%" height="15" fill="rgb(228,106,3)" fg:x="25848" fg:w="17"/><text x="53.3532%" y="1055.50"></text></g><g><title>__memcpy_avx_unaligned_erms (16 samples, 0.03%)</title><rect x="53.1443%" y="1109" width="0.0329%" height="15" fill="rgb(209,23,37)" fg:x="25868" fg:w="16"/><text x="53.3943%" y="1119.50"></text></g><g><title>__memcpy_avx_unaligned_erms (23 samples, 0.05%)</title><rect x="53.1813%" y="1093" width="0.0473%" height="15" fill="rgb(241,93,50)" fg:x="25886" fg:w="23"/><text x="53.4313%" y="1103.50"></text></g><g><title>__GI___lll_lock_wait_private (6 samples, 0.01%)</title><rect x="53.2984%" y="933" width="0.0123%" height="15" fill="rgb(253,46,43)" fg:x="25943" fg:w="6"/><text x="53.5484%" y="943.50"></text></g><g><title>futex_wait (5 samples, 0.01%)</title><rect x="53.3005%" y="917" width="0.0103%" height="15" fill="rgb(226,206,43)" fg:x="25944" fg:w="5"/><text x="53.5505%" y="927.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (12 samples, 0.02%)</title><rect x="53.3107%" y="917" width="0.0247%" height="15" fill="rgb(217,54,7)" fg:x="25949" fg:w="12"/><text x="53.5607%" y="927.50"></text></g><g><title>do_syscall_64 (10 samples, 0.02%)</title><rect x="53.3148%" y="901" width="0.0205%" height="15" fill="rgb(223,5,52)" fg:x="25951" fg:w="10"/><text x="53.5648%" y="911.50"></text></g><g><title>__x64_sys_futex (10 samples, 0.02%)</title><rect x="53.3148%" y="885" width="0.0205%" height="15" fill="rgb(206,52,46)" fg:x="25951" fg:w="10"/><text x="53.5648%" y="895.50"></text></g><g><title>do_futex (8 samples, 0.02%)</title><rect x="53.3190%" y="869" width="0.0164%" height="15" fill="rgb(253,136,11)" fg:x="25953" fg:w="8"/><text x="53.5690%" y="879.50"></text></g><g><title>futex_wake (7 samples, 0.01%)</title><rect x="53.3210%" y="853" width="0.0144%" height="15" fill="rgb(208,106,33)" fg:x="25954" fg:w="7"/><text x="53.5710%" y="863.50"></text></g><g><title>__GI___lll_lock_wake_private (17 samples, 0.03%)</title><rect x="53.3107%" y="933" width="0.0349%" height="15" fill="rgb(206,54,4)" fg:x="25949" fg:w="17"/><text x="53.5607%" y="943.50"></text></g><g><title>syscall_return_via_sysret (5 samples, 0.01%)</title><rect x="53.3354%" y="917" width="0.0103%" height="15" fill="rgb(213,3,15)" fg:x="25961" fg:w="5"/><text x="53.5854%" y="927.50"></text></g><g><title>_int_free (31 samples, 0.06%)</title><rect x="53.3847%" y="917" width="0.0637%" height="15" fill="rgb(252,211,39)" fg:x="25985" fg:w="31"/><text x="53.6347%" y="927.50"></text></g><g><title>malloc_consolidate (92 samples, 0.19%)</title><rect x="53.5819%" y="901" width="0.1890%" height="15" fill="rgb(223,6,36)" fg:x="26081" fg:w="92"/><text x="53.8319%" y="911.50"></text></g><g><title>unlink_chunk (6 samples, 0.01%)</title><rect x="53.7586%" y="885" width="0.0123%" height="15" fill="rgb(252,169,45)" fg:x="26167" fg:w="6"/><text x="54.0086%" y="895.50"></text></g><g><title>__rdl_alloc (261 samples, 0.54%)</title><rect x="53.2409%" y="1029" width="0.5362%" height="15" fill="rgb(212,48,26)" fg:x="25915" fg:w="261"/><text x="53.4909%" y="1039.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (261 samples, 0.54%)</title><rect x="53.2409%" y="1013" width="0.5362%" height="15" fill="rgb(251,102,48)" fg:x="25915" fg:w="261"/><text x="53.4909%" y="1023.50"></text></g><g><title>std::sys::unix::alloc::aligned_malloc (261 samples, 0.54%)</title><rect x="53.2409%" y="997" width="0.5362%" height="15" fill="rgb(243,208,16)" fg:x="25915" fg:w="261"/><text x="53.4909%" y="1007.50"></text></g><g><title>__posix_memalign (260 samples, 0.53%)</title><rect x="53.2429%" y="981" width="0.5342%" height="15" fill="rgb(219,96,24)" fg:x="25916" fg:w="260"/><text x="53.4929%" y="991.50"></text></g><g><title>__posix_memalign (252 samples, 0.52%)</title><rect x="53.2594%" y="965" width="0.5177%" height="15" fill="rgb(219,33,29)" fg:x="25924" fg:w="252"/><text x="53.5094%" y="975.50"></text></g><g><title>_mid_memalign (251 samples, 0.52%)</title><rect x="53.2614%" y="949" width="0.5157%" height="15" fill="rgb(223,176,5)" fg:x="25925" fg:w="251"/><text x="53.5114%" y="959.50"></text></g><g><title>_int_memalign (210 samples, 0.43%)</title><rect x="53.3457%" y="933" width="0.4314%" height="15" fill="rgb(228,140,14)" fg:x="25966" fg:w="210"/><text x="53.5957%" y="943.50"></text></g><g><title>_int_malloc (160 samples, 0.33%)</title><rect x="53.4484%" y="917" width="0.3287%" height="15" fill="rgb(217,179,31)" fg:x="26016" fg:w="160"/><text x="53.6984%" y="927.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (934 samples, 1.92%)</title><rect x="51.8644%" y="1253" width="1.9188%" height="15" fill="rgb(230,9,30)" fg:x="25245" fg:w="934"/><text x="52.1144%" y="1263.50">c..</text></g><g><title>tokio::task::spawn::spawn_inner::{{closure}} (917 samples, 1.88%)</title><rect x="51.8993%" y="1237" width="1.8839%" height="15" fill="rgb(230,136,20)" fg:x="25262" fg:w="917"/><text x="52.1493%" y="1247.50">t..</text></g><g><title>tokio::runtime::scheduler::Handle::spawn (915 samples, 1.88%)</title><rect x="51.9034%" y="1221" width="1.8798%" height="15" fill="rgb(215,210,22)" fg:x="25264" fg:w="915"/><text x="52.1534%" y="1231.50">t..</text></g><g><title>tokio::runtime::scheduler::multi_thread::handle::Handle::spawn (912 samples, 1.87%)</title><rect x="51.9096%" y="1205" width="1.8737%" height="15" fill="rgb(218,43,5)" fg:x="25267" fg:w="912"/><text x="52.1596%" y="1215.50">t..</text></g><g><title>tokio::runtime::scheduler::multi_thread::handle::Handle::bind_new_task (912 samples, 1.87%)</title><rect x="51.9096%" y="1189" width="1.8737%" height="15" fill="rgb(216,11,5)" fg:x="25267" fg:w="912"/><text x="52.1596%" y="1199.50">t..</text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::bind (370 samples, 0.76%)</title><rect x="53.0231%" y="1173" width="0.7601%" height="15" fill="rgb(209,82,29)" fg:x="25809" fg:w="370"/><text x="53.2731%" y="1183.50"></text></g><g><title>tokio::runtime::task::new_task (314 samples, 0.65%)</title><rect x="53.1382%" y="1157" width="0.6451%" height="15" fill="rgb(244,115,12)" fg:x="25865" fg:w="314"/><text x="53.3882%" y="1167.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::new (314 samples, 0.65%)</title><rect x="53.1382%" y="1141" width="0.6451%" height="15" fill="rgb(222,82,18)" fg:x="25865" fg:w="314"/><text x="53.3882%" y="1151.50"></text></g><g><title>tokio::runtime::task::core::Cell&lt;T,S&gt;::new (314 samples, 0.65%)</title><rect x="53.1382%" y="1125" width="0.6451%" height="15" fill="rgb(249,227,8)" fg:x="25865" fg:w="314"/><text x="53.3882%" y="1135.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (295 samples, 0.61%)</title><rect x="53.1772%" y="1109" width="0.6061%" height="15" fill="rgb(253,141,45)" fg:x="25884" fg:w="295"/><text x="53.4272%" y="1119.50"></text></g><g><title>alloc::alloc::exchange_malloc (270 samples, 0.55%)</title><rect x="53.2286%" y="1093" width="0.5547%" height="15" fill="rgb(234,184,4)" fg:x="25909" fg:w="270"/><text x="53.4786%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (267 samples, 0.55%)</title><rect x="53.2347%" y="1077" width="0.5485%" height="15" fill="rgb(218,194,23)" fg:x="25912" fg:w="267"/><text x="53.4847%" y="1087.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (267 samples, 0.55%)</title><rect x="53.2347%" y="1061" width="0.5485%" height="15" fill="rgb(235,66,41)" fg:x="25912" fg:w="267"/><text x="53.4847%" y="1071.50"></text></g><g><title>alloc::alloc::alloc (267 samples, 0.55%)</title><rect x="53.2347%" y="1045" width="0.5485%" height="15" fill="rgb(245,217,1)" fg:x="25912" fg:w="267"/><text x="53.4847%" y="1055.50"></text></g><g><title>tokio::runtime::context::current::with_current (987 samples, 2.03%)</title><rect x="51.7699%" y="1301" width="2.0277%" height="15" fill="rgb(229,91,1)" fg:x="25199" fg:w="987"/><text x="52.0199%" y="1311.50">t..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (986 samples, 2.03%)</title><rect x="51.7720%" y="1285" width="2.0257%" height="15" fill="rgb(207,101,30)" fg:x="25200" fg:w="986"/><text x="52.0220%" y="1295.50">s..</text></g><g><title>tokio::runtime::context::current::with_current::{{closure}} (963 samples, 1.98%)</title><rect x="51.8192%" y="1269" width="1.9784%" height="15" fill="rgb(223,82,49)" fg:x="25223" fg:w="963"/><text x="52.0692%" y="1279.50">t..</text></g><g><title>core::ptr::drop_in_place&lt;core::cell::Ref&lt;core::option::Option&lt;tokio::runtime::scheduler::Handle&gt;&gt;&gt; (7 samples, 0.01%)</title><rect x="53.7833%" y="1253" width="0.0144%" height="15" fill="rgb(218,167,17)" fg:x="26179" fg:w="7"/><text x="54.0333%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::BorrowRef&gt; (7 samples, 0.01%)</title><rect x="53.7833%" y="1237" width="0.0144%" height="15" fill="rgb(208,103,14)" fg:x="26179" fg:w="7"/><text x="54.0333%" y="1247.50"></text></g><g><title>&lt;core::cell::BorrowRef as core::ops::drop::Drop&gt;::drop (7 samples, 0.01%)</title><rect x="53.7833%" y="1221" width="0.0144%" height="15" fill="rgb(238,20,8)" fg:x="26179" fg:w="7"/><text x="54.0333%" y="1231.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (7 samples, 0.01%)</title><rect x="53.7833%" y="1205" width="0.0144%" height="15" fill="rgb(218,80,54)" fg:x="26179" fg:w="7"/><text x="54.0333%" y="1215.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (7 samples, 0.01%)</title><rect x="53.7833%" y="1189" width="0.0144%" height="15" fill="rgb(240,144,17)" fg:x="26179" fg:w="7"/><text x="54.0333%" y="1199.50"></text></g><g><title>core::mem::replace (7 samples, 0.01%)</title><rect x="53.7833%" y="1173" width="0.0144%" height="15" fill="rgb(245,27,50)" fg:x="26179" fg:w="7"/><text x="54.0333%" y="1183.50"></text></g><g><title>core::ptr::write (7 samples, 0.01%)</title><rect x="53.7833%" y="1157" width="0.0144%" height="15" fill="rgb(251,51,7)" fg:x="26179" fg:w="7"/><text x="54.0333%" y="1167.50"></text></g><g><title>tokio::runtime::coop::budget (5,490 samples, 11.28%)</title><rect x="42.5639%" y="1413" width="11.2789%" height="15" fill="rgb(245,217,29)" fg:x="20718" fg:w="5490"/><text x="42.8139%" y="1423.50">tokio::runtime::c..</text></g><g><title>tokio::runtime::coop::with_budget (5,490 samples, 11.28%)</title><rect x="42.5639%" y="1397" width="11.2789%" height="15" fill="rgb(221,176,29)" fg:x="20718" fg:w="5490"/><text x="42.8139%" y="1407.50">tokio::runtime::c..</text></g><g><title>tokio::runtime::park::CachedParkThread::block_on::{{closure}} (5,487 samples, 11.27%)</title><rect x="42.5701%" y="1381" width="11.2727%" height="15" fill="rgb(212,180,24)" fg:x="20721" fg:w="5487"/><text x="42.8201%" y="1391.50">tokio::runtime::p..</text></g><g><title>engine::main::{{closure}} (5,487 samples, 11.27%)</title><rect x="42.5701%" y="1365" width="11.2727%" height="15" fill="rgb(254,24,2)" fg:x="20721" fg:w="5487"/><text x="42.8201%" y="1375.50">engine::main::{{c..</text></g><g><title>engine::engine::match_server::MatchServer::run::{{closure}} (5,486 samples, 11.27%)</title><rect x="42.5722%" y="1349" width="11.2707%" height="15" fill="rgb(230,100,2)" fg:x="20722" fg:w="5486"/><text x="42.8222%" y="1359.50">engine::engine::m..</text></g><g><title>tokio::task::spawn::spawn (1,069 samples, 2.20%)</title><rect x="51.6466%" y="1333" width="2.1962%" height="15" fill="rgb(219,142,25)" fg:x="25139" fg:w="1069"/><text x="51.8966%" y="1343.50">t..</text></g><g><title>tokio::task::spawn::spawn_inner (1,019 samples, 2.09%)</title><rect x="51.7494%" y="1317" width="2.0935%" height="15" fill="rgb(240,73,43)" fg:x="25189" fg:w="1019"/><text x="51.9994%" y="1327.50">t..</text></g><g><title>tokio::runtime::task::id::Id::next (22 samples, 0.05%)</title><rect x="53.7976%" y="1301" width="0.0452%" height="15" fill="rgb(214,114,15)" fg:x="26186" fg:w="22"/><text x="54.0476%" y="1311.50"></text></g><g><title>core::sync::atomic::AtomicU64::fetch_add (13 samples, 0.03%)</title><rect x="53.8161%" y="1285" width="0.0267%" height="15" fill="rgb(207,130,4)" fg:x="26195" fg:w="13"/><text x="54.0661%" y="1295.50"></text></g><g><title>core::sync::atomic::atomic_add (13 samples, 0.03%)</title><rect x="53.8161%" y="1269" width="0.0267%" height="15" fill="rgb(221,25,40)" fg:x="26195" fg:w="13"/><text x="54.0661%" y="1279.50"></text></g><g><title>core::sync::atomic::AtomicI32::load (10 samples, 0.02%)</title><rect x="53.8593%" y="1285" width="0.0205%" height="15" fill="rgb(241,184,7)" fg:x="26216" fg:w="10"/><text x="54.1093%" y="1295.50"></text></g><g><title>core::sync::atomic::atomic_load (10 samples, 0.02%)</title><rect x="53.8593%" y="1269" width="0.0205%" height="15" fill="rgb(235,159,4)" fg:x="26216" fg:w="10"/><text x="54.1093%" y="1279.50"></text></g><g><title>__perf_event_task_sched_out (10 samples, 0.02%)</title><rect x="54.0051%" y="1125" width="0.0205%" height="15" fill="rgb(214,87,48)" fg:x="26287" fg:w="10"/><text x="54.2551%" y="1135.50"></text></g><g><title>update_curr (14 samples, 0.03%)</title><rect x="54.0976%" y="1093" width="0.0288%" height="15" fill="rgb(246,198,24)" fg:x="26332" fg:w="14"/><text x="54.3476%" y="1103.50"></text></g><g><title>__update_load_avg_cfs_rq (6 samples, 0.01%)</title><rect x="54.1469%" y="1077" width="0.0123%" height="15" fill="rgb(209,66,40)" fg:x="26356" fg:w="6"/><text x="54.3969%" y="1087.50"></text></g><g><title>update_load_avg (21 samples, 0.04%)</title><rect x="54.1263%" y="1093" width="0.0431%" height="15" fill="rgb(233,147,39)" fg:x="26346" fg:w="21"/><text x="54.3763%" y="1103.50"></text></g><g><title>dequeue_entity (58 samples, 0.12%)</title><rect x="54.0544%" y="1109" width="0.1192%" height="15" fill="rgb(231,145,52)" fg:x="26311" fg:w="58"/><text x="54.3044%" y="1119.50"></text></g><g><title>dequeue_task_fair (74 samples, 0.15%)</title><rect x="54.0339%" y="1125" width="0.1520%" height="15" fill="rgb(206,20,26)" fg:x="26301" fg:w="74"/><text x="54.2839%" y="1135.50"></text></g><g><title>__perf_event_task_sched_in (81 samples, 0.17%)</title><rect x="54.1921%" y="1109" width="0.1664%" height="15" fill="rgb(238,220,4)" fg:x="26378" fg:w="81"/><text x="54.4421%" y="1119.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (78 samples, 0.16%)</title><rect x="54.1983%" y="1093" width="0.1602%" height="15" fill="rgb(252,195,42)" fg:x="26381" fg:w="78"/><text x="54.4483%" y="1103.50"></text></g><g><title>native_write_msr (78 samples, 0.16%)</title><rect x="54.1983%" y="1077" width="0.1602%" height="15" fill="rgb(209,10,6)" fg:x="26381" fg:w="78"/><text x="54.4483%" y="1087.50"></text></g><g><title>finish_task_switch.isra.0 (88 samples, 0.18%)</title><rect x="54.1859%" y="1125" width="0.1808%" height="15" fill="rgb(229,3,52)" fg:x="26375" fg:w="88"/><text x="54.4359%" y="1135.50"></text></g><g><title>enqueue_task_fair (22 samples, 0.05%)</title><rect x="54.4201%" y="1061" width="0.0452%" height="15" fill="rgb(253,49,37)" fg:x="26489" fg:w="22"/><text x="54.6701%" y="1071.50"></text></g><g><title>enqueue_entity (19 samples, 0.04%)</title><rect x="54.4263%" y="1045" width="0.0390%" height="15" fill="rgb(240,103,49)" fg:x="26492" fg:w="19"/><text x="54.6763%" y="1055.50"></text></g><g><title>update_load_avg (10 samples, 0.02%)</title><rect x="54.4448%" y="1029" width="0.0205%" height="15" fill="rgb(250,182,30)" fg:x="26501" fg:w="10"/><text x="54.6948%" y="1039.50"></text></g><g><title>activate_task (29 samples, 0.06%)</title><rect x="54.4140%" y="1077" width="0.0596%" height="15" fill="rgb(248,8,30)" fg:x="26486" fg:w="29"/><text x="54.6640%" y="1087.50"></text></g><g><title>deactivate_task (5 samples, 0.01%)</title><rect x="54.4735%" y="1077" width="0.0103%" height="15" fill="rgb(237,120,30)" fg:x="26515" fg:w="5"/><text x="54.7235%" y="1087.50"></text></g><g><title>dequeue_entity (5 samples, 0.01%)</title><rect x="54.4859%" y="1061" width="0.0103%" height="15" fill="rgb(221,146,34)" fg:x="26521" fg:w="5"/><text x="54.7359%" y="1071.50"></text></g><g><title>dequeue_task_fair (16 samples, 0.03%)</title><rect x="54.4838%" y="1077" width="0.0329%" height="15" fill="rgb(242,55,13)" fg:x="26520" fg:w="16"/><text x="54.7338%" y="1087.50"></text></g><g><title>update_load_avg (6 samples, 0.01%)</title><rect x="54.5044%" y="1061" width="0.0123%" height="15" fill="rgb(242,112,31)" fg:x="26530" fg:w="6"/><text x="54.7544%" y="1071.50"></text></g><g><title>find_busiest_group (23 samples, 0.05%)</title><rect x="54.5167%" y="1077" width="0.0473%" height="15" fill="rgb(249,192,27)" fg:x="26536" fg:w="23"/><text x="54.7667%" y="1087.50"></text></g><g><title>update_sd_lb_stats.constprop.0 (21 samples, 0.04%)</title><rect x="54.5208%" y="1061" width="0.0431%" height="15" fill="rgb(208,204,44)" fg:x="26538" fg:w="21"/><text x="54.7708%" y="1071.50"></text></g><g><title>load_balance (90 samples, 0.18%)</title><rect x="54.3914%" y="1093" width="0.1849%" height="15" fill="rgb(208,93,54)" fg:x="26475" fg:w="90"/><text x="54.6414%" y="1103.50"></text></g><g><title>update_load_avg (5 samples, 0.01%)</title><rect x="54.6215%" y="1077" width="0.0103%" height="15" fill="rgb(242,1,31)" fg:x="26587" fg:w="5"/><text x="54.8715%" y="1087.50"></text></g><g><title>newidle_balance (130 samples, 0.27%)</title><rect x="54.3688%" y="1109" width="0.2671%" height="15" fill="rgb(241,83,25)" fg:x="26464" fg:w="130"/><text x="54.6188%" y="1119.50"></text></g><g><title>update_blocked_averages (27 samples, 0.06%)</title><rect x="54.5804%" y="1093" width="0.0555%" height="15" fill="rgb(205,169,50)" fg:x="26567" fg:w="27"/><text x="54.8304%" y="1103.50"></text></g><g><title>pick_next_task_fair (140 samples, 0.29%)</title><rect x="54.3667%" y="1125" width="0.2876%" height="15" fill="rgb(239,186,37)" fg:x="26463" fg:w="140"/><text x="54.6167%" y="1135.50"></text></g><g><title>pick_next_task_idle (6 samples, 0.01%)</title><rect x="54.6543%" y="1125" width="0.0123%" height="15" fill="rgb(205,221,10)" fg:x="26603" fg:w="6"/><text x="54.9043%" y="1135.50"></text></g><g><title>__update_idle_core (5 samples, 0.01%)</title><rect x="54.6564%" y="1109" width="0.0103%" height="15" fill="rgb(218,196,15)" fg:x="26604" fg:w="5"/><text x="54.9064%" y="1119.50"></text></g><g><title>psi_group_change (25 samples, 0.05%)</title><rect x="54.6872%" y="1109" width="0.0514%" height="15" fill="rgb(218,196,35)" fg:x="26619" fg:w="25"/><text x="54.9372%" y="1119.50"></text></g><g><title>psi_task_switch (36 samples, 0.07%)</title><rect x="54.6667%" y="1125" width="0.0740%" height="15" fill="rgb(233,63,24)" fg:x="26609" fg:w="36"/><text x="54.9167%" y="1135.50"></text></g><g><title>put_prev_task_fair (6 samples, 0.01%)</title><rect x="54.7406%" y="1125" width="0.0123%" height="15" fill="rgb(225,8,4)" fg:x="26645" fg:w="6"/><text x="54.9906%" y="1135.50"></text></g><g><title>put_prev_entity (5 samples, 0.01%)</title><rect x="54.7427%" y="1109" width="0.0103%" height="15" fill="rgb(234,105,35)" fg:x="26646" fg:w="5"/><text x="54.9927%" y="1119.50"></text></g><g><title>futex_wait_queue (390 samples, 0.80%)</title><rect x="53.9558%" y="1173" width="0.8012%" height="15" fill="rgb(236,21,32)" fg:x="26263" fg:w="390"/><text x="54.2058%" y="1183.50"></text></g><g><title>schedule (386 samples, 0.79%)</title><rect x="53.9640%" y="1157" width="0.7930%" height="15" fill="rgb(228,109,6)" fg:x="26267" fg:w="386"/><text x="54.2140%" y="1167.50"></text></g><g><title>__schedule (385 samples, 0.79%)</title><rect x="53.9661%" y="1141" width="0.7910%" height="15" fill="rgb(229,215,31)" fg:x="26268" fg:w="385"/><text x="54.2161%" y="1151.50"></text></g><g><title>futex_q_lock (6 samples, 0.01%)</title><rect x="54.7673%" y="1157" width="0.0123%" height="15" fill="rgb(221,52,54)" fg:x="26658" fg:w="6"/><text x="55.0173%" y="1167.50"></text></g><g><title>__x64_sys_futex (414 samples, 0.85%)</title><rect x="53.9332%" y="1221" width="0.8505%" height="15" fill="rgb(252,129,43)" fg:x="26252" fg:w="414"/><text x="54.1832%" y="1231.50"></text></g><g><title>do_futex (412 samples, 0.85%)</title><rect x="53.9373%" y="1205" width="0.8464%" height="15" fill="rgb(248,183,27)" fg:x="26254" fg:w="412"/><text x="54.1873%" y="1215.50"></text></g><g><title>futex_wait (409 samples, 0.84%)</title><rect x="53.9435%" y="1189" width="0.8403%" height="15" fill="rgb(250,0,22)" fg:x="26257" fg:w="409"/><text x="54.1935%" y="1199.50"></text></g><g><title>futex_wait_setup (13 samples, 0.03%)</title><rect x="54.7571%" y="1173" width="0.0267%" height="15" fill="rgb(213,166,10)" fg:x="26653" fg:w="13"/><text x="55.0071%" y="1183.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (446 samples, 0.92%)</title><rect x="53.9024%" y="1253" width="0.9163%" height="15" fill="rgb(207,163,36)" fg:x="26237" fg:w="446"/><text x="54.1524%" y="1263.50"></text></g><g><title>do_syscall_64 (433 samples, 0.89%)</title><rect x="53.9291%" y="1237" width="0.8896%" height="15" fill="rgb(208,122,22)" fg:x="26250" fg:w="433"/><text x="54.1791%" y="1247.50"></text></g><g><title>syscall_exit_to_user_mode (17 samples, 0.03%)</title><rect x="54.7838%" y="1221" width="0.0349%" height="15" fill="rgb(207,104,49)" fg:x="26666" fg:w="17"/><text x="55.0338%" y="1231.50"></text></g><g><title>exit_to_user_mode_prepare (13 samples, 0.03%)</title><rect x="54.7920%" y="1205" width="0.0267%" height="15" fill="rgb(248,211,50)" fg:x="26670" fg:w="13"/><text x="55.0420%" y="1215.50"></text></g><g><title>switch_fpu_return (7 samples, 0.01%)</title><rect x="54.8043%" y="1189" width="0.0144%" height="15" fill="rgb(217,13,45)" fg:x="26676" fg:w="7"/><text x="55.0543%" y="1199.50"></text></g><g><title>restore_fpregs_from_fpstate (7 samples, 0.01%)</title><rect x="54.8043%" y="1173" width="0.0144%" height="15" fill="rgb(211,216,49)" fg:x="26676" fg:w="7"/><text x="55.0543%" y="1183.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (482 samples, 0.99%)</title><rect x="53.8593%" y="1301" width="0.9902%" height="15" fill="rgb(221,58,53)" fg:x="26216" fg:w="482"/><text x="54.1093%" y="1311.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (472 samples, 0.97%)</title><rect x="53.8798%" y="1285" width="0.9697%" height="15" fill="rgb(220,112,41)" fg:x="26226" fg:w="472"/><text x="54.1298%" y="1295.50"></text></g><g><title>syscall (471 samples, 0.97%)</title><rect x="53.8819%" y="1269" width="0.9676%" height="15" fill="rgb(236,38,28)" fg:x="26227" fg:w="471"/><text x="54.1319%" y="1279.50"></text></g><g><title>syscall_return_via_sysret (15 samples, 0.03%)</title><rect x="54.8187%" y="1253" width="0.0308%" height="15" fill="rgb(227,195,22)" fg:x="26683" fg:w="15"/><text x="55.0687%" y="1263.50"></text></g><g><title>tokio::loom::std::parking_lot::Condvar::wait (492 samples, 1.01%)</title><rect x="53.8511%" y="1397" width="1.0108%" height="15" fill="rgb(214,55,33)" fg:x="26212" fg:w="492"/><text x="54.1011%" y="1407.50"></text></g><g><title>parking_lot::condvar::Condvar::wait (492 samples, 1.01%)</title><rect x="53.8511%" y="1381" width="1.0108%" height="15" fill="rgb(248,80,13)" fg:x="26212" fg:w="492"/><text x="54.1011%" y="1391.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (492 samples, 1.01%)</title><rect x="53.8511%" y="1365" width="1.0108%" height="15" fill="rgb(238,52,6)" fg:x="26212" fg:w="492"/><text x="54.1011%" y="1375.50"></text></g><g><title>parking_lot_core::parking_lot::park (490 samples, 1.01%)</title><rect x="53.8552%" y="1349" width="1.0067%" height="15" fill="rgb(224,198,47)" fg:x="26214" fg:w="490"/><text x="54.1052%" y="1359.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (490 samples, 1.01%)</title><rect x="53.8552%" y="1333" width="1.0067%" height="15" fill="rgb(233,171,20)" fg:x="26214" fg:w="490"/><text x="54.1052%" y="1343.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (490 samples, 1.01%)</title><rect x="53.8552%" y="1317" width="1.0067%" height="15" fill="rgb(241,30,25)" fg:x="26214" fg:w="490"/><text x="54.1052%" y="1327.50"></text></g><g><title>__libc_start_main_impl (5,995 samples, 12.32%)</title><rect x="42.5496%" y="1765" width="12.3164%" height="15" fill="rgb(207,171,38)" fg:x="20711" fg:w="5995"/><text x="42.7996%" y="1775.50">__libc_start_main_..</text></g><g><title>__libc_start_call_main (5,995 samples, 12.32%)</title><rect x="42.5496%" y="1749" width="12.3164%" height="15" fill="rgb(234,70,1)" fg:x="20711" fg:w="5995"/><text x="42.7996%" y="1759.50">__libc_start_call_..</text></g><g><title>std::rt::lang_start (5,995 samples, 12.32%)</title><rect x="42.5496%" y="1733" width="12.3164%" height="15" fill="rgb(232,178,18)" fg:x="20711" fg:w="5995"/><text x="42.7996%" y="1743.50">std::rt::lang_start</text></g><g><title>std::rt::lang_start_internal (5,995 samples, 12.32%)</title><rect x="42.5496%" y="1717" width="12.3164%" height="15" fill="rgb(241,78,40)" fg:x="20711" fg:w="5995"/><text x="42.7996%" y="1727.50">std::rt::lang_star..</text></g><g><title>std::panic::catch_unwind (5,995 samples, 12.32%)</title><rect x="42.5496%" y="1701" width="12.3164%" height="15" fill="rgb(222,35,25)" fg:x="20711" fg:w="5995"/><text x="42.7996%" y="1711.50">std::panic::catch_..</text></g><g><title>std::panicking::try (5,995 samples, 12.32%)</title><rect x="42.5496%" y="1685" width="12.3164%" height="15" fill="rgb(207,92,16)" fg:x="20711" fg:w="5995"/><text x="42.7996%" y="1695.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (5,995 samples, 12.32%)</title><rect x="42.5496%" y="1669" width="12.3164%" height="15" fill="rgb(216,59,51)" fg:x="20711" fg:w="5995"/><text x="42.7996%" y="1679.50">std::panicking::tr..</text></g><g><title>std::rt::lang_start_internal::{{closure}} (5,995 samples, 12.32%)</title><rect x="42.5496%" y="1653" width="12.3164%" height="15" fill="rgb(213,80,28)" fg:x="20711" fg:w="5995"/><text x="42.7996%" y="1663.50">std::rt::lang_star..</text></g><g><title>std::panic::catch_unwind (5,995 samples, 12.32%)</title><rect x="42.5496%" y="1637" width="12.3164%" height="15" fill="rgb(220,93,7)" fg:x="20711" fg:w="5995"/><text x="42.7996%" y="1647.50">std::panic::catch_..</text></g><g><title>std::panicking::try (5,995 samples, 12.32%)</title><rect x="42.5496%" y="1621" width="12.3164%" height="15" fill="rgb(225,24,44)" fg:x="20711" fg:w="5995"/><text x="42.7996%" y="1631.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (5,995 samples, 12.32%)</title><rect x="42.5496%" y="1605" width="12.3164%" height="15" fill="rgb(243,74,40)" fg:x="20711" fg:w="5995"/><text x="42.7996%" y="1615.50">std::panicking::tr..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (5,995 samples, 12.32%)</title><rect x="42.5496%" y="1589" width="12.3164%" height="15" fill="rgb(228,39,7)" fg:x="20711" fg:w="5995"/><text x="42.7996%" y="1599.50">core::ops::functio..</text></g><g><title>std::rt::lang_start::{{closure}} (5,995 samples, 12.32%)</title><rect x="42.5496%" y="1573" width="12.3164%" height="15" fill="rgb(227,79,8)" fg:x="20711" fg:w="5995"/><text x="42.7996%" y="1583.50">std::rt::lang_star..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (5,995 samples, 12.32%)</title><rect x="42.5496%" y="1557" width="12.3164%" height="15" fill="rgb(236,58,11)" fg:x="20711" fg:w="5995"/><text x="42.7996%" y="1567.50">std::sys_common::b..</text></g><g><title>core::ops::function::FnOnce::call_once (5,995 samples, 12.32%)</title><rect x="42.5496%" y="1541" width="12.3164%" height="15" fill="rgb(249,63,35)" fg:x="20711" fg:w="5995"/><text x="42.7996%" y="1551.50">core::ops::functio..</text></g><g><title>engine::main (5,995 samples, 12.32%)</title><rect x="42.5496%" y="1525" width="12.3164%" height="15" fill="rgb(252,114,16)" fg:x="20711" fg:w="5995"/><text x="42.7996%" y="1535.50">engine::main</text></g><g><title>tokio::runtime::runtime::Runtime::block_on (5,989 samples, 12.30%)</title><rect x="42.5619%" y="1509" width="12.3041%" height="15" fill="rgb(254,151,24)" fg:x="20717" fg:w="5989"/><text x="42.8119%" y="1519.50">tokio::runtime::ru..</text></g><g><title>tokio::runtime::scheduler::multi_thread::MultiThread::block_on (5,989 samples, 12.30%)</title><rect x="42.5619%" y="1493" width="12.3041%" height="15" fill="rgb(253,54,39)" fg:x="20717" fg:w="5989"/><text x="42.8119%" y="1503.50">tokio::runtime::sc..</text></g><g><title>tokio::runtime::context::runtime::enter_runtime (5,989 samples, 12.30%)</title><rect x="42.5619%" y="1477" width="12.3041%" height="15" fill="rgb(243,25,45)" fg:x="20717" fg:w="5989"/><text x="42.8119%" y="1487.50">tokio::runtime::co..</text></g><g><title>tokio::runtime::scheduler::multi_thread::MultiThread::block_on::{{closure}} (5,989 samples, 12.30%)</title><rect x="42.5619%" y="1461" width="12.3041%" height="15" fill="rgb(234,134,9)" fg:x="20717" fg:w="5989"/><text x="42.8119%" y="1471.50">tokio::runtime::sc..</text></g><g><title>tokio::runtime::context::blocking::BlockingRegionGuard::block_on (5,989 samples, 12.30%)</title><rect x="42.5619%" y="1445" width="12.3041%" height="15" fill="rgb(227,166,31)" fg:x="20717" fg:w="5989"/><text x="42.8119%" y="1455.50">tokio::runtime::co..</text></g><g><title>tokio::runtime::park::CachedParkThread::block_on (5,989 samples, 12.30%)</title><rect x="42.5619%" y="1429" width="12.3041%" height="15" fill="rgb(245,143,41)" fg:x="20717" fg:w="5989"/><text x="42.8119%" y="1439.50">tokio::runtime::pa..</text></g><g><title>tokio::runtime::park::Inner::park (498 samples, 1.02%)</title><rect x="53.8428%" y="1413" width="1.0231%" height="15" fill="rgb(238,181,32)" fg:x="26208" fg:w="498"/><text x="54.0928%" y="1423.50"></text></g><g><title>_start (5,996 samples, 12.32%)</title><rect x="42.5496%" y="1781" width="12.3184%" height="15" fill="rgb(224,113,18)" fg:x="20711" fg:w="5996"/><text x="42.7996%" y="1791.50">_start</text></g><g><title>clone3 (8 samples, 0.02%)</title><rect x="54.8803%" y="1781" width="0.0164%" height="15" fill="rgb(240,229,28)" fg:x="26713" fg:w="8"/><text x="55.1303%" y="1791.50"></text></g><g><title>start_thread (7 samples, 0.01%)</title><rect x="54.8824%" y="1765" width="0.0144%" height="15" fill="rgb(250,185,3)" fg:x="26714" fg:w="7"/><text x="55.1324%" y="1775.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (5 samples, 0.01%)</title><rect x="54.8865%" y="1749" width="0.0103%" height="15" fill="rgb(212,59,25)" fg:x="26716" fg:w="5"/><text x="55.1365%" y="1759.50"></text></g><g><title>std::sys::unix::stack_overflow::Handler::new (5 samples, 0.01%)</title><rect x="54.8865%" y="1733" width="0.0103%" height="15" fill="rgb(221,87,20)" fg:x="26716" fg:w="5"/><text x="55.1365%" y="1743.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (5 samples, 0.01%)</title><rect x="54.8865%" y="1717" width="0.0103%" height="15" fill="rgb(213,74,28)" fg:x="26716" fg:w="5"/><text x="55.1365%" y="1727.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (5 samples, 0.01%)</title><rect x="54.8865%" y="1701" width="0.0103%" height="15" fill="rgb(224,132,34)" fg:x="26716" fg:w="5"/><text x="55.1365%" y="1711.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (5 samples, 0.01%)</title><rect x="54.8865%" y="1685" width="0.0103%" height="15" fill="rgb(222,101,24)" fg:x="26716" fg:w="5"/><text x="55.1365%" y="1695.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (5 samples, 0.01%)</title><rect x="54.8968%" y="1781" width="0.0103%" height="15" fill="rgb(254,142,4)" fg:x="26721" fg:w="5"/><text x="55.1468%" y="1791.50"></text></g><g><title>entry_SYSCALL_64_safe_stack (25 samples, 0.05%)</title><rect x="54.9070%" y="1781" width="0.0514%" height="15" fill="rgb(230,229,49)" fg:x="26726" fg:w="25"/><text x="55.1570%" y="1791.50"></text></g><g><title>mio::net::tcp::listener::TcpListener::accept (5 samples, 0.01%)</title><rect x="54.9584%" y="1781" width="0.0103%" height="15" fill="rgb(238,70,47)" fg:x="26751" fg:w="5"/><text x="55.2084%" y="1791.50"></text></g><g><title>ret_from_fork (50 samples, 0.10%)</title><rect x="54.9728%" y="1781" width="0.1027%" height="15" fill="rgb(231,160,17)" fg:x="26758" fg:w="50"/><text x="55.2228%" y="1791.50"></text></g><g><title>schedule_tail (50 samples, 0.10%)</title><rect x="54.9728%" y="1765" width="0.1027%" height="15" fill="rgb(218,68,53)" fg:x="26758" fg:w="50"/><text x="55.2228%" y="1775.50"></text></g><g><title>finish_task_switch.isra.0 (50 samples, 0.10%)</title><rect x="54.9728%" y="1749" width="0.1027%" height="15" fill="rgb(236,111,10)" fg:x="26758" fg:w="50"/><text x="55.2228%" y="1759.50"></text></g><g><title>__perf_event_task_sched_in (50 samples, 0.10%)</title><rect x="54.9728%" y="1733" width="0.1027%" height="15" fill="rgb(224,34,41)" fg:x="26758" fg:w="50"/><text x="55.2228%" y="1743.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (50 samples, 0.10%)</title><rect x="54.9728%" y="1717" width="0.1027%" height="15" fill="rgb(241,118,19)" fg:x="26758" fg:w="50"/><text x="55.2228%" y="1727.50"></text></g><g><title>native_write_msr (50 samples, 0.10%)</title><rect x="54.9728%" y="1701" width="0.1027%" height="15" fill="rgb(238,129,25)" fg:x="26758" fg:w="50"/><text x="55.2228%" y="1711.50"></text></g><g><title>engine (6,371 samples, 13.09%)</title><rect x="42.0195%" y="1797" width="13.0889%" height="15" fill="rgb(238,22,31)" fg:x="20453" fg:w="6371"/><text x="42.2695%" y="1807.50">engine</text></g><g><title>perf-exec (5 samples, 0.01%)</title><rect x="55.1084%" y="1797" width="0.0103%" height="15" fill="rgb(222,174,48)" fg:x="26824" fg:w="5"/><text x="55.3584%" y="1807.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (5 samples, 0.01%)</title><rect x="55.1084%" y="1781" width="0.0103%" height="15" fill="rgb(206,152,40)" fg:x="26824" fg:w="5"/><text x="55.3584%" y="1791.50"></text></g><g><title>do_syscall_64 (5 samples, 0.01%)</title><rect x="55.1084%" y="1765" width="0.0103%" height="15" fill="rgb(218,99,54)" fg:x="26824" fg:w="5"/><text x="55.3584%" y="1775.50"></text></g><g><title>__x64_sys_execve (5 samples, 0.01%)</title><rect x="55.1084%" y="1749" width="0.0103%" height="15" fill="rgb(220,174,26)" fg:x="26824" fg:w="5"/><text x="55.3584%" y="1759.50"></text></g><g><title>do_execveat_common.isra.0 (5 samples, 0.01%)</title><rect x="55.1084%" y="1733" width="0.0103%" height="15" fill="rgb(245,116,9)" fg:x="26824" fg:w="5"/><text x="55.3584%" y="1743.50"></text></g><g><title>bprm_execve (5 samples, 0.01%)</title><rect x="55.1084%" y="1717" width="0.0103%" height="15" fill="rgb(209,72,35)" fg:x="26824" fg:w="5"/><text x="55.3584%" y="1727.50"></text></g><g><title>load_elf_binary (5 samples, 0.01%)</title><rect x="55.1084%" y="1701" width="0.0103%" height="15" fill="rgb(226,126,21)" fg:x="26824" fg:w="5"/><text x="55.3584%" y="1711.50"></text></g><g><title>begin_new_exec (5 samples, 0.01%)</title><rect x="55.1084%" y="1685" width="0.0103%" height="15" fill="rgb(227,192,1)" fg:x="26824" fg:w="5"/><text x="55.3584%" y="1695.50"></text></g><g><title>perf_event_exec (5 samples, 0.01%)</title><rect x="55.1084%" y="1669" width="0.0103%" height="15" fill="rgb(237,180,29)" fg:x="26824" fg:w="5"/><text x="55.3584%" y="1679.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (5 samples, 0.01%)</title><rect x="55.1084%" y="1653" width="0.0103%" height="15" fill="rgb(230,197,35)" fg:x="26824" fg:w="5"/><text x="55.3584%" y="1663.50"></text></g><g><title>native_write_msr (5 samples, 0.01%)</title><rect x="55.1084%" y="1637" width="0.0103%" height="15" fill="rgb(246,193,31)" fg:x="26824" fg:w="5"/><text x="55.3584%" y="1647.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (10 samples, 0.02%)</title><rect x="55.1228%" y="1765" width="0.0205%" height="15" fill="rgb(241,36,4)" fg:x="26831" fg:w="10"/><text x="55.3728%" y="1775.50"></text></g><g><title>&lt;mio::net::tcp::stream::TcpStream as mio::event::source::Source&gt;::deregister (5 samples, 0.01%)</title><rect x="55.1515%" y="1765" width="0.0103%" height="15" fill="rgb(241,130,17)" fg:x="26845" fg:w="5"/><text x="55.4015%" y="1775.50"></text></g><g><title>&lt;mio::io_source::IoSource&lt;T&gt; as mio::event::source::Source&gt;::deregister (5 samples, 0.01%)</title><rect x="55.1515%" y="1749" width="0.0103%" height="15" fill="rgb(206,137,32)" fg:x="26845" fg:w="5"/><text x="55.4015%" y="1759.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (28 samples, 0.06%)</title><rect x="55.1618%" y="1765" width="0.0575%" height="15" fill="rgb(237,228,51)" fg:x="26850" fg:w="28"/><text x="55.4118%" y="1775.50"></text></g><g><title>&lt;tokio::net::tcp::split::WriteHalf as tokio::io::async_write::AsyncWrite&gt;::poll_write (10 samples, 0.02%)</title><rect x="55.2255%" y="1765" width="0.0205%" height="15" fill="rgb(243,6,42)" fg:x="26881" fg:w="10"/><text x="55.4755%" y="1775.50"></text></g><g><title>&lt;tokio::runtime::io::registration::Registration as core::ops::drop::Drop&gt;::drop (13 samples, 0.03%)</title><rect x="55.2460%" y="1765" width="0.0267%" height="15" fill="rgb(251,74,28)" fg:x="26891" fg:w="13"/><text x="55.4960%" y="1775.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (13 samples, 0.03%)</title><rect x="55.2460%" y="1749" width="0.0267%" height="15" fill="rgb(218,20,49)" fg:x="26891" fg:w="13"/><text x="55.4960%" y="1759.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (13 samples, 0.03%)</title><rect x="55.2460%" y="1733" width="0.0267%" height="15" fill="rgb(238,28,14)" fg:x="26891" fg:w="13"/><text x="55.4960%" y="1743.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (13 samples, 0.03%)</title><rect x="55.2460%" y="1717" width="0.0267%" height="15" fill="rgb(229,40,46)" fg:x="26891" fg:w="13"/><text x="55.4960%" y="1727.50"></text></g><g><title>&lt;tokio::runtime::task::core::TaskIdGuard as core::ops::drop::Drop&gt;::drop (29 samples, 0.06%)</title><rect x="55.2727%" y="1765" width="0.0596%" height="15" fill="rgb(244,195,20)" fg:x="26904" fg:w="29"/><text x="55.5227%" y="1775.50"></text></g><g><title>__GI_epoll_ctl (52 samples, 0.11%)</title><rect x="55.3467%" y="1765" width="0.1068%" height="15" fill="rgb(253,56,35)" fg:x="26940" fg:w="52"/><text x="55.5967%" y="1775.50"></text></g><g><title>entry_SYSCALL_64 (48 samples, 0.10%)</title><rect x="55.3549%" y="1749" width="0.0986%" height="15" fill="rgb(210,149,44)" fg:x="26944" fg:w="48"/><text x="55.6049%" y="1759.50"></text></g><g><title>__libc_recv (6 samples, 0.01%)</title><rect x="55.4556%" y="1765" width="0.0123%" height="15" fill="rgb(240,135,12)" fg:x="26993" fg:w="6"/><text x="55.7056%" y="1775.50"></text></g><g><title>__libc_recv (6 samples, 0.01%)</title><rect x="55.4556%" y="1749" width="0.0123%" height="15" fill="rgb(251,24,50)" fg:x="26993" fg:w="6"/><text x="55.7056%" y="1759.50"></text></g><g><title>entry_SYSCALL_64 (6 samples, 0.01%)</title><rect x="55.4556%" y="1733" width="0.0123%" height="15" fill="rgb(243,200,47)" fg:x="26993" fg:w="6"/><text x="55.7056%" y="1743.50"></text></g><g><title>common::message::_::&lt;impl serde::de::Deserialize for common::message::GatewayMessage&gt;::deserialize (13 samples, 0.03%)</title><rect x="55.4782%" y="1765" width="0.0267%" height="15" fill="rgb(224,166,26)" fg:x="27004" fg:w="13"/><text x="55.7282%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;[core::option::Option&lt;core::task::wake::Waker&gt;: 32]&gt; (12 samples, 0.02%)</title><rect x="55.5110%" y="1765" width="0.0247%" height="15" fill="rgb(233,0,47)" fg:x="27020" fg:w="12"/><text x="55.7610%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::io::registration::Registration&gt; (11 samples, 0.02%)</title><rect x="55.5357%" y="1765" width="0.0226%" height="15" fill="rgb(253,80,5)" fg:x="27032" fg:w="11"/><text x="55.7857%" y="1775.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (27 samples, 0.06%)</title><rect x="55.5706%" y="1749" width="0.0555%" height="15" fill="rgb(214,133,25)" fg:x="27049" fg:w="27"/><text x="55.8206%" y="1759.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (30 samples, 0.06%)</title><rect x="55.5706%" y="1765" width="0.0616%" height="15" fill="rgb(209,27,14)" fg:x="27049" fg:w="30"/><text x="55.8206%" y="1775.50"></text></g><g><title>serde_json::de::from_slice (24 samples, 0.05%)</title><rect x="55.6343%" y="1765" width="0.0493%" height="15" fill="rgb(219,102,51)" fg:x="27080" fg:w="24"/><text x="55.8843%" y="1775.50"></text></g><g><title>serde_json::ser::format_escaped_str (18 samples, 0.04%)</title><rect x="55.6836%" y="1765" width="0.0370%" height="15" fill="rgb(237,18,16)" fg:x="27104" fg:w="18"/><text x="55.9336%" y="1775.50"></text></g><g><title>std::sys::unix::time::Timespec::now (7 samples, 0.01%)</title><rect x="55.7288%" y="1765" width="0.0144%" height="15" fill="rgb(241,85,17)" fg:x="27126" fg:w="7"/><text x="55.9788%" y="1775.50"></text></g><g><title>std::time::SystemTime::duration_since (22 samples, 0.05%)</title><rect x="55.7494%" y="1765" width="0.0452%" height="15" fill="rgb(236,90,42)" fg:x="27136" fg:w="22"/><text x="55.9994%" y="1775.50"></text></g><g><title>syscall (10 samples, 0.02%)</title><rect x="55.7946%" y="1765" width="0.0205%" height="15" fill="rgb(249,57,21)" fg:x="27158" fg:w="10"/><text x="56.0446%" y="1775.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_read_priv (24 samples, 0.05%)</title><rect x="55.8151%" y="1765" width="0.0493%" height="15" fill="rgb(243,12,36)" fg:x="27168" fg:w="24"/><text x="56.0651%" y="1775.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_priv (52 samples, 0.11%)</title><rect x="55.8644%" y="1765" width="0.1068%" height="15" fill="rgb(253,128,47)" fg:x="27192" fg:w="52"/><text x="56.1144%" y="1775.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write (48 samples, 0.10%)</title><rect x="55.8726%" y="1749" width="0.0986%" height="15" fill="rgb(207,33,20)" fg:x="27196" fg:w="48"/><text x="56.1226%" y="1759.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (48 samples, 0.10%)</title><rect x="55.8726%" y="1733" width="0.0986%" height="15" fill="rgb(233,215,35)" fg:x="27196" fg:w="48"/><text x="56.1226%" y="1743.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (48 samples, 0.10%)</title><rect x="55.8726%" y="1717" width="0.0986%" height="15" fill="rgb(249,188,52)" fg:x="27196" fg:w="48"/><text x="56.1226%" y="1727.50"></text></g><g><title>mio::sys::unix::stateless_io_source::IoSourceState::do_io (48 samples, 0.10%)</title><rect x="55.8726%" y="1701" width="0.0986%" height="15" fill="rgb(225,12,32)" fg:x="27196" fg:w="48"/><text x="56.1226%" y="1711.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write::{{closure}} (48 samples, 0.10%)</title><rect x="55.8726%" y="1685" width="0.0986%" height="15" fill="rgb(247,98,14)" fg:x="27196" fg:w="48"/><text x="56.1226%" y="1695.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (48 samples, 0.10%)</title><rect x="55.8726%" y="1669" width="0.0986%" height="15" fill="rgb(247,219,48)" fg:x="27196" fg:w="48"/><text x="56.1226%" y="1679.50"></text></g><g><title>std::sys_common::net::TcpStream::write (48 samples, 0.10%)</title><rect x="55.8726%" y="1653" width="0.0986%" height="15" fill="rgb(253,60,48)" fg:x="27196" fg:w="48"/><text x="56.1226%" y="1663.50"></text></g><g><title>__libc_send (48 samples, 0.10%)</title><rect x="55.8726%" y="1637" width="0.0986%" height="15" fill="rgb(245,15,52)" fg:x="27196" fg:w="48"/><text x="56.1226%" y="1647.50"></text></g><g><title>__libc_send (48 samples, 0.10%)</title><rect x="55.8726%" y="1621" width="0.0986%" height="15" fill="rgb(220,133,28)" fg:x="27196" fg:w="48"/><text x="56.1226%" y="1631.50"></text></g><g><title>entry_SYSCALL_64 (48 samples, 0.10%)</title><rect x="55.8726%" y="1605" width="0.0986%" height="15" fill="rgb(217,180,4)" fg:x="27196" fg:w="48"/><text x="56.1226%" y="1615.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Local&lt;T&gt;::push_back (7 samples, 0.01%)</title><rect x="56.0082%" y="1765" width="0.0144%" height="15" fill="rgb(251,24,1)" fg:x="27262" fg:w="7"/><text x="56.2582%" y="1775.50"></text></g><g><title>core::sync::atomic::AtomicU32::store (6 samples, 0.01%)</title><rect x="56.0103%" y="1749" width="0.0123%" height="15" fill="rgb(212,185,49)" fg:x="27263" fg:w="6"/><text x="56.2603%" y="1759.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into (9 samples, 0.02%)</title><rect x="56.0226%" y="1765" width="0.0185%" height="15" fill="rgb(215,175,22)" fg:x="27269" fg:w="9"/><text x="56.2726%" y="1775.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (5 samples, 0.01%)</title><rect x="56.0308%" y="1749" width="0.0103%" height="15" fill="rgb(250,205,14)" fg:x="27273" fg:w="5"/><text x="56.2808%" y="1759.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (5 samples, 0.01%)</title><rect x="56.0308%" y="1733" width="0.0103%" height="15" fill="rgb(225,211,22)" fg:x="27273" fg:w="5"/><text x="56.2808%" y="1743.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (5 samples, 0.01%)</title><rect x="56.0308%" y="1717" width="0.0103%" height="15" fill="rgb(251,179,42)" fg:x="27273" fg:w="5"/><text x="56.2808%" y="1727.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::release (6 samples, 0.01%)</title><rect x="56.0431%" y="1765" width="0.0123%" height="15" fill="rgb(208,216,51)" fg:x="27279" fg:w="6"/><text x="56.2931%" y="1775.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (6 samples, 0.01%)</title><rect x="56.0555%" y="1765" width="0.0123%" height="15" fill="rgb(235,36,11)" fg:x="27285" fg:w="6"/><text x="56.3055%" y="1775.50"></text></g><g><title>tokio::runtime::signal::Driver::process (12 samples, 0.02%)</title><rect x="56.0699%" y="1765" width="0.0247%" height="15" fill="rgb(213,189,28)" fg:x="27292" fg:w="12"/><text x="56.3199%" y="1775.50"></text></g><g><title>tokio::runtime::task::core::TaskIdGuard::enter (14 samples, 0.03%)</title><rect x="56.0945%" y="1765" width="0.0288%" height="15" fill="rgb(227,203,42)" fg:x="27304" fg:w="14"/><text x="56.3445%" y="1775.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete (30 samples, 0.06%)</title><rect x="56.1233%" y="1765" width="0.0616%" height="15" fill="rgb(244,72,36)" fg:x="27318" fg:w="30"/><text x="56.3733%" y="1775.50"></text></g><g><title>tokio::runtime::task::raw::poll (24 samples, 0.05%)</title><rect x="56.1849%" y="1765" width="0.0493%" height="15" fill="rgb(213,53,17)" fg:x="27348" fg:w="24"/><text x="56.4349%" y="1775.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (7 samples, 0.01%)</title><rect x="56.2198%" y="1749" width="0.0144%" height="15" fill="rgb(207,167,3)" fg:x="27365" fg:w="7"/><text x="56.4698%" y="1759.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (7 samples, 0.01%)</title><rect x="56.2198%" y="1733" width="0.0144%" height="15" fill="rgb(216,98,30)" fg:x="27365" fg:w="7"/><text x="56.4698%" y="1743.50"></text></g><g><title>tokio::util::sharded_list::ShardedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::remove (19 samples, 0.04%)</title><rect x="56.2363%" y="1765" width="0.0390%" height="15" fill="rgb(236,123,15)" fg:x="27373" fg:w="19"/><text x="56.4863%" y="1775.50"></text></g><g><title>[[heap]] (565 samples, 1.16%)</title><rect x="55.1186%" y="1781" width="1.1608%" height="15" fill="rgb(248,81,50)" fg:x="26829" fg:w="565"/><text x="55.3686%" y="1791.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (14 samples, 0.03%)</title><rect x="56.2876%" y="1765" width="0.0288%" height="15" fill="rgb(214,120,4)" fg:x="27398" fg:w="14"/><text x="56.5376%" y="1775.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (11 samples, 0.02%)</title><rect x="56.3164%" y="1765" width="0.0226%" height="15" fill="rgb(208,179,34)" fg:x="27412" fg:w="11"/><text x="56.5664%" y="1775.50"></text></g><g><title>&lt;common::message::_::&lt;impl serde::de::Deserialize for common::message::GatewayMessage&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (10 samples, 0.02%)</title><rect x="56.4232%" y="1749" width="0.0205%" height="15" fill="rgb(227,140,7)" fg:x="27464" fg:w="10"/><text x="56.6732%" y="1759.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_identifier (10 samples, 0.02%)</title><rect x="56.4232%" y="1733" width="0.0205%" height="15" fill="rgb(214,22,6)" fg:x="27464" fg:w="10"/><text x="56.6732%" y="1743.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_str (10 samples, 0.02%)</title><rect x="56.4232%" y="1717" width="0.0205%" height="15" fill="rgb(207,137,27)" fg:x="27464" fg:w="10"/><text x="56.6732%" y="1727.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (50 samples, 0.10%)</title><rect x="56.3431%" y="1765" width="0.1027%" height="15" fill="rgb(210,8,46)" fg:x="27425" fg:w="50"/><text x="56.5931%" y="1775.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (17 samples, 0.03%)</title><rect x="56.4458%" y="1765" width="0.0349%" height="15" fill="rgb(240,16,54)" fg:x="27475" fg:w="17"/><text x="56.6958%" y="1775.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (8 samples, 0.02%)</title><rect x="56.4807%" y="1765" width="0.0164%" height="15" fill="rgb(211,209,29)" fg:x="27492" fg:w="8"/><text x="56.7307%" y="1775.50"></text></g><g><title>entry_SYSCALL_64 (38 samples, 0.08%)</title><rect x="56.4992%" y="1733" width="0.0781%" height="15" fill="rgb(226,228,24)" fg:x="27501" fg:w="38"/><text x="56.7492%" y="1743.50"></text></g><g><title>__libc_recv (41 samples, 0.08%)</title><rect x="56.4972%" y="1765" width="0.0842%" height="15" fill="rgb(222,84,9)" fg:x="27500" fg:w="41"/><text x="56.7472%" y="1775.50"></text></g><g><title>__libc_recv (40 samples, 0.08%)</title><rect x="56.4992%" y="1749" width="0.0822%" height="15" fill="rgb(234,203,30)" fg:x="27501" fg:w="40"/><text x="56.7492%" y="1759.50"></text></g><g><title>__vdso_clock_gettime (11 samples, 0.02%)</title><rect x="56.5814%" y="1765" width="0.0226%" height="15" fill="rgb(238,109,14)" fg:x="27541" fg:w="11"/><text x="56.8314%" y="1775.50"></text></g><g><title>_int_free (13 samples, 0.03%)</title><rect x="56.6040%" y="1765" width="0.0267%" height="15" fill="rgb(233,206,34)" fg:x="27552" fg:w="13"/><text x="56.8540%" y="1775.50"></text></g><g><title>common::message::_::&lt;impl serde::de::Deserialize for common::message::TradeAction&gt;::deserialize (7 samples, 0.01%)</title><rect x="56.6369%" y="1765" width="0.0144%" height="15" fill="rgb(220,167,47)" fg:x="27568" fg:w="7"/><text x="56.8869%" y="1775.50"></text></g><g><title>common::message::_::&lt;impl serde::ser::Serialize for common::message::NewOrderAck&gt;::serialize (8 samples, 0.02%)</title><rect x="56.6574%" y="1765" width="0.0164%" height="15" fill="rgb(238,105,10)" fg:x="27578" fg:w="8"/><text x="56.9074%" y="1775.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (12 samples, 0.02%)</title><rect x="56.6800%" y="1765" width="0.0247%" height="15" fill="rgb(213,227,17)" fg:x="27589" fg:w="12"/><text x="56.9300%" y="1775.50"></text></g><g><title>parking_lot_core::parking_lot::park (11 samples, 0.02%)</title><rect x="56.6821%" y="1749" width="0.0226%" height="15" fill="rgb(217,132,38)" fg:x="27590" fg:w="11"/><text x="56.9321%" y="1759.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (11 samples, 0.02%)</title><rect x="56.6821%" y="1733" width="0.0226%" height="15" fill="rgb(242,146,4)" fg:x="27590" fg:w="11"/><text x="56.9321%" y="1743.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (11 samples, 0.02%)</title><rect x="56.6821%" y="1717" width="0.0226%" height="15" fill="rgb(212,61,9)" fg:x="27590" fg:w="11"/><text x="56.9321%" y="1727.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (11 samples, 0.02%)</title><rect x="56.6821%" y="1701" width="0.0226%" height="15" fill="rgb(247,126,22)" fg:x="27590" fg:w="11"/><text x="56.9321%" y="1711.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (10 samples, 0.02%)</title><rect x="56.6841%" y="1685" width="0.0205%" height="15" fill="rgb(220,196,2)" fg:x="27591" fg:w="10"/><text x="56.9341%" y="1695.50"></text></g><g><title>syscall (10 samples, 0.02%)</title><rect x="56.6841%" y="1669" width="0.0205%" height="15" fill="rgb(208,46,4)" fg:x="27591" fg:w="10"/><text x="56.9341%" y="1679.50"></text></g><g><title>entry_SYSCALL_64 (10 samples, 0.02%)</title><rect x="56.6841%" y="1653" width="0.0205%" height="15" fill="rgb(252,104,46)" fg:x="27591" fg:w="10"/><text x="56.9341%" y="1663.50"></text></g><g><title>std::sync::mpmc::counter::Sender&lt;C&gt;::release (8 samples, 0.02%)</title><rect x="56.7273%" y="1765" width="0.0164%" height="15" fill="rgb(237,152,48)" fg:x="27612" fg:w="8"/><text x="56.9773%" y="1775.50"></text></g><g><title>std::sync::mpmc::counter::Sender&lt;C&gt;::counter (8 samples, 0.02%)</title><rect x="56.7273%" y="1749" width="0.0164%" height="15" fill="rgb(221,59,37)" fg:x="27612" fg:w="8"/><text x="56.9773%" y="1759.50"></text></g><g><title>tokio::runtime::driver::Driver::park (6 samples, 0.01%)</title><rect x="56.7437%" y="1765" width="0.0123%" height="15" fill="rgb(209,202,51)" fg:x="27620" fg:w="6"/><text x="56.9937%" y="1775.50"></text></g><g><title>tokio::runtime::driver::TimeDriver::park (6 samples, 0.01%)</title><rect x="56.7437%" y="1749" width="0.0123%" height="15" fill="rgb(228,81,30)" fg:x="27620" fg:w="6"/><text x="56.9937%" y="1759.50"></text></g><g><title>tokio::runtime::io::driver::Handle::deregister_source (15 samples, 0.03%)</title><rect x="56.7581%" y="1765" width="0.0308%" height="15" fill="rgb(227,42,39)" fg:x="27627" fg:w="15"/><text x="57.0081%" y="1775.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_complete (11 samples, 0.02%)</title><rect x="56.8197%" y="1765" width="0.0226%" height="15" fill="rgb(221,26,2)" fg:x="27657" fg:w="11"/><text x="57.0697%" y="1775.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal (5 samples, 0.01%)</title><rect x="56.8485%" y="1765" width="0.0103%" height="15" fill="rgb(254,61,31)" fg:x="27671" fg:w="5"/><text x="57.0985%" y="1775.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process (5 samples, 0.01%)</title><rect x="56.8485%" y="1749" width="0.0103%" height="15" fill="rgb(222,173,38)" fg:x="27671" fg:w="5"/><text x="57.0985%" y="1759.50"></text></g><g><title>[anon] (284 samples, 0.58%)</title><rect x="56.2794%" y="1781" width="0.5835%" height="15" fill="rgb(218,50,12)" fg:x="27394" fg:w="284"/><text x="56.5294%" y="1791.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_priv (8 samples, 0.02%)</title><rect x="56.8649%" y="1765" width="0.0164%" height="15" fill="rgb(223,88,40)" fg:x="27679" fg:w="8"/><text x="57.1149%" y="1775.50"></text></g><g><title>[engine] (13 samples, 0.03%)</title><rect x="56.8629%" y="1781" width="0.0267%" height="15" fill="rgb(237,54,19)" fg:x="27678" fg:w="13"/><text x="57.1129%" y="1791.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (16 samples, 0.03%)</title><rect x="56.8896%" y="1765" width="0.0329%" height="15" fill="rgb(251,129,25)" fg:x="27691" fg:w="16"/><text x="57.1396%" y="1775.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (10 samples, 0.02%)</title><rect x="56.9224%" y="1765" width="0.0205%" height="15" fill="rgb(238,97,19)" fg:x="27707" fg:w="10"/><text x="57.1724%" y="1775.50"></text></g><g><title>&lt;common::message::_::&lt;impl serde::de::Deserialize for common::message::GatewayMessage&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (12 samples, 0.02%)</title><rect x="56.9553%" y="1765" width="0.0247%" height="15" fill="rgb(240,169,18)" fg:x="27723" fg:w="12"/><text x="57.2053%" y="1775.50"></text></g><g><title>__GI___close (26 samples, 0.05%)</title><rect x="57.0005%" y="1765" width="0.0534%" height="15" fill="rgb(230,187,49)" fg:x="27745" fg:w="26"/><text x="57.2505%" y="1775.50"></text></g><g><title>entry_SYSCALL_64 (26 samples, 0.05%)</title><rect x="57.0005%" y="1749" width="0.0534%" height="15" fill="rgb(209,44,26)" fg:x="27745" fg:w="26"/><text x="57.2505%" y="1759.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.01%)</title><rect x="57.0560%" y="1765" width="0.0103%" height="15" fill="rgb(244,0,6)" fg:x="27772" fg:w="5"/><text x="57.3060%" y="1775.50"></text></g><g><title>__pow (6 samples, 0.01%)</title><rect x="57.0745%" y="1765" width="0.0123%" height="15" fill="rgb(248,18,21)" fg:x="27781" fg:w="6"/><text x="57.3245%" y="1775.50"></text></g><g><title>__vdso_clock_gettime (10 samples, 0.02%)</title><rect x="57.0868%" y="1765" width="0.0205%" height="15" fill="rgb(245,180,19)" fg:x="27787" fg:w="10"/><text x="57.3368%" y="1775.50"></text></g><g><title>common::message::_::&lt;impl serde::ser::Serialize for common::message::NewOrderAck&gt;::serialize (6 samples, 0.01%)</title><rect x="57.1176%" y="1765" width="0.0123%" height="15" fill="rgb(252,118,36)" fg:x="27802" fg:w="6"/><text x="57.3676%" y="1775.50"></text></g><g><title>core::str::converts::from_utf8 (28 samples, 0.06%)</title><rect x="57.1505%" y="1765" width="0.0575%" height="15" fill="rgb(210,224,19)" fg:x="27818" fg:w="28"/><text x="57.4005%" y="1775.50"></text></g><g><title>engine::engine::match_server::MatchServer::run::{{closure}}::{{closure}} (16 samples, 0.03%)</title><rect x="57.2080%" y="1765" width="0.0329%" height="15" fill="rgb(218,30,24)" fg:x="27846" fg:w="16"/><text x="57.4580%" y="1775.50"></text></g><g><title>engine::engine::match_server::MatchServer::handler::{{closure}} (5 samples, 0.01%)</title><rect x="57.2306%" y="1749" width="0.0103%" height="15" fill="rgb(219,75,50)" fg:x="27857" fg:w="5"/><text x="57.4806%" y="1759.50"></text></g><g><title>epoll_wait (15 samples, 0.03%)</title><rect x="57.2409%" y="1765" width="0.0308%" height="15" fill="rgb(234,72,50)" fg:x="27862" fg:w="15"/><text x="57.4909%" y="1775.50"></text></g><g><title>entry_SYSCALL_64 (15 samples, 0.03%)</title><rect x="57.2409%" y="1749" width="0.0308%" height="15" fill="rgb(219,100,48)" fg:x="27862" fg:w="15"/><text x="57.4909%" y="1759.50"></text></g><g><title>mio::sys::unix::selector::epoll::Selector::select (7 samples, 0.01%)</title><rect x="57.2717%" y="1765" width="0.0144%" height="15" fill="rgb(253,5,41)" fg:x="27877" fg:w="7"/><text x="57.5217%" y="1775.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::end_map (17 samples, 0.03%)</title><rect x="57.2881%" y="1765" width="0.0349%" height="15" fill="rgb(247,181,11)" fg:x="27885" fg:w="17"/><text x="57.5381%" y="1775.50"></text></g><g><title>std::sync::mpmc::list::Channel&lt;T&gt;::send (6 samples, 0.01%)</title><rect x="57.3292%" y="1765" width="0.0123%" height="15" fill="rgb(222,223,25)" fg:x="27905" fg:w="6"/><text x="57.5792%" y="1775.50"></text></g><g><title>std::sys::unix::time::Timespec::now (19 samples, 0.04%)</title><rect x="57.3416%" y="1765" width="0.0390%" height="15" fill="rgb(214,198,28)" fg:x="27911" fg:w="19"/><text x="57.5916%" y="1775.50"></text></g><g><title>syscall (8 samples, 0.02%)</title><rect x="57.3867%" y="1765" width="0.0164%" height="15" fill="rgb(230,46,43)" fg:x="27933" fg:w="8"/><text x="57.6367%" y="1775.50"></text></g><g><title>entry_SYSCALL_64 (8 samples, 0.02%)</title><rect x="57.3867%" y="1749" width="0.0164%" height="15" fill="rgb(233,65,53)" fg:x="27933" fg:w="8"/><text x="57.6367%" y="1759.50"></text></g><g><title>tokio::process::imp::orphan::OrphanQueueImpl&lt;T&gt;::reap_orphans (19 samples, 0.04%)</title><rect x="57.4093%" y="1765" width="0.0390%" height="15" fill="rgb(221,121,27)" fg:x="27944" fg:w="19"/><text x="57.6593%" y="1775.50"></text></g><g><title>tokio::runtime::io::driver::Driver::turn (22 samples, 0.05%)</title><rect x="57.4525%" y="1765" width="0.0452%" height="15" fill="rgb(247,70,47)" fg:x="27965" fg:w="22"/><text x="57.7025%" y="1775.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (17 samples, 0.03%)</title><rect x="57.4977%" y="1765" width="0.0349%" height="15" fill="rgb(228,85,35)" fg:x="27987" fg:w="17"/><text x="57.7477%" y="1775.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (12 samples, 0.02%)</title><rect x="57.5326%" y="1765" width="0.0247%" height="15" fill="rgb(209,50,18)" fg:x="28004" fg:w="12"/><text x="57.7826%" y="1775.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::wake (9 samples, 0.02%)</title><rect x="57.5573%" y="1765" width="0.0185%" height="15" fill="rgb(250,19,35)" fg:x="28016" fg:w="9"/><text x="57.8073%" y="1775.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Parker::park (8 samples, 0.02%)</title><rect x="57.5799%" y="1765" width="0.0164%" height="15" fill="rgb(253,107,29)" fg:x="28027" fg:w="8"/><text x="57.8299%" y="1775.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (8 samples, 0.02%)</title><rect x="57.5799%" y="1749" width="0.0164%" height="15" fill="rgb(252,179,29)" fg:x="28027" fg:w="8"/><text x="57.8299%" y="1759.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (8 samples, 0.02%)</title><rect x="57.5799%" y="1733" width="0.0164%" height="15" fill="rgb(238,194,6)" fg:x="28027" fg:w="8"/><text x="57.8299%" y="1743.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (8 samples, 0.02%)</title><rect x="57.5799%" y="1717" width="0.0164%" height="15" fill="rgb(238,164,29)" fg:x="28027" fg:w="8"/><text x="57.8299%" y="1727.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (5 samples, 0.01%)</title><rect x="57.6066%" y="1765" width="0.0103%" height="15" fill="rgb(224,25,9)" fg:x="28040" fg:w="5"/><text x="57.8566%" y="1775.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (13 samples, 0.03%)</title><rect x="57.6168%" y="1765" width="0.0267%" height="15" fill="rgb(244,153,23)" fg:x="28045" fg:w="13"/><text x="57.8668%" y="1775.50"></text></g><g><title>tokio::runtime::coop::budget (5 samples, 0.01%)</title><rect x="57.6333%" y="1749" width="0.0103%" height="15" fill="rgb(212,203,14)" fg:x="28053" fg:w="5"/><text x="57.8833%" y="1759.50"></text></g><g><title>tokio::runtime::coop::with_budget (5 samples, 0.01%)</title><rect x="57.6333%" y="1733" width="0.0103%" height="15" fill="rgb(220,164,20)" fg:x="28053" fg:w="5"/><text x="57.8833%" y="1743.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task::{{closure}} (5 samples, 0.01%)</title><rect x="57.6333%" y="1717" width="0.0103%" height="15" fill="rgb(222,203,48)" fg:x="28053" fg:w="5"/><text x="57.8833%" y="1727.50"></text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (5 samples, 0.01%)</title><rect x="57.6333%" y="1701" width="0.0103%" height="15" fill="rgb(215,159,22)" fg:x="28053" fg:w="5"/><text x="57.8833%" y="1711.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (5 samples, 0.01%)</title><rect x="57.6333%" y="1685" width="0.0103%" height="15" fill="rgb(216,183,47)" fg:x="28053" fg:w="5"/><text x="57.8833%" y="1695.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (6 samples, 0.01%)</title><rect x="57.6559%" y="1749" width="0.0123%" height="15" fill="rgb(229,195,25)" fg:x="28064" fg:w="6"/><text x="57.9059%" y="1759.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}} (6 samples, 0.01%)</title><rect x="57.6559%" y="1733" width="0.0123%" height="15" fill="rgb(224,132,51)" fg:x="28064" fg:w="6"/><text x="57.9059%" y="1743.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (15 samples, 0.03%)</title><rect x="57.6436%" y="1765" width="0.0308%" height="15" fill="rgb(240,63,7)" fg:x="28058" fg:w="15"/><text x="57.8936%" y="1775.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (6 samples, 0.01%)</title><rect x="57.6908%" y="1765" width="0.0123%" height="15" fill="rgb(249,182,41)" fg:x="28081" fg:w="6"/><text x="57.9408%" y="1775.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal (7 samples, 0.01%)</title><rect x="57.7031%" y="1765" width="0.0144%" height="15" fill="rgb(243,47,26)" fg:x="28087" fg:w="7"/><text x="57.9531%" y="1775.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (6 samples, 0.01%)</title><rect x="57.7175%" y="1765" width="0.0123%" height="15" fill="rgb(233,48,2)" fg:x="28094" fg:w="6"/><text x="57.9675%" y="1775.50"></text></g><g><title>[unknown] (417 samples, 0.86%)</title><rect x="56.8896%" y="1781" width="0.8567%" height="15" fill="rgb(244,165,34)" fg:x="27691" fg:w="417"/><text x="57.1396%" y="1791.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::poll (8 samples, 0.02%)</title><rect x="57.7298%" y="1765" width="0.0164%" height="15" fill="rgb(207,89,7)" fg:x="28100" fg:w="8"/><text x="57.9798%" y="1775.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.01%)</title><rect x="57.7483%" y="1781" width="0.0123%" height="15" fill="rgb(244,117,36)" fg:x="28109" fg:w="6"/><text x="57.9983%" y="1791.50"></text></g><g><title>__pow (6 samples, 0.01%)</title><rect x="57.7607%" y="1781" width="0.0123%" height="15" fill="rgb(226,144,34)" fg:x="28115" fg:w="6"/><text x="58.0107%" y="1791.50"></text></g><g><title>__vdso_clock_gettime (8 samples, 0.02%)</title><rect x="57.7730%" y="1781" width="0.0164%" height="15" fill="rgb(213,23,19)" fg:x="28121" fg:w="8"/><text x="58.0230%" y="1791.50"></text></g><g><title>anon.d9e808867ea6122277f758142d62842e.33.llvm.8140520349115430232 (12 samples, 0.02%)</title><rect x="57.7997%" y="1781" width="0.0247%" height="15" fill="rgb(217,75,12)" fg:x="28134" fg:w="12"/><text x="58.0497%" y="1791.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_running (12 samples, 0.02%)</title><rect x="57.7997%" y="1765" width="0.0247%" height="15" fill="rgb(224,159,17)" fg:x="28134" fg:w="12"/><text x="58.0497%" y="1775.50"></text></g><g><title>__x64_sys_futex (5 samples, 0.01%)</title><rect x="57.8285%" y="1349" width="0.0103%" height="15" fill="rgb(217,118,1)" fg:x="28148" fg:w="5"/><text x="58.0785%" y="1359.50"></text></g><g><title>do_futex (5 samples, 0.01%)</title><rect x="57.8285%" y="1333" width="0.0103%" height="15" fill="rgb(232,180,48)" fg:x="28148" fg:w="5"/><text x="58.0785%" y="1343.50"></text></g><g><title>futex_wait (5 samples, 0.01%)</title><rect x="57.8285%" y="1317" width="0.0103%" height="15" fill="rgb(230,27,33)" fg:x="28148" fg:w="5"/><text x="58.0785%" y="1327.50"></text></g><g><title>futex_wait_queue (5 samples, 0.01%)</title><rect x="57.8285%" y="1301" width="0.0103%" height="15" fill="rgb(205,31,21)" fg:x="28148" fg:w="5"/><text x="58.0785%" y="1311.50"></text></g><g><title>schedule (5 samples, 0.01%)</title><rect x="57.8285%" y="1285" width="0.0103%" height="15" fill="rgb(253,59,4)" fg:x="28148" fg:w="5"/><text x="58.0785%" y="1295.50"></text></g><g><title>__schedule (5 samples, 0.01%)</title><rect x="57.8285%" y="1269" width="0.0103%" height="15" fill="rgb(224,201,9)" fg:x="28148" fg:w="5"/><text x="58.0785%" y="1279.50"></text></g><g><title>finish_task_switch.isra.0 (5 samples, 0.01%)</title><rect x="57.8285%" y="1253" width="0.0103%" height="15" fill="rgb(229,206,30)" fg:x="28148" fg:w="5"/><text x="58.0785%" y="1263.50"></text></g><g><title>__perf_event_task_sched_in (5 samples, 0.01%)</title><rect x="57.8285%" y="1237" width="0.0103%" height="15" fill="rgb(212,67,47)" fg:x="28148" fg:w="5"/><text x="58.0785%" y="1247.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (5 samples, 0.01%)</title><rect x="57.8285%" y="1221" width="0.0103%" height="15" fill="rgb(211,96,50)" fg:x="28148" fg:w="5"/><text x="58.0785%" y="1231.50"></text></g><g><title>native_write_msr (5 samples, 0.01%)</title><rect x="57.8285%" y="1205" width="0.0103%" height="15" fill="rgb(252,114,18)" fg:x="28148" fg:w="5"/><text x="58.0785%" y="1215.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (6 samples, 0.01%)</title><rect x="57.8285%" y="1445" width="0.0123%" height="15" fill="rgb(223,58,37)" fg:x="28148" fg:w="6"/><text x="58.0785%" y="1455.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (6 samples, 0.01%)</title><rect x="57.8285%" y="1429" width="0.0123%" height="15" fill="rgb(237,70,4)" fg:x="28148" fg:w="6"/><text x="58.0785%" y="1439.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (6 samples, 0.01%)</title><rect x="57.8285%" y="1413" width="0.0123%" height="15" fill="rgb(244,85,46)" fg:x="28148" fg:w="6"/><text x="58.0785%" y="1423.50"></text></g><g><title>syscall (6 samples, 0.01%)</title><rect x="57.8285%" y="1397" width="0.0123%" height="15" fill="rgb(223,39,52)" fg:x="28148" fg:w="6"/><text x="58.0785%" y="1407.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (6 samples, 0.01%)</title><rect x="57.8285%" y="1381" width="0.0123%" height="15" fill="rgb(218,200,14)" fg:x="28148" fg:w="6"/><text x="58.0785%" y="1391.50"></text></g><g><title>do_syscall_64 (6 samples, 0.01%)</title><rect x="57.8285%" y="1365" width="0.0123%" height="15" fill="rgb(208,171,16)" fg:x="28148" fg:w="6"/><text x="58.0785%" y="1375.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (12 samples, 0.02%)</title><rect x="57.8285%" y="1541" width="0.0247%" height="15" fill="rgb(234,200,18)" fg:x="28148" fg:w="12"/><text x="58.0785%" y="1551.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (12 samples, 0.02%)</title><rect x="57.8285%" y="1525" width="0.0247%" height="15" fill="rgb(228,45,11)" fg:x="28148" fg:w="12"/><text x="58.0785%" y="1535.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (12 samples, 0.02%)</title><rect x="57.8285%" y="1509" width="0.0247%" height="15" fill="rgb(237,182,11)" fg:x="28148" fg:w="12"/><text x="58.0785%" y="1519.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (12 samples, 0.02%)</title><rect x="57.8285%" y="1493" width="0.0247%" height="15" fill="rgb(241,175,49)" fg:x="28148" fg:w="12"/><text x="58.0785%" y="1503.50"></text></g><g><title>parking_lot_core::parking_lot::park (12 samples, 0.02%)</title><rect x="57.8285%" y="1477" width="0.0247%" height="15" fill="rgb(247,38,35)" fg:x="28148" fg:w="12"/><text x="58.0785%" y="1487.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (12 samples, 0.02%)</title><rect x="57.8285%" y="1461" width="0.0247%" height="15" fill="rgb(228,39,49)" fg:x="28148" fg:w="12"/><text x="58.0785%" y="1471.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (6 samples, 0.01%)</title><rect x="57.8408%" y="1445" width="0.0123%" height="15" fill="rgb(226,101,26)" fg:x="28154" fg:w="6"/><text x="58.0908%" y="1455.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data::THREAD_DATA::__getit (6 samples, 0.01%)</title><rect x="57.8408%" y="1429" width="0.0123%" height="15" fill="rgb(206,141,19)" fg:x="28154" fg:w="6"/><text x="58.0908%" y="1439.50"></text></g><g><title>std::sys::common::thread_local::fast_local::Key&lt;T&gt;::get (6 samples, 0.01%)</title><rect x="57.8408%" y="1413" width="0.0123%" height="15" fill="rgb(211,200,13)" fg:x="28154" fg:w="6"/><text x="58.0908%" y="1423.50"></text></g><g><title>std::sys::common::thread_local::fast_local::Key&lt;T&gt;::try_initialize (6 samples, 0.01%)</title><rect x="57.8408%" y="1397" width="0.0123%" height="15" fill="rgb(241,121,6)" fg:x="28154" fg:w="6"/><text x="58.0908%" y="1407.50"></text></g><g><title>std::sys::common::thread_local::lazy::LazyKeyInner&lt;T&gt;::initialize (6 samples, 0.01%)</title><rect x="57.8408%" y="1381" width="0.0123%" height="15" fill="rgb(234,221,29)" fg:x="28154" fg:w="6"/><text x="58.0908%" y="1391.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data::THREAD_DATA::__getit::{{closure}} (6 samples, 0.01%)</title><rect x="57.8408%" y="1365" width="0.0123%" height="15" fill="rgb(229,136,5)" fg:x="28154" fg:w="6"/><text x="58.0908%" y="1375.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data::THREAD_DATA::__init (6 samples, 0.01%)</title><rect x="57.8408%" y="1349" width="0.0123%" height="15" fill="rgb(238,36,11)" fg:x="28154" fg:w="6"/><text x="58.0908%" y="1359.50"></text></g><g><title>parking_lot_core::parking_lot::ThreadData::new (6 samples, 0.01%)</title><rect x="57.8408%" y="1333" width="0.0123%" height="15" fill="rgb(251,55,41)" fg:x="28154" fg:w="6"/><text x="58.0908%" y="1343.50"></text></g><g><title>parking_lot_core::parking_lot::grow_hashtable (6 samples, 0.01%)</title><rect x="57.8408%" y="1317" width="0.0123%" height="15" fill="rgb(242,34,40)" fg:x="28154" fg:w="6"/><text x="58.0908%" y="1327.50"></text></g><g><title>parking_lot_core::parking_lot::HashTable::new (6 samples, 0.01%)</title><rect x="57.8408%" y="1301" width="0.0123%" height="15" fill="rgb(215,42,17)" fg:x="28154" fg:w="6"/><text x="58.0908%" y="1311.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (6 samples, 0.01%)</title><rect x="57.8408%" y="1285" width="0.0123%" height="15" fill="rgb(207,44,46)" fg:x="28154" fg:w="6"/><text x="58.0908%" y="1295.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6 samples, 0.01%)</title><rect x="57.8408%" y="1269" width="0.0123%" height="15" fill="rgb(211,206,28)" fg:x="28154" fg:w="6"/><text x="58.0908%" y="1279.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6 samples, 0.01%)</title><rect x="57.8408%" y="1253" width="0.0123%" height="15" fill="rgb(237,167,16)" fg:x="28154" fg:w="6"/><text x="58.0908%" y="1263.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (6 samples, 0.01%)</title><rect x="57.8408%" y="1237" width="0.0123%" height="15" fill="rgb(233,66,6)" fg:x="28154" fg:w="6"/><text x="58.0908%" y="1247.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.01%)</title><rect x="57.8408%" y="1221" width="0.0123%" height="15" fill="rgb(246,123,29)" fg:x="28154" fg:w="6"/><text x="58.0908%" y="1231.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.01%)</title><rect x="57.8408%" y="1205" width="0.0123%" height="15" fill="rgb(209,62,40)" fg:x="28154" fg:w="6"/><text x="58.0908%" y="1215.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.01%)</title><rect x="57.8408%" y="1189" width="0.0123%" height="15" fill="rgb(218,4,25)" fg:x="28154" fg:w="6"/><text x="58.0908%" y="1199.50"></text></g><g><title>__rdl_alloc (6 samples, 0.01%)</title><rect x="57.8408%" y="1173" width="0.0123%" height="15" fill="rgb(253,91,49)" fg:x="28154" fg:w="6"/><text x="58.0908%" y="1183.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (6 samples, 0.01%)</title><rect x="57.8408%" y="1157" width="0.0123%" height="15" fill="rgb(228,155,29)" fg:x="28154" fg:w="6"/><text x="58.0908%" y="1167.50"></text></g><g><title>std::sys::unix::alloc::aligned_malloc (6 samples, 0.01%)</title><rect x="57.8408%" y="1141" width="0.0123%" height="15" fill="rgb(243,57,37)" fg:x="28154" fg:w="6"/><text x="58.0908%" y="1151.50"></text></g><g><title>__posix_memalign (6 samples, 0.01%)</title><rect x="57.8408%" y="1125" width="0.0123%" height="15" fill="rgb(244,167,17)" fg:x="28154" fg:w="6"/><text x="58.0908%" y="1135.50"></text></g><g><title>__posix_memalign (6 samples, 0.01%)</title><rect x="57.8408%" y="1109" width="0.0123%" height="15" fill="rgb(207,181,38)" fg:x="28154" fg:w="6"/><text x="58.0908%" y="1119.50"></text></g><g><title>_mid_memalign (6 samples, 0.01%)</title><rect x="57.8408%" y="1093" width="0.0123%" height="15" fill="rgb(211,8,23)" fg:x="28154" fg:w="6"/><text x="58.0908%" y="1103.50"></text></g><g><title>_int_memalign (6 samples, 0.01%)</title><rect x="57.8408%" y="1077" width="0.0123%" height="15" fill="rgb(235,11,44)" fg:x="28154" fg:w="6"/><text x="58.0908%" y="1087.50"></text></g><g><title>_int_malloc (6 samples, 0.01%)</title><rect x="57.8408%" y="1061" width="0.0123%" height="15" fill="rgb(248,18,52)" fg:x="28154" fg:w="6"/><text x="58.0908%" y="1071.50"></text></g><g><title>asm_exc_page_fault (6 samples, 0.01%)</title><rect x="57.8408%" y="1045" width="0.0123%" height="15" fill="rgb(208,4,7)" fg:x="28154" fg:w="6"/><text x="58.0908%" y="1055.50"></text></g><g><title>exc_page_fault (6 samples, 0.01%)</title><rect x="57.8408%" y="1029" width="0.0123%" height="15" fill="rgb(240,17,39)" fg:x="28154" fg:w="6"/><text x="58.0908%" y="1039.50"></text></g><g><title>do_user_addr_fault (6 samples, 0.01%)</title><rect x="57.8408%" y="1013" width="0.0123%" height="15" fill="rgb(207,170,3)" fg:x="28154" fg:w="6"/><text x="58.0908%" y="1023.50"></text></g><g><title>lock_mm_and_find_vma (6 samples, 0.01%)</title><rect x="57.8408%" y="997" width="0.0123%" height="15" fill="rgb(236,100,52)" fg:x="28154" fg:w="6"/><text x="58.0908%" y="1007.50"></text></g><g><title>down_read_killable (6 samples, 0.01%)</title><rect x="57.8408%" y="981" width="0.0123%" height="15" fill="rgb(246,78,51)" fg:x="28154" fg:w="6"/><text x="58.0908%" y="991.50"></text></g><g><title>rwsem_down_read_slowpath (6 samples, 0.01%)</title><rect x="57.8408%" y="965" width="0.0123%" height="15" fill="rgb(211,17,15)" fg:x="28154" fg:w="6"/><text x="58.0908%" y="975.50"></text></g><g><title>schedule_preempt_disabled (5 samples, 0.01%)</title><rect x="57.8428%" y="949" width="0.0103%" height="15" fill="rgb(209,59,46)" fg:x="28155" fg:w="5"/><text x="58.0928%" y="959.50"></text></g><g><title>schedule (5 samples, 0.01%)</title><rect x="57.8428%" y="933" width="0.0103%" height="15" fill="rgb(210,92,25)" fg:x="28155" fg:w="5"/><text x="58.0928%" y="943.50"></text></g><g><title>__schedule (5 samples, 0.01%)</title><rect x="57.8428%" y="917" width="0.0103%" height="15" fill="rgb(238,174,52)" fg:x="28155" fg:w="5"/><text x="58.0928%" y="927.50"></text></g><g><title>finish_task_switch.isra.0 (5 samples, 0.01%)</title><rect x="57.8428%" y="901" width="0.0103%" height="15" fill="rgb(230,73,7)" fg:x="28155" fg:w="5"/><text x="58.0928%" y="911.50"></text></g><g><title>__perf_event_task_sched_in (5 samples, 0.01%)</title><rect x="57.8428%" y="885" width="0.0103%" height="15" fill="rgb(243,124,40)" fg:x="28155" fg:w="5"/><text x="58.0928%" y="895.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (5 samples, 0.01%)</title><rect x="57.8428%" y="869" width="0.0103%" height="15" fill="rgb(244,170,11)" fg:x="28155" fg:w="5"/><text x="58.0928%" y="879.50"></text></g><g><title>native_write_msr (5 samples, 0.01%)</title><rect x="57.8428%" y="853" width="0.0103%" height="15" fill="rgb(207,114,54)" fg:x="28155" fg:w="5"/><text x="58.0928%" y="863.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (8 samples, 0.02%)</title><rect x="57.9332%" y="1109" width="0.0164%" height="15" fill="rgb(205,42,20)" fg:x="28199" fg:w="8"/><text x="58.1832%" y="1119.50"></text></g><g><title>std::time::Instant::duration_since (7 samples, 0.01%)</title><rect x="57.9353%" y="1093" width="0.0144%" height="15" fill="rgb(230,30,28)" fg:x="28200" fg:w="7"/><text x="58.1853%" y="1103.50"></text></g><g><title>std::time::Instant::checked_duration_since (7 samples, 0.01%)</title><rect x="57.9353%" y="1077" width="0.0144%" height="15" fill="rgb(205,73,54)" fg:x="28200" fg:w="7"/><text x="58.1853%" y="1087.50"></text></g><g><title>std::sys::unix::time::Instant::checked_sub_instant (7 samples, 0.01%)</title><rect x="57.9353%" y="1061" width="0.0144%" height="15" fill="rgb(254,227,23)" fg:x="28200" fg:w="7"/><text x="58.1853%" y="1071.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (6 samples, 0.01%)</title><rect x="57.9373%" y="1045" width="0.0123%" height="15" fill="rgb(228,202,34)" fg:x="28201" fg:w="6"/><text x="58.1873%" y="1055.50"></text></g><g><title>compiler_builtins::float::conv::int_to_float::u128_to_f64_bits (6 samples, 0.01%)</title><rect x="57.9497%" y="1077" width="0.0123%" height="15" fill="rgb(222,225,37)" fg:x="28207" fg:w="6"/><text x="58.1997%" y="1087.50"></text></g><g><title>__floattidf (19 samples, 0.04%)</title><rect x="57.9497%" y="1109" width="0.0390%" height="15" fill="rgb(221,14,54)" fg:x="28207" fg:w="19"/><text x="58.1997%" y="1119.50"></text></g><g><title>compiler_builtins::float::conv::__floattidf (19 samples, 0.04%)</title><rect x="57.9497%" y="1093" width="0.0390%" height="15" fill="rgb(254,102,2)" fg:x="28207" fg:w="19"/><text x="58.1997%" y="1103.50"></text></g><g><title>core::num::&lt;impl i128&gt;::unsigned_abs (12 samples, 0.02%)</title><rect x="57.9640%" y="1077" width="0.0247%" height="15" fill="rgb(232,104,17)" fg:x="28214" fg:w="12"/><text x="58.2140%" y="1087.50"></text></g><g><title>core::num::&lt;impl i128&gt;::wrapping_abs (12 samples, 0.02%)</title><rect x="57.9640%" y="1061" width="0.0247%" height="15" fill="rgb(250,220,14)" fg:x="28214" fg:w="12"/><text x="58.2140%" y="1071.50"></text></g><g><title>@plt (10 samples, 0.02%)</title><rect x="58.0010%" y="1077" width="0.0205%" height="15" fill="rgb(241,158,9)" fg:x="28232" fg:w="10"/><text x="58.2510%" y="1087.50"></text></g><g><title>asuint64 (6 samples, 0.01%)</title><rect x="58.0277%" y="1061" width="0.0123%" height="15" fill="rgb(246,9,43)" fg:x="28245" fg:w="6"/><text x="58.2777%" y="1071.50"></text></g><g><title>exp_inline (13 samples, 0.03%)</title><rect x="58.0401%" y="1061" width="0.0267%" height="15" fill="rgb(206,73,33)" fg:x="28251" fg:w="13"/><text x="58.2901%" y="1071.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::powf (60 samples, 0.12%)</title><rect x="57.9887%" y="1109" width="0.1233%" height="15" fill="rgb(222,79,8)" fg:x="28226" fg:w="60"/><text x="58.2387%" y="1119.50"></text></g><g><title>__pow (59 samples, 0.12%)</title><rect x="57.9908%" y="1093" width="0.1212%" height="15" fill="rgb(234,8,54)" fg:x="28227" fg:w="59"/><text x="58.2408%" y="1103.50"></text></g><g><title>__ieee754_pow_fma (44 samples, 0.09%)</title><rect x="58.0216%" y="1077" width="0.0904%" height="15" fill="rgb(209,134,38)" fg:x="28242" fg:w="44"/><text x="58.2716%" y="1087.50"></text></g><g><title>log_inline (22 samples, 0.05%)</title><rect x="58.0668%" y="1061" width="0.0452%" height="15" fill="rgb(230,127,29)" fg:x="28264" fg:w="22"/><text x="58.3168%" y="1071.50"></text></g><g><title>std::sys::unix::time::Timespec::now (39 samples, 0.08%)</title><rect x="58.1120%" y="1109" width="0.0801%" height="15" fill="rgb(242,44,41)" fg:x="28286" fg:w="39"/><text x="58.3620%" y="1119.50"></text></g><g><title>__GI___clock_gettime (38 samples, 0.08%)</title><rect x="58.1140%" y="1093" width="0.0781%" height="15" fill="rgb(222,56,43)" fg:x="28287" fg:w="38"/><text x="58.3640%" y="1103.50"></text></g><g><title>__vdso_clock_gettime (19 samples, 0.04%)</title><rect x="58.1531%" y="1077" width="0.0390%" height="15" fill="rgb(238,39,47)" fg:x="28306" fg:w="19"/><text x="58.4031%" y="1087.50"></text></g><g><title>[[vdso]] (9 samples, 0.02%)</title><rect x="58.1736%" y="1061" width="0.0185%" height="15" fill="rgb(226,79,43)" fg:x="28316" fg:w="9"/><text x="58.4236%" y="1071.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::end_processing_scheduled_tasks (149 samples, 0.31%)</title><rect x="57.9024%" y="1125" width="0.3061%" height="15" fill="rgb(242,105,53)" fg:x="28184" fg:w="149"/><text x="58.1524%" y="1135.50"></text></g><g><title>std::time::Instant::now (8 samples, 0.02%)</title><rect x="58.1921%" y="1109" width="0.0164%" height="15" fill="rgb(251,132,46)" fg:x="28325" fg:w="8"/><text x="58.4421%" y="1119.50"></text></g><g><title>std::sys::unix::time::Instant::now (8 samples, 0.02%)</title><rect x="58.1921%" y="1093" width="0.0164%" height="15" fill="rgb(231,77,14)" fg:x="28325" fg:w="8"/><text x="58.4421%" y="1103.50"></text></g><g><title>[[vdso]] (5 samples, 0.01%)</title><rect x="58.2435%" y="1061" width="0.0103%" height="15" fill="rgb(240,135,9)" fg:x="28350" fg:w="5"/><text x="58.4935%" y="1071.50"></text></g><g><title>std::sys::unix::time::Timespec::now (22 samples, 0.05%)</title><rect x="58.2106%" y="1109" width="0.0452%" height="15" fill="rgb(248,109,14)" fg:x="28334" fg:w="22"/><text x="58.4606%" y="1119.50"></text></g><g><title>__GI___clock_gettime (22 samples, 0.05%)</title><rect x="58.2106%" y="1093" width="0.0452%" height="15" fill="rgb(227,146,52)" fg:x="28334" fg:w="22"/><text x="58.4606%" y="1103.50"></text></g><g><title>__vdso_clock_gettime (12 samples, 0.02%)</title><rect x="58.2311%" y="1077" width="0.0247%" height="15" fill="rgb(232,54,3)" fg:x="28344" fg:w="12"/><text x="58.4811%" y="1087.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::start_processing_scheduled_tasks (24 samples, 0.05%)</title><rect x="58.2085%" y="1125" width="0.0493%" height="15" fill="rgb(229,201,43)" fg:x="28333" fg:w="24"/><text x="58.4585%" y="1135.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::end_processing_scheduled_tasks (5 samples, 0.01%)</title><rect x="58.3030%" y="1109" width="0.0103%" height="15" fill="rgb(252,161,33)" fg:x="28379" fg:w="5"/><text x="58.5530%" y="1119.50"></text></g><g><title>__x64_sys_epoll_wait (14 samples, 0.03%)</title><rect x="58.3606%" y="901" width="0.0288%" height="15" fill="rgb(226,146,40)" fg:x="28407" fg:w="14"/><text x="58.6106%" y="911.50"></text></g><g><title>do_epoll_wait (13 samples, 0.03%)</title><rect x="58.3626%" y="885" width="0.0267%" height="15" fill="rgb(219,47,25)" fg:x="28408" fg:w="13"/><text x="58.6126%" y="895.50"></text></g><g><title>ep_item_poll.isra.0 (8 samples, 0.02%)</title><rect x="58.3729%" y="869" width="0.0164%" height="15" fill="rgb(250,135,13)" fg:x="28413" fg:w="8"/><text x="58.6229%" y="879.50"></text></g><g><title>sock_poll (6 samples, 0.01%)</title><rect x="58.3770%" y="853" width="0.0123%" height="15" fill="rgb(219,229,18)" fg:x="28415" fg:w="6"/><text x="58.6270%" y="863.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (20 samples, 0.04%)</title><rect x="58.3503%" y="933" width="0.0411%" height="15" fill="rgb(217,152,27)" fg:x="28402" fg:w="20"/><text x="58.6003%" y="943.50"></text></g><g><title>do_syscall_64 (17 samples, 0.03%)</title><rect x="58.3564%" y="917" width="0.0349%" height="15" fill="rgb(225,71,47)" fg:x="28405" fg:w="17"/><text x="58.6064%" y="927.50"></text></g><g><title>mio::sys::unix::selector::epoll::Selector::select (31 samples, 0.06%)</title><rect x="58.3400%" y="965" width="0.0637%" height="15" fill="rgb(220,139,14)" fg:x="28397" fg:w="31"/><text x="58.5900%" y="975.50"></text></g><g><title>epoll_wait (30 samples, 0.06%)</title><rect x="58.3421%" y="949" width="0.0616%" height="15" fill="rgb(247,54,32)" fg:x="28398" fg:w="30"/><text x="58.5921%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::runtime::io::scheduled_io::ScheduledIo&gt;&gt; (6 samples, 0.01%)</title><rect x="58.4037%" y="933" width="0.0123%" height="15" fill="rgb(252,131,39)" fg:x="28428" fg:w="6"/><text x="58.6537%" y="943.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.01%)</title><rect x="58.4037%" y="917" width="0.0123%" height="15" fill="rgb(210,108,39)" fg:x="28428" fg:w="6"/><text x="58.6537%" y="927.50"></text></g><g><title>tokio::runtime::io::driver::Handle::release_pending_registrations (7 samples, 0.01%)</title><rect x="58.4037%" y="965" width="0.0144%" height="15" fill="rgb(205,23,29)" fg:x="28428" fg:w="7"/><text x="58.6537%" y="975.50"></text></g><g><title>tokio::runtime::io::registration_set::RegistrationSet::release (7 samples, 0.01%)</title><rect x="58.4037%" y="949" width="0.0144%" height="15" fill="rgb(246,139,46)" fg:x="28428" fg:w="7"/><text x="58.6537%" y="959.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (13 samples, 0.03%)</title><rect x="58.4242%" y="821" width="0.0267%" height="15" fill="rgb(250,81,26)" fg:x="28438" fg:w="13"/><text x="58.6742%" y="831.50"></text></g><g><title>syscall (13 samples, 0.03%)</title><rect x="58.4242%" y="805" width="0.0267%" height="15" fill="rgb(214,104,7)" fg:x="28438" fg:w="13"/><text x="58.6742%" y="815.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (13 samples, 0.03%)</title><rect x="58.4242%" y="789" width="0.0267%" height="15" fill="rgb(233,189,8)" fg:x="28438" fg:w="13"/><text x="58.6742%" y="799.50"></text></g><g><title>do_syscall_64 (11 samples, 0.02%)</title><rect x="58.4284%" y="773" width="0.0226%" height="15" fill="rgb(228,141,17)" fg:x="28440" fg:w="11"/><text x="58.6784%" y="783.50"></text></g><g><title>__x64_sys_futex (11 samples, 0.02%)</title><rect x="58.4284%" y="757" width="0.0226%" height="15" fill="rgb(247,157,1)" fg:x="28440" fg:w="11"/><text x="58.6784%" y="767.50"></text></g><g><title>do_futex (11 samples, 0.02%)</title><rect x="58.4284%" y="741" width="0.0226%" height="15" fill="rgb(249,225,5)" fg:x="28440" fg:w="11"/><text x="58.6784%" y="751.50"></text></g><g><title>futex_wake (11 samples, 0.02%)</title><rect x="58.4284%" y="725" width="0.0226%" height="15" fill="rgb(242,55,13)" fg:x="28440" fg:w="11"/><text x="58.6784%" y="735.50"></text></g><g><title>wake_up_q (11 samples, 0.02%)</title><rect x="58.4284%" y="709" width="0.0226%" height="15" fill="rgb(230,49,50)" fg:x="28440" fg:w="11"/><text x="58.6784%" y="719.50"></text></g><g><title>try_to_wake_up (11 samples, 0.02%)</title><rect x="58.4284%" y="693" width="0.0226%" height="15" fill="rgb(241,111,38)" fg:x="28440" fg:w="11"/><text x="58.6784%" y="703.50"></text></g><g><title>ttwu_do_activate (6 samples, 0.01%)</title><rect x="58.4386%" y="677" width="0.0123%" height="15" fill="rgb(252,155,4)" fg:x="28445" fg:w="6"/><text x="58.6886%" y="687.50"></text></g><g><title>tokio::runtime::park::wake (15 samples, 0.03%)</title><rect x="58.4242%" y="917" width="0.0308%" height="15" fill="rgb(212,69,32)" fg:x="28438" fg:w="15"/><text x="58.6742%" y="927.50"></text></g><g><title>tokio::runtime::park::Inner::unpark (15 samples, 0.03%)</title><rect x="58.4242%" y="901" width="0.0308%" height="15" fill="rgb(243,107,47)" fg:x="28438" fg:w="15"/><text x="58.6742%" y="911.50"></text></g><g><title>tokio::loom::std::parking_lot::Condvar::notify_one (15 samples, 0.03%)</title><rect x="58.4242%" y="885" width="0.0308%" height="15" fill="rgb(247,130,12)" fg:x="28438" fg:w="15"/><text x="58.6742%" y="895.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one (15 samples, 0.03%)</title><rect x="58.4242%" y="869" width="0.0308%" height="15" fill="rgb(233,74,16)" fg:x="28438" fg:w="15"/><text x="58.6742%" y="879.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (15 samples, 0.03%)</title><rect x="58.4242%" y="853" width="0.0308%" height="15" fill="rgb(208,58,18)" fg:x="28438" fg:w="15"/><text x="58.6742%" y="863.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (15 samples, 0.03%)</title><rect x="58.4242%" y="837" width="0.0308%" height="15" fill="rgb(242,225,1)" fg:x="28438" fg:w="15"/><text x="58.6742%" y="847.50"></text></g><g><title>tokio::runtime::time::Driver::park_thread_timeout (61 samples, 0.13%)</title><rect x="58.3359%" y="1061" width="0.1253%" height="15" fill="rgb(249,39,40)" fg:x="28395" fg:w="61"/><text x="58.5859%" y="1071.50"></text></g><g><title>tokio::runtime::driver::IoStack::park_timeout (61 samples, 0.13%)</title><rect x="58.3359%" y="1045" width="0.1253%" height="15" fill="rgb(207,72,44)" fg:x="28395" fg:w="61"/><text x="58.5859%" y="1055.50"></text></g><g><title>tokio::runtime::process::Driver::park_timeout (61 samples, 0.13%)</title><rect x="58.3359%" y="1029" width="0.1253%" height="15" fill="rgb(215,193,12)" fg:x="28395" fg:w="61"/><text x="58.5859%" y="1039.50"></text></g><g><title>tokio::runtime::signal::Driver::park_timeout (60 samples, 0.12%)</title><rect x="58.3380%" y="1013" width="0.1233%" height="15" fill="rgb(248,41,39)" fg:x="28396" fg:w="60"/><text x="58.5880%" y="1023.50"></text></g><g><title>tokio::runtime::io::driver::Driver::park_timeout (60 samples, 0.12%)</title><rect x="58.3380%" y="997" width="0.1233%" height="15" fill="rgb(253,85,4)" fg:x="28396" fg:w="60"/><text x="58.5880%" y="1007.50"></text></g><g><title>tokio::runtime::io::driver::Driver::turn (60 samples, 0.12%)</title><rect x="58.3380%" y="981" width="0.1233%" height="15" fill="rgb(243,70,31)" fg:x="28396" fg:w="60"/><text x="58.5880%" y="991.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::wake (20 samples, 0.04%)</title><rect x="58.4201%" y="965" width="0.0411%" height="15" fill="rgb(253,195,26)" fg:x="28436" fg:w="20"/><text x="58.6701%" y="975.50"></text></g><g><title>tokio::util::wake_list::WakeList::wake_all (18 samples, 0.04%)</title><rect x="58.4242%" y="949" width="0.0370%" height="15" fill="rgb(243,42,11)" fg:x="28438" fg:w="18"/><text x="58.6742%" y="959.50"></text></g><g><title>core::task::wake::Waker::wake (18 samples, 0.04%)</title><rect x="58.4242%" y="933" width="0.0370%" height="15" fill="rgb(239,66,17)" fg:x="28438" fg:w="18"/><text x="58.6742%" y="943.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Parker::park_timeout (72 samples, 0.15%)</title><rect x="58.3154%" y="1093" width="0.1479%" height="15" fill="rgb(217,132,21)" fg:x="28385" fg:w="72"/><text x="58.5654%" y="1103.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal (68 samples, 0.14%)</title><rect x="58.3236%" y="1077" width="0.1397%" height="15" fill="rgb(252,202,21)" fg:x="28389" fg:w="68"/><text x="58.5736%" y="1087.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::maintenance (101 samples, 0.21%)</title><rect x="58.2578%" y="1125" width="0.2075%" height="15" fill="rgb(233,98,36)" fg:x="28357" fg:w="101"/><text x="58.5078%" y="1135.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (73 samples, 0.15%)</title><rect x="58.3154%" y="1109" width="0.1500%" height="15" fill="rgb(216,153,54)" fg:x="28385" fg:w="73"/><text x="58.5654%" y="1119.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (6 samples, 0.01%)</title><rect x="58.5208%" y="1109" width="0.0123%" height="15" fill="rgb(250,99,7)" fg:x="28485" fg:w="6"/><text x="58.7708%" y="1119.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (6 samples, 0.01%)</title><rect x="58.5208%" y="1093" width="0.0123%" height="15" fill="rgb(207,56,50)" fg:x="28485" fg:w="6"/><text x="58.7708%" y="1103.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (6 samples, 0.01%)</title><rect x="58.5208%" y="1077" width="0.0123%" height="15" fill="rgb(244,61,34)" fg:x="28485" fg:w="6"/><text x="58.7708%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tokio::runtime::scheduler::multi_thread::park::Parker&gt;&gt; (6 samples, 0.01%)</title><rect x="58.5701%" y="1093" width="0.0123%" height="15" fill="rgb(241,50,38)" fg:x="28509" fg:w="6"/><text x="58.8201%" y="1103.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (12 samples, 0.02%)</title><rect x="58.5824%" y="1077" width="0.0247%" height="15" fill="rgb(212,166,30)" fg:x="28515" fg:w="12"/><text x="58.8324%" y="1087.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (12 samples, 0.02%)</title><rect x="58.5824%" y="1061" width="0.0247%" height="15" fill="rgb(249,127,32)" fg:x="28515" fg:w="12"/><text x="58.8324%" y="1071.50"></text></g><g><title>core::cell::BorrowRefMut::new (12 samples, 0.02%)</title><rect x="58.5824%" y="1045" width="0.0247%" height="15" fill="rgb(209,103,0)" fg:x="28515" fg:w="12"/><text x="58.8324%" y="1055.50"></text></g><g><title>tokio::runtime::scheduler::defer::Defer::wake (15 samples, 0.03%)</title><rect x="58.5824%" y="1093" width="0.0308%" height="15" fill="rgb(238,209,51)" fg:x="28515" fg:w="15"/><text x="58.8324%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::util::try_lock::LockGuard&lt;tokio::runtime::driver::Driver&gt;&gt; (5 samples, 0.01%)</title><rect x="58.6194%" y="1061" width="0.0103%" height="15" fill="rgb(237,56,23)" fg:x="28533" fg:w="5"/><text x="58.8694%" y="1071.50"></text></g><g><title>&lt;tokio::util::try_lock::LockGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="58.6194%" y="1045" width="0.0103%" height="15" fill="rgb(215,153,46)" fg:x="28533" fg:w="5"/><text x="58.8694%" y="1055.50"></text></g><g><title>core::sync::atomic::AtomicBool::store (5 samples, 0.01%)</title><rect x="58.6194%" y="1029" width="0.0103%" height="15" fill="rgb(224,49,31)" fg:x="28533" fg:w="5"/><text x="58.8694%" y="1039.50"></text></g><g><title>core::sync::atomic::atomic_store (5 samples, 0.01%)</title><rect x="58.6194%" y="1013" width="0.0103%" height="15" fill="rgb(250,18,42)" fg:x="28533" fg:w="5"/><text x="58.8694%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (13 samples, 0.03%)</title><rect x="58.6297%" y="1061" width="0.0267%" height="15" fill="rgb(215,176,39)" fg:x="28538" fg:w="13"/><text x="58.8797%" y="1071.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (13 samples, 0.03%)</title><rect x="58.6297%" y="1045" width="0.0267%" height="15" fill="rgb(223,77,29)" fg:x="28538" fg:w="13"/><text x="58.8797%" y="1055.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (11 samples, 0.02%)</title><rect x="58.6646%" y="1045" width="0.0226%" height="15" fill="rgb(234,94,52)" fg:x="28555" fg:w="11"/><text x="58.9146%" y="1055.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (11 samples, 0.02%)</title><rect x="58.6646%" y="1029" width="0.0226%" height="15" fill="rgb(220,154,50)" fg:x="28555" fg:w="11"/><text x="58.9146%" y="1039.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (12 samples, 0.02%)</title><rect x="58.6872%" y="997" width="0.0247%" height="15" fill="rgb(212,11,10)" fg:x="28566" fg:w="12"/><text x="58.9372%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (12 samples, 0.02%)</title><rect x="58.6872%" y="981" width="0.0247%" height="15" fill="rgb(205,166,19)" fg:x="28566" fg:w="12"/><text x="58.9372%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (12 samples, 0.02%)</title><rect x="58.6872%" y="965" width="0.0247%" height="15" fill="rgb(244,198,16)" fg:x="28566" fg:w="12"/><text x="58.9372%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicI32::load (20 samples, 0.04%)</title><rect x="58.7180%" y="933" width="0.0411%" height="15" fill="rgb(219,69,12)" fg:x="28581" fg:w="20"/><text x="58.9680%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_load (20 samples, 0.04%)</title><rect x="58.7180%" y="917" width="0.0411%" height="15" fill="rgb(245,30,7)" fg:x="28581" fg:w="20"/><text x="58.9680%" y="927.50"></text></g><g><title>__switch_to_asm (9 samples, 0.02%)</title><rect x="58.8002%" y="901" width="0.0185%" height="15" fill="rgb(218,221,48)" fg:x="28621" fg:w="9"/><text x="59.0502%" y="911.50"></text></g><g><title>entry_SYSCALL_64 (6 samples, 0.01%)</title><rect x="58.8228%" y="901" width="0.0123%" height="15" fill="rgb(216,66,15)" fg:x="28632" fg:w="6"/><text x="59.0728%" y="911.50"></text></g><g><title>__futex_queue (10 samples, 0.02%)</title><rect x="59.0550%" y="805" width="0.0205%" height="15" fill="rgb(226,122,50)" fg:x="28745" fg:w="10"/><text x="59.3050%" y="815.50"></text></g><g><title>plist_add (6 samples, 0.01%)</title><rect x="59.0632%" y="789" width="0.0123%" height="15" fill="rgb(239,156,16)" fg:x="28749" fg:w="6"/><text x="59.3132%" y="799.50"></text></g><g><title>_raw_spin_unlock (6 samples, 0.01%)</title><rect x="59.0755%" y="805" width="0.0123%" height="15" fill="rgb(224,27,38)" fg:x="28755" fg:w="6"/><text x="59.3255%" y="815.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (6 samples, 0.01%)</title><rect x="59.2378%" y="757" width="0.0123%" height="15" fill="rgb(224,39,27)" fg:x="28834" fg:w="6"/><text x="59.4878%" y="767.50"></text></g><g><title>native_write_msr (5 samples, 0.01%)</title><rect x="59.2399%" y="741" width="0.0103%" height="15" fill="rgb(215,92,29)" fg:x="28835" fg:w="5"/><text x="59.4899%" y="751.50"></text></g><g><title>__perf_event_task_sched_out (30 samples, 0.06%)</title><rect x="59.2049%" y="773" width="0.0616%" height="15" fill="rgb(207,159,16)" fg:x="28818" fg:w="30"/><text x="59.4549%" y="783.50"></text></g><g><title>__switch_to (5 samples, 0.01%)</title><rect x="59.2666%" y="773" width="0.0103%" height="15" fill="rgb(238,163,47)" fg:x="28848" fg:w="5"/><text x="59.5166%" y="783.50"></text></g><g><title>_raw_spin_lock (19 samples, 0.04%)</title><rect x="59.2789%" y="773" width="0.0390%" height="15" fill="rgb(219,91,49)" fg:x="28854" fg:w="19"/><text x="59.5289%" y="783.50"></text></g><g><title>native_queued_spin_lock_slowpath (17 samples, 0.03%)</title><rect x="59.2830%" y="757" width="0.0349%" height="15" fill="rgb(227,167,31)" fg:x="28856" fg:w="17"/><text x="59.5330%" y="767.50"></text></g><g><title>__list_del_entry_valid (5 samples, 0.01%)</title><rect x="59.4186%" y="741" width="0.0103%" height="15" fill="rgb(234,80,54)" fg:x="28922" fg:w="5"/><text x="59.6686%" y="751.50"></text></g><g><title>update_cfs_group (14 samples, 0.03%)</title><rect x="59.4412%" y="741" width="0.0288%" height="15" fill="rgb(212,114,2)" fg:x="28933" fg:w="14"/><text x="59.6912%" y="751.50"></text></g><g><title>__calc_delta (5 samples, 0.01%)</title><rect x="59.5090%" y="725" width="0.0103%" height="15" fill="rgb(234,50,24)" fg:x="28966" fg:w="5"/><text x="59.7590%" y="735.50"></text></g><g><title>__cgroup_account_cputime (5 samples, 0.01%)</title><rect x="59.5193%" y="725" width="0.0103%" height="15" fill="rgb(221,68,8)" fg:x="28971" fg:w="5"/><text x="59.7693%" y="735.50"></text></g><g><title>cpuacct_charge (12 samples, 0.02%)</title><rect x="59.5295%" y="725" width="0.0247%" height="15" fill="rgb(254,180,31)" fg:x="28976" fg:w="12"/><text x="59.7795%" y="735.50"></text></g><g><title>update_curr (45 samples, 0.09%)</title><rect x="59.4700%" y="741" width="0.0924%" height="15" fill="rgb(247,130,50)" fg:x="28947" fg:w="45"/><text x="59.7200%" y="751.50"></text></g><g><title>__update_load_avg_cfs_rq (7 samples, 0.01%)</title><rect x="59.5871%" y="725" width="0.0144%" height="15" fill="rgb(211,109,4)" fg:x="29004" fg:w="7"/><text x="59.8371%" y="735.50"></text></g><g><title>update_load_avg (25 samples, 0.05%)</title><rect x="59.5624%" y="741" width="0.0514%" height="15" fill="rgb(238,50,21)" fg:x="28992" fg:w="25"/><text x="59.8124%" y="751.50"></text></g><g><title>__update_load_avg_se (6 samples, 0.01%)</title><rect x="59.6014%" y="725" width="0.0123%" height="15" fill="rgb(225,57,45)" fg:x="29011" fg:w="6"/><text x="59.8514%" y="735.50"></text></g><g><title>dequeue_entity (116 samples, 0.24%)</title><rect x="59.3816%" y="757" width="0.2383%" height="15" fill="rgb(209,196,50)" fg:x="28904" fg:w="116"/><text x="59.6316%" y="767.50"></text></g><g><title>__calc_delta (14 samples, 0.03%)</title><rect x="59.6651%" y="725" width="0.0288%" height="15" fill="rgb(242,140,13)" fg:x="29042" fg:w="14"/><text x="59.9151%" y="735.50"></text></g><g><title>reweight_entity (37 samples, 0.08%)</title><rect x="59.6199%" y="757" width="0.0760%" height="15" fill="rgb(217,111,7)" fg:x="29020" fg:w="37"/><text x="59.8699%" y="767.50"></text></g><g><title>update_curr (18 samples, 0.04%)</title><rect x="59.6590%" y="741" width="0.0370%" height="15" fill="rgb(253,193,51)" fg:x="29039" fg:w="18"/><text x="59.9090%" y="751.50"></text></g><g><title>set_next_buddy (20 samples, 0.04%)</title><rect x="59.6959%" y="757" width="0.0411%" height="15" fill="rgb(252,70,29)" fg:x="29057" fg:w="20"/><text x="59.9459%" y="767.50"></text></g><g><title>update_cfs_group (25 samples, 0.05%)</title><rect x="59.7370%" y="757" width="0.0514%" height="15" fill="rgb(232,127,12)" fg:x="29077" fg:w="25"/><text x="59.9870%" y="767.50"></text></g><g><title>__update_load_avg_cfs_rq (7 samples, 0.01%)</title><rect x="59.8274%" y="741" width="0.0144%" height="15" fill="rgb(211,180,21)" fg:x="29121" fg:w="7"/><text x="60.0774%" y="751.50"></text></g><g><title>dequeue_task_fair (267 samples, 0.55%)</title><rect x="59.3179%" y="773" width="0.5485%" height="15" fill="rgb(229,72,13)" fg:x="28873" fg:w="267"/><text x="59.5679%" y="783.50"></text></g><g><title>update_load_avg (38 samples, 0.08%)</title><rect x="59.7884%" y="757" width="0.0781%" height="15" fill="rgb(240,211,49)" fg:x="29102" fg:w="38"/><text x="60.0384%" y="767.50"></text></g><g><title>__update_load_avg_se (12 samples, 0.02%)</title><rect x="59.8418%" y="741" width="0.0247%" height="15" fill="rgb(219,149,40)" fg:x="29128" fg:w="12"/><text x="60.0918%" y="751.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (98 samples, 0.20%)</title><rect x="59.9158%" y="741" width="0.2013%" height="15" fill="rgb(210,127,46)" fg:x="29164" fg:w="98"/><text x="60.1658%" y="751.50"></text></g><g><title>native_write_msr (97 samples, 0.20%)</title><rect x="59.9178%" y="725" width="0.1993%" height="15" fill="rgb(220,106,7)" fg:x="29165" fg:w="97"/><text x="60.1678%" y="735.50"></text></g><g><title>__perf_event_task_sched_in (112 samples, 0.23%)</title><rect x="59.8911%" y="757" width="0.2301%" height="15" fill="rgb(249,31,22)" fg:x="29152" fg:w="112"/><text x="60.1411%" y="767.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (5 samples, 0.01%)</title><rect x="60.1233%" y="757" width="0.0103%" height="15" fill="rgb(253,1,49)" fg:x="29265" fg:w="5"/><text x="60.3733%" y="767.50"></text></g><g><title>sysvec_apic_timer_interrupt (5 samples, 0.01%)</title><rect x="60.1233%" y="741" width="0.0103%" height="15" fill="rgb(227,144,33)" fg:x="29265" fg:w="5"/><text x="60.3733%" y="751.50"></text></g><g><title>finish_task_switch.isra.0 (135 samples, 0.28%)</title><rect x="59.8665%" y="773" width="0.2773%" height="15" fill="rgb(249,163,44)" fg:x="29140" fg:w="135"/><text x="60.1165%" y="783.50"></text></g><g><title>_raw_spin_rq_lock_irqsave (7 samples, 0.01%)</title><rect x="60.2157%" y="725" width="0.0144%" height="15" fill="rgb(234,15,39)" fg:x="29310" fg:w="7"/><text x="60.4657%" y="735.50"></text></g><g><title>raw_spin_rq_lock_nested (7 samples, 0.01%)</title><rect x="60.2157%" y="709" width="0.0144%" height="15" fill="rgb(207,66,16)" fg:x="29310" fg:w="7"/><text x="60.4657%" y="719.50"></text></g><g><title>_raw_spin_lock (7 samples, 0.01%)</title><rect x="60.2157%" y="693" width="0.0144%" height="15" fill="rgb(233,112,24)" fg:x="29310" fg:w="7"/><text x="60.4657%" y="703.50"></text></g><g><title>native_queued_spin_lock_slowpath (7 samples, 0.01%)</title><rect x="60.2157%" y="677" width="0.0144%" height="15" fill="rgb(230,90,22)" fg:x="29310" fg:w="7"/><text x="60.4657%" y="687.50"></text></g><g><title>enqueue_task_fair (9 samples, 0.02%)</title><rect x="60.2322%" y="709" width="0.0185%" height="15" fill="rgb(229,61,13)" fg:x="29318" fg:w="9"/><text x="60.4822%" y="719.50"></text></g><g><title>enqueue_entity (9 samples, 0.02%)</title><rect x="60.2322%" y="693" width="0.0185%" height="15" fill="rgb(225,57,24)" fg:x="29318" fg:w="9"/><text x="60.4822%" y="703.50"></text></g><g><title>activate_task (16 samples, 0.03%)</title><rect x="60.2301%" y="725" width="0.0329%" height="15" fill="rgb(208,169,48)" fg:x="29317" fg:w="16"/><text x="60.4801%" y="735.50"></text></g><g><title>psi_task_change (6 samples, 0.01%)</title><rect x="60.2506%" y="709" width="0.0123%" height="15" fill="rgb(244,218,51)" fg:x="29327" fg:w="6"/><text x="60.5006%" y="719.50"></text></g><g><title>psi_group_change (5 samples, 0.01%)</title><rect x="60.2527%" y="693" width="0.0103%" height="15" fill="rgb(214,148,10)" fg:x="29328" fg:w="5"/><text x="60.5027%" y="703.50"></text></g><g><title>dequeue_entity (5 samples, 0.01%)</title><rect x="60.2753%" y="709" width="0.0103%" height="15" fill="rgb(225,174,27)" fg:x="29339" fg:w="5"/><text x="60.5253%" y="719.50"></text></g><g><title>dequeue_task_fair (11 samples, 0.02%)</title><rect x="60.2732%" y="725" width="0.0226%" height="15" fill="rgb(230,96,26)" fg:x="29338" fg:w="11"/><text x="60.5232%" y="735.50"></text></g><g><title>find_busiest_group (23 samples, 0.05%)</title><rect x="60.2958%" y="725" width="0.0473%" height="15" fill="rgb(232,10,30)" fg:x="29349" fg:w="23"/><text x="60.5458%" y="735.50"></text></g><g><title>update_sd_lb_stats.constprop.0 (23 samples, 0.05%)</title><rect x="60.2958%" y="709" width="0.0473%" height="15" fill="rgb(222,8,50)" fg:x="29349" fg:w="23"/><text x="60.5458%" y="719.50"></text></g><g><title>load_balance (77 samples, 0.16%)</title><rect x="60.1972%" y="741" width="0.1582%" height="15" fill="rgb(213,81,27)" fg:x="29301" fg:w="77"/><text x="60.4472%" y="751.50"></text></g><g><title>__update_load_avg_cfs_rq (6 samples, 0.01%)</title><rect x="60.3986%" y="725" width="0.0123%" height="15" fill="rgb(245,50,10)" fg:x="29399" fg:w="6"/><text x="60.6486%" y="735.50"></text></g><g><title>newidle_balance (128 samples, 0.26%)</title><rect x="60.1767%" y="757" width="0.2630%" height="15" fill="rgb(216,100,18)" fg:x="29291" fg:w="128"/><text x="60.4267%" y="767.50"></text></g><g><title>update_blocked_averages (39 samples, 0.08%)</title><rect x="60.3595%" y="741" width="0.0801%" height="15" fill="rgb(236,147,54)" fg:x="29380" fg:w="39"/><text x="60.6095%" y="751.50"></text></g><g><title>pick_next_entity (6 samples, 0.01%)</title><rect x="60.4397%" y="757" width="0.0123%" height="15" fill="rgb(205,143,26)" fg:x="29419" fg:w="6"/><text x="60.6897%" y="767.50"></text></g><g><title>put_prev_entity (6 samples, 0.01%)</title><rect x="60.4520%" y="757" width="0.0123%" height="15" fill="rgb(236,26,9)" fg:x="29425" fg:w="6"/><text x="60.7020%" y="767.50"></text></g><g><title>check_spread.isra.0 (5 samples, 0.01%)</title><rect x="60.4540%" y="741" width="0.0103%" height="15" fill="rgb(221,165,53)" fg:x="29426" fg:w="5"/><text x="60.7040%" y="751.50"></text></g><g><title>set_next_entity (23 samples, 0.05%)</title><rect x="60.4643%" y="757" width="0.0473%" height="15" fill="rgb(214,110,17)" fg:x="29431" fg:w="23"/><text x="60.7143%" y="767.50"></text></g><g><title>update_load_avg (8 samples, 0.02%)</title><rect x="60.4951%" y="741" width="0.0164%" height="15" fill="rgb(237,197,12)" fg:x="29446" fg:w="8"/><text x="60.7451%" y="751.50"></text></g><g><title>pick_next_task_fair (180 samples, 0.37%)</title><rect x="60.1438%" y="773" width="0.3698%" height="15" fill="rgb(205,84,17)" fg:x="29275" fg:w="180"/><text x="60.3938%" y="783.50"></text></g><g><title>pick_next_task_idle (9 samples, 0.02%)</title><rect x="60.5136%" y="773" width="0.0185%" height="15" fill="rgb(237,18,45)" fg:x="29455" fg:w="9"/><text x="60.7636%" y="783.50"></text></g><g><title>__update_idle_core (8 samples, 0.02%)</title><rect x="60.5157%" y="757" width="0.0164%" height="15" fill="rgb(221,87,14)" fg:x="29456" fg:w="8"/><text x="60.7657%" y="767.50"></text></g><g><title>psi_group_change (94 samples, 0.19%)</title><rect x="60.5896%" y="757" width="0.1931%" height="15" fill="rgb(238,186,15)" fg:x="29492" fg:w="94"/><text x="60.8396%" y="767.50"></text></g><g><title>record_times (7 samples, 0.01%)</title><rect x="60.7684%" y="741" width="0.0144%" height="15" fill="rgb(208,115,11)" fg:x="29579" fg:w="7"/><text x="61.0184%" y="751.50"></text></g><g><title>psi_task_switch (127 samples, 0.26%)</title><rect x="60.5321%" y="773" width="0.2609%" height="15" fill="rgb(254,175,0)" fg:x="29464" fg:w="127"/><text x="60.7821%" y="783.50"></text></g><g><title>sched_clock_cpu (5 samples, 0.01%)</title><rect x="60.7827%" y="757" width="0.0103%" height="15" fill="rgb(227,24,42)" fg:x="29586" fg:w="5"/><text x="61.0327%" y="767.50"></text></g><g><title>put_prev_task_fair (11 samples, 0.02%)</title><rect x="60.7930%" y="773" width="0.0226%" height="15" fill="rgb(223,211,37)" fg:x="29591" fg:w="11"/><text x="61.0430%" y="783.50"></text></g><g><title>put_prev_entity (8 samples, 0.02%)</title><rect x="60.7992%" y="757" width="0.0164%" height="15" fill="rgb(235,49,27)" fg:x="29594" fg:w="8"/><text x="61.0492%" y="767.50"></text></g><g><title>rcu_note_context_switch (5 samples, 0.01%)</title><rect x="60.8156%" y="773" width="0.0103%" height="15" fill="rgb(254,97,51)" fg:x="29602" fg:w="5"/><text x="61.0656%" y="783.50"></text></g><g><title>futex_wait_queue (885 samples, 1.82%)</title><rect x="59.0344%" y="821" width="1.8182%" height="15" fill="rgb(249,51,40)" fg:x="28735" fg:w="885"/><text x="59.2844%" y="831.50">f..</text></g><g><title>schedule (859 samples, 1.76%)</title><rect x="59.0878%" y="805" width="1.7648%" height="15" fill="rgb(210,128,45)" fg:x="28761" fg:w="859"/><text x="59.3378%" y="815.50"></text></g><g><title>__schedule (847 samples, 1.74%)</title><rect x="59.1125%" y="789" width="1.7401%" height="15" fill="rgb(224,137,50)" fg:x="28773" fg:w="847"/><text x="59.3625%" y="799.50"></text></g><g><title>update_rq_clock (9 samples, 0.02%)</title><rect x="60.8341%" y="773" width="0.0185%" height="15" fill="rgb(242,15,9)" fg:x="29611" fg:w="9"/><text x="61.0841%" y="783.50"></text></g><g><title>sched_clock_cpu (6 samples, 0.01%)</title><rect x="60.8403%" y="757" width="0.0123%" height="15" fill="rgb(233,187,41)" fg:x="29614" fg:w="6"/><text x="61.0903%" y="767.50"></text></g><g><title>native_sched_clock (5 samples, 0.01%)</title><rect x="60.8423%" y="741" width="0.0103%" height="15" fill="rgb(227,2,29)" fg:x="29615" fg:w="5"/><text x="61.0923%" y="751.50"></text></g><g><title>futex_get_value_locked (7 samples, 0.01%)</title><rect x="60.8649%" y="805" width="0.0144%" height="15" fill="rgb(222,70,3)" fg:x="29626" fg:w="7"/><text x="61.1149%" y="815.50"></text></g><g><title>futex_q_lock (22 samples, 0.05%)</title><rect x="60.8793%" y="805" width="0.0452%" height="15" fill="rgb(213,11,42)" fg:x="29633" fg:w="22"/><text x="61.1293%" y="815.50"></text></g><g><title>__x64_sys_futex (979 samples, 2.01%)</title><rect x="58.9276%" y="869" width="2.0113%" height="15" fill="rgb(225,150,9)" fg:x="28683" fg:w="979"/><text x="59.1776%" y="879.50">_..</text></g><g><title>do_futex (966 samples, 1.98%)</title><rect x="58.9543%" y="853" width="1.9846%" height="15" fill="rgb(230,162,45)" fg:x="28696" fg:w="966"/><text x="59.2043%" y="863.50">d..</text></g><g><title>futex_wait (954 samples, 1.96%)</title><rect x="58.9789%" y="837" width="1.9599%" height="15" fill="rgb(222,14,52)" fg:x="28708" fg:w="954"/><text x="59.2289%" y="847.50">f..</text></g><g><title>futex_wait_setup (42 samples, 0.09%)</title><rect x="60.8526%" y="821" width="0.0863%" height="15" fill="rgb(254,198,14)" fg:x="29620" fg:w="42"/><text x="61.1026%" y="831.50"></text></g><g><title>get_futex_key (7 samples, 0.01%)</title><rect x="60.9245%" y="805" width="0.0144%" height="15" fill="rgb(220,217,30)" fg:x="29655" fg:w="7"/><text x="61.1745%" y="815.50"></text></g><g><title>syscall_enter_from_user_mode (5 samples, 0.01%)</title><rect x="60.9389%" y="869" width="0.0103%" height="15" fill="rgb(215,146,41)" fg:x="29662" fg:w="5"/><text x="61.1889%" y="879.50"></text></g><g><title>__get_user_8 (16 samples, 0.03%)</title><rect x="61.0128%" y="821" width="0.0329%" height="15" fill="rgb(217,27,36)" fg:x="29698" fg:w="16"/><text x="61.2628%" y="831.50"></text></g><g><title>__rseq_handle_notify_resume (28 samples, 0.06%)</title><rect x="60.9902%" y="837" width="0.0575%" height="15" fill="rgb(219,218,39)" fg:x="29687" fg:w="28"/><text x="61.2402%" y="847.50"></text></g><g><title>exit_to_user_mode_prepare (80 samples, 0.16%)</title><rect x="60.9615%" y="853" width="0.1644%" height="15" fill="rgb(219,4,42)" fg:x="29673" fg:w="80"/><text x="61.2115%" y="863.50"></text></g><g><title>switch_fpu_return (30 samples, 0.06%)</title><rect x="61.0642%" y="837" width="0.0616%" height="15" fill="rgb(249,119,36)" fg:x="29723" fg:w="30"/><text x="61.3142%" y="847.50"></text></g><g><title>restore_fpregs_from_fpstate (21 samples, 0.04%)</title><rect x="61.0827%" y="821" width="0.0431%" height="15" fill="rgb(209,23,33)" fg:x="29732" fg:w="21"/><text x="61.3327%" y="831.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1,116 samples, 2.29%)</title><rect x="58.8351%" y="901" width="2.2928%" height="15" fill="rgb(211,10,0)" fg:x="28638" fg:w="1116"/><text x="59.0851%" y="911.50">e..</text></g><g><title>do_syscall_64 (1,076 samples, 2.21%)</title><rect x="58.9173%" y="885" width="2.2106%" height="15" fill="rgb(208,99,37)" fg:x="28678" fg:w="1076"/><text x="59.1673%" y="895.50">d..</text></g><g><title>syscall_exit_to_user_mode (87 samples, 0.18%)</title><rect x="60.9492%" y="869" width="0.1787%" height="15" fill="rgb(213,132,31)" fg:x="29667" fg:w="87"/><text x="61.1992%" y="879.50"></text></g><g><title>save_fpregs_to_fpstate (8 samples, 0.02%)</title><rect x="61.1320%" y="901" width="0.0164%" height="15" fill="rgb(243,129,40)" fg:x="29756" fg:w="8"/><text x="61.3820%" y="911.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (1,255 samples, 2.58%)</title><rect x="58.7160%" y="949" width="2.5783%" height="15" fill="rgb(210,66,33)" fg:x="28580" fg:w="1255"/><text x="58.9660%" y="959.50">&lt;p..</text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (1,234 samples, 2.54%)</title><rect x="58.7591%" y="933" width="2.5352%" height="15" fill="rgb(209,189,4)" fg:x="28601" fg:w="1234"/><text x="59.0091%" y="943.50">pa..</text></g><g><title>syscall (1,234 samples, 2.54%)</title><rect x="58.7591%" y="917" width="2.5352%" height="15" fill="rgb(214,107,37)" fg:x="28601" fg:w="1234"/><text x="59.0091%" y="927.50">sy..</text></g><g><title>syscall_return_via_sysret (71 samples, 0.15%)</title><rect x="61.1484%" y="901" width="0.1459%" height="15" fill="rgb(245,88,54)" fg:x="29764" fg:w="71"/><text x="61.3984%" y="911.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket (12 samples, 0.02%)</title><rect x="61.3025%" y="949" width="0.0247%" height="15" fill="rgb(205,146,20)" fg:x="29839" fg:w="12"/><text x="61.5525%" y="959.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock (6 samples, 0.01%)</title><rect x="61.3148%" y="933" width="0.0123%" height="15" fill="rgb(220,161,25)" fg:x="29845" fg:w="6"/><text x="61.5648%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (6 samples, 0.01%)</title><rect x="61.3148%" y="917" width="0.0123%" height="15" fill="rgb(215,152,15)" fg:x="29845" fg:w="6"/><text x="61.5648%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (6 samples, 0.01%)</title><rect x="61.3148%" y="901" width="0.0123%" height="15" fill="rgb(233,192,44)" fg:x="29845" fg:w="6"/><text x="61.5648%" y="911.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (1,274 samples, 2.62%)</title><rect x="58.7139%" y="965" width="2.6174%" height="15" fill="rgb(240,170,46)" fg:x="28579" fg:w="1274"/><text x="58.9639%" y="975.50">pa..</text></g><g><title>tokio::loom::std::parking_lot::Condvar::wait (1,288 samples, 2.65%)</title><rect x="58.6872%" y="1045" width="2.6461%" height="15" fill="rgb(207,104,33)" fg:x="28566" fg:w="1288"/><text x="58.9372%" y="1055.50">to..</text></g><g><title>parking_lot::condvar::Condvar::wait (1,288 samples, 2.65%)</title><rect x="58.6872%" y="1029" width="2.6461%" height="15" fill="rgb(219,21,39)" fg:x="28566" fg:w="1288"/><text x="58.9372%" y="1039.50">pa..</text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (1,288 samples, 2.65%)</title><rect x="58.6872%" y="1013" width="2.6461%" height="15" fill="rgb(214,133,29)" fg:x="28566" fg:w="1288"/><text x="58.9372%" y="1023.50">pa..</text></g><g><title>parking_lot_core::parking_lot::park (1,276 samples, 2.62%)</title><rect x="58.7119%" y="997" width="2.6215%" height="15" fill="rgb(226,93,6)" fg:x="28578" fg:w="1276"/><text x="58.9619%" y="1007.50">pa..</text></g><g><title>parking_lot_core::parking_lot::with_thread_data (1,276 samples, 2.62%)</title><rect x="58.7119%" y="981" width="2.6215%" height="15" fill="rgb(252,222,34)" fg:x="28578" fg:w="1276"/><text x="58.9619%" y="991.50">pa..</text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park_condvar (1,309 samples, 2.69%)</title><rect x="58.6564%" y="1061" width="2.6893%" height="15" fill="rgb(252,92,48)" fg:x="28551" fg:w="1309"/><text x="58.9064%" y="1071.50">to..</text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (6 samples, 0.01%)</title><rect x="61.3333%" y="1045" width="0.0123%" height="15" fill="rgb(245,223,24)" fg:x="29854" fg:w="6"/><text x="61.5833%" y="1055.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (7 samples, 0.01%)</title><rect x="61.3662%" y="1045" width="0.0144%" height="15" fill="rgb(205,176,3)" fg:x="29870" fg:w="7"/><text x="61.6162%" y="1055.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (7 samples, 0.01%)</title><rect x="61.3662%" y="1029" width="0.0144%" height="15" fill="rgb(235,151,15)" fg:x="29870" fg:w="7"/><text x="61.6162%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (14 samples, 0.03%)</title><rect x="61.3806%" y="1045" width="0.0288%" height="15" fill="rgb(237,209,11)" fg:x="29877" fg:w="14"/><text x="61.6306%" y="1055.50"></text></g><g><title>core::sync::atomic::atomic_swap (14 samples, 0.03%)</title><rect x="61.3806%" y="1029" width="0.0288%" height="15" fill="rgb(243,227,24)" fg:x="29877" fg:w="14"/><text x="61.6306%" y="1039.50"></text></g><g><title>core::array::&lt;impl core::default::Default for [T: 32]&gt;::default (11 samples, 0.02%)</title><rect x="61.4258%" y="1029" width="0.0226%" height="15" fill="rgb(239,193,16)" fg:x="29899" fg:w="11"/><text x="61.6758%" y="1039.50"></text></g><g><title>core::mem::drop (6 samples, 0.01%)</title><rect x="61.4484%" y="1029" width="0.0123%" height="15" fill="rgb(231,27,9)" fg:x="29910" fg:w="6"/><text x="61.6984%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::time::InnerState&gt;&gt; (6 samples, 0.01%)</title><rect x="61.4484%" y="1013" width="0.0123%" height="15" fill="rgb(219,169,10)" fg:x="29910" fg:w="6"/><text x="61.6984%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::time::InnerState&gt;&gt; (6 samples, 0.01%)</title><rect x="61.4484%" y="997" width="0.0123%" height="15" fill="rgb(244,229,43)" fg:x="29910" fg:w="6"/><text x="61.6984%" y="1007.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.01%)</title><rect x="61.4484%" y="981" width="0.0123%" height="15" fill="rgb(254,38,20)" fg:x="29910" fg:w="6"/><text x="61.6984%" y="991.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (6 samples, 0.01%)</title><rect x="61.4484%" y="965" width="0.0123%" height="15" fill="rgb(250,47,30)" fg:x="29910" fg:w="6"/><text x="61.6984%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (6 samples, 0.01%)</title><rect x="61.4484%" y="949" width="0.0123%" height="15" fill="rgb(224,124,36)" fg:x="29910" fg:w="6"/><text x="61.6984%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (6 samples, 0.01%)</title><rect x="61.4484%" y="933" width="0.0123%" height="15" fill="rgb(246,68,51)" fg:x="29910" fg:w="6"/><text x="61.6984%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;[core::option::Option&lt;core::task::wake::Waker&gt;: 32]&gt; (37 samples, 0.08%)</title><rect x="61.4607%" y="1029" width="0.0760%" height="15" fill="rgb(253,43,49)" fg:x="29916" fg:w="37"/><text x="61.7107%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (5 samples, 0.01%)</title><rect x="61.5265%" y="1013" width="0.0103%" height="15" fill="rgb(219,54,36)" fg:x="29948" fg:w="5"/><text x="61.7765%" y="1023.50"></text></g><g><title>tokio::runtime::time::Inner::lock (18 samples, 0.04%)</title><rect x="61.5367%" y="1029" width="0.0370%" height="15" fill="rgb(227,133,34)" fg:x="29953" fg:w="18"/><text x="61.7867%" y="1039.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (18 samples, 0.04%)</title><rect x="61.5367%" y="1013" width="0.0370%" height="15" fill="rgb(247,227,15)" fg:x="29953" fg:w="18"/><text x="61.7867%" y="1023.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (18 samples, 0.04%)</title><rect x="61.5367%" y="997" width="0.0370%" height="15" fill="rgb(229,96,14)" fg:x="29953" fg:w="18"/><text x="61.7867%" y="1007.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (18 samples, 0.04%)</title><rect x="61.5367%" y="981" width="0.0370%" height="15" fill="rgb(220,79,17)" fg:x="29953" fg:w="18"/><text x="61.7867%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (17 samples, 0.03%)</title><rect x="61.5388%" y="965" width="0.0349%" height="15" fill="rgb(205,131,53)" fg:x="29954" fg:w="17"/><text x="61.7888%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (17 samples, 0.03%)</title><rect x="61.5388%" y="949" width="0.0349%" height="15" fill="rgb(209,50,29)" fg:x="29954" fg:w="17"/><text x="61.7888%" y="959.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (8 samples, 0.02%)</title><rect x="61.5799%" y="1013" width="0.0164%" height="15" fill="rgb(245,86,46)" fg:x="29974" fg:w="8"/><text x="61.8299%" y="1023.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::poll (12 samples, 0.02%)</title><rect x="61.5758%" y="1029" width="0.0247%" height="15" fill="rgb(235,66,46)" fg:x="29972" fg:w="12"/><text x="61.8258%" y="1039.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time (101 samples, 0.21%)</title><rect x="61.4135%" y="1045" width="0.2075%" height="15" fill="rgb(232,148,31)" fg:x="29893" fg:w="101"/><text x="61.6635%" y="1055.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::poll_at (10 samples, 0.02%)</title><rect x="61.6004%" y="1029" width="0.0205%" height="15" fill="rgb(217,149,8)" fg:x="29984" fg:w="10"/><text x="61.8504%" y="1039.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (8 samples, 0.02%)</title><rect x="61.6045%" y="1013" width="0.0164%" height="15" fill="rgb(209,183,11)" fg:x="29986" fg:w="8"/><text x="61.8545%" y="1023.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (5 samples, 0.01%)</title><rect x="61.6436%" y="1029" width="0.0103%" height="15" fill="rgb(208,55,20)" fg:x="30005" fg:w="5"/><text x="61.8936%" y="1039.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (5 samples, 0.01%)</title><rect x="61.6436%" y="1013" width="0.0103%" height="15" fill="rgb(218,39,14)" fg:x="30005" fg:w="5"/><text x="61.8936%" y="1023.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (5 samples, 0.01%)</title><rect x="61.6436%" y="997" width="0.0103%" height="15" fill="rgb(216,169,33)" fg:x="30005" fg:w="5"/><text x="61.8936%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;alloc::vec::Vec&lt;std::process::Child&gt;&gt;&gt; (6 samples, 0.01%)</title><rect x="61.6538%" y="1013" width="0.0123%" height="15" fill="rgb(233,80,24)" fg:x="30010" fg:w="6"/><text x="61.9038%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,alloc::vec::Vec&lt;std::process::Child&gt;&gt;&gt; (6 samples, 0.01%)</title><rect x="61.6538%" y="997" width="0.0123%" height="15" fill="rgb(213,179,31)" fg:x="30010" fg:w="6"/><text x="61.9038%" y="1007.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.01%)</title><rect x="61.6538%" y="981" width="0.0123%" height="15" fill="rgb(209,19,5)" fg:x="30010" fg:w="6"/><text x="61.9038%" y="991.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (6 samples, 0.01%)</title><rect x="61.6538%" y="965" width="0.0123%" height="15" fill="rgb(219,18,35)" fg:x="30010" fg:w="6"/><text x="61.9038%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (6 samples, 0.01%)</title><rect x="61.6538%" y="949" width="0.0123%" height="15" fill="rgb(209,169,16)" fg:x="30010" fg:w="6"/><text x="61.9038%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (6 samples, 0.01%)</title><rect x="61.6538%" y="933" width="0.0123%" height="15" fill="rgb(245,90,51)" fg:x="30010" fg:w="6"/><text x="61.9038%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;core::option::Option&lt;tokio::sync::watch::Receiver&lt;()&gt;&gt;&gt;&gt; (8 samples, 0.02%)</title><rect x="61.6662%" y="1013" width="0.0164%" height="15" fill="rgb(220,99,45)" fg:x="30016" fg:w="8"/><text x="61.9162%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,core::option::Option&lt;tokio::sync::watch::Receiver&lt;()&gt;&gt;&gt;&gt; (8 samples, 0.02%)</title><rect x="61.6662%" y="997" width="0.0164%" height="15" fill="rgb(249,89,25)" fg:x="30016" fg:w="8"/><text x="61.9162%" y="1007.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.02%)</title><rect x="61.6662%" y="981" width="0.0164%" height="15" fill="rgb(239,193,0)" fg:x="30016" fg:w="8"/><text x="61.9162%" y="991.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (8 samples, 0.02%)</title><rect x="61.6662%" y="965" width="0.0164%" height="15" fill="rgb(231,126,1)" fg:x="30016" fg:w="8"/><text x="61.9162%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (8 samples, 0.02%)</title><rect x="61.6662%" y="949" width="0.0164%" height="15" fill="rgb(243,166,3)" fg:x="30016" fg:w="8"/><text x="61.9162%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (8 samples, 0.02%)</title><rect x="61.6662%" y="933" width="0.0164%" height="15" fill="rgb(223,22,34)" fg:x="30016" fg:w="8"/><text x="61.9162%" y="943.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (8 samples, 0.02%)</title><rect x="61.6826%" y="1013" width="0.0164%" height="15" fill="rgb(251,52,51)" fg:x="30024" fg:w="8"/><text x="61.9326%" y="1023.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (8 samples, 0.02%)</title><rect x="61.6826%" y="997" width="0.0164%" height="15" fill="rgb(221,165,28)" fg:x="30024" fg:w="8"/><text x="61.9326%" y="1007.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (8 samples, 0.02%)</title><rect x="61.6826%" y="981" width="0.0164%" height="15" fill="rgb(218,121,47)" fg:x="30024" fg:w="8"/><text x="61.9326%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (7 samples, 0.01%)</title><rect x="61.6846%" y="965" width="0.0144%" height="15" fill="rgb(209,120,9)" fg:x="30025" fg:w="7"/><text x="61.9346%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (7 samples, 0.01%)</title><rect x="61.6846%" y="949" width="0.0144%" height="15" fill="rgb(236,68,12)" fg:x="30025" fg:w="7"/><text x="61.9346%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (10 samples, 0.02%)</title><rect x="61.7011%" y="965" width="0.0205%" height="15" fill="rgb(225,194,26)" fg:x="30033" fg:w="10"/><text x="61.9511%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (10 samples, 0.02%)</title><rect x="61.7011%" y="949" width="0.0205%" height="15" fill="rgb(231,84,39)" fg:x="30033" fg:w="10"/><text x="61.9511%" y="959.50"></text></g><g><title>tokio::process::imp::orphan::OrphanQueueImpl&lt;T&gt;::reap_orphans (44 samples, 0.09%)</title><rect x="61.6538%" y="1029" width="0.0904%" height="15" fill="rgb(210,11,45)" fg:x="30010" fg:w="44"/><text x="61.9038%" y="1039.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::try_lock (22 samples, 0.05%)</title><rect x="61.6990%" y="1013" width="0.0452%" height="15" fill="rgb(224,54,52)" fg:x="30032" fg:w="22"/><text x="61.9490%" y="1023.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::try_lock (22 samples, 0.05%)</title><rect x="61.6990%" y="997" width="0.0452%" height="15" fill="rgb(238,102,14)" fg:x="30032" fg:w="22"/><text x="61.9490%" y="1007.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::try_lock (22 samples, 0.05%)</title><rect x="61.6990%" y="981" width="0.0452%" height="15" fill="rgb(243,160,52)" fg:x="30032" fg:w="22"/><text x="61.9490%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicU8::load (11 samples, 0.02%)</title><rect x="61.7216%" y="965" width="0.0226%" height="15" fill="rgb(216,114,19)" fg:x="30043" fg:w="11"/><text x="61.9716%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_load (11 samples, 0.02%)</title><rect x="61.7216%" y="949" width="0.0226%" height="15" fill="rgb(244,166,37)" fg:x="30043" fg:w="11"/><text x="61.9716%" y="959.50"></text></g><g><title>tokio::runtime::driver::Handle::time (5 samples, 0.01%)</title><rect x="61.7442%" y="1029" width="0.0103%" height="15" fill="rgb(246,29,44)" fg:x="30054" fg:w="5"/><text x="61.9942%" y="1039.50"></text></g><g><title>&lt;mio::event::events::Iter as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.03%)</title><rect x="61.7874%" y="1013" width="0.0308%" height="15" fill="rgb(215,56,53)" fg:x="30075" fg:w="15"/><text x="62.0374%" y="1023.50"></text></g><g><title>mio::poll::Poll::poll (7 samples, 0.01%)</title><rect x="61.8223%" y="1013" width="0.0144%" height="15" fill="rgb(217,60,2)" fg:x="30092" fg:w="7"/><text x="62.0723%" y="1023.50"></text></g><g><title>__GI___pthread_disable_asynccancel (19 samples, 0.04%)</title><rect x="61.9271%" y="981" width="0.0390%" height="15" fill="rgb(207,26,24)" fg:x="30143" fg:w="19"/><text x="62.1771%" y="991.50"></text></g><g><title>__GI___pthread_disable_asynccancel (17 samples, 0.03%)</title><rect x="61.9312%" y="965" width="0.0349%" height="15" fill="rgb(252,210,15)" fg:x="30145" fg:w="17"/><text x="62.1812%" y="975.50"></text></g><g><title>__GI___pthread_enable_asynccancel (9 samples, 0.02%)</title><rect x="61.9661%" y="981" width="0.0185%" height="15" fill="rgb(253,209,26)" fg:x="30162" fg:w="9"/><text x="62.2161%" y="991.50"></text></g><g><title>__switch_to_asm (13 samples, 0.03%)</title><rect x="61.9928%" y="981" width="0.0267%" height="15" fill="rgb(238,170,14)" fg:x="30175" fg:w="13"/><text x="62.2428%" y="991.50"></text></g><g><title>entry_SYSCALL_64 (35 samples, 0.07%)</title><rect x="62.0257%" y="981" width="0.0719%" height="15" fill="rgb(216,178,15)" fg:x="30191" fg:w="35"/><text x="62.2757%" y="991.50"></text></g><g><title>__fget_light (51 samples, 0.10%)</title><rect x="62.4653%" y="917" width="0.1048%" height="15" fill="rgb(250,197,2)" fg:x="30405" fg:w="51"/><text x="62.7153%" y="927.50"></text></g><g><title>__list_del_entry_valid (8 samples, 0.02%)</title><rect x="62.5722%" y="917" width="0.0164%" height="15" fill="rgb(212,70,42)" fg:x="30457" fg:w="8"/><text x="62.8222%" y="927.50"></text></g><g><title>mutex_spin_on_owner (11 samples, 0.02%)</title><rect x="62.5989%" y="901" width="0.0226%" height="15" fill="rgb(227,213,9)" fg:x="30470" fg:w="11"/><text x="62.8489%" y="911.50"></text></g><g><title>__mutex_lock.constprop.0 (20 samples, 0.04%)</title><rect x="62.5886%" y="917" width="0.0411%" height="15" fill="rgb(245,99,25)" fg:x="30465" fg:w="20"/><text x="62.8386%" y="927.50"></text></g><g><title>__put_user_nocheck_4 (29 samples, 0.06%)</title><rect x="62.6297%" y="917" width="0.0596%" height="15" fill="rgb(250,82,29)" fg:x="30485" fg:w="29"/><text x="62.8797%" y="927.50"></text></g><g><title>__put_user_nocheck_8 (22 samples, 0.05%)</title><rect x="62.6893%" y="917" width="0.0452%" height="15" fill="rgb(241,226,54)" fg:x="30514" fg:w="22"/><text x="62.9393%" y="927.50"></text></g><g><title>_raw_write_lock_irq (15 samples, 0.03%)</title><rect x="62.7345%" y="917" width="0.0308%" height="15" fill="rgb(221,99,41)" fg:x="30536" fg:w="15"/><text x="62.9845%" y="927.50"></text></g><g><title>_raw_write_unlock_irq (7 samples, 0.01%)</title><rect x="62.7653%" y="917" width="0.0144%" height="15" fill="rgb(213,90,21)" fg:x="30551" fg:w="7"/><text x="63.0153%" y="927.50"></text></g><g><title>ep_done_scan (23 samples, 0.05%)</title><rect x="62.7817%" y="917" width="0.0473%" height="15" fill="rgb(205,208,24)" fg:x="30559" fg:w="23"/><text x="63.0317%" y="927.50"></text></g><g><title>_raw_write_lock_irq (8 samples, 0.02%)</title><rect x="62.8125%" y="901" width="0.0164%" height="15" fill="rgb(246,31,12)" fg:x="30574" fg:w="8"/><text x="63.0625%" y="911.50"></text></g><g><title>eventfd_poll (8 samples, 0.02%)</title><rect x="62.9009%" y="901" width="0.0164%" height="15" fill="rgb(213,154,6)" fg:x="30617" fg:w="8"/><text x="63.1509%" y="911.50"></text></g><g><title>ep_item_poll.isra.0 (197 samples, 0.40%)</title><rect x="62.8290%" y="917" width="0.4047%" height="15" fill="rgb(222,163,29)" fg:x="30582" fg:w="197"/><text x="63.0790%" y="927.50"></text></g><g><title>sock_poll (154 samples, 0.32%)</title><rect x="62.9173%" y="901" width="0.3164%" height="15" fill="rgb(227,201,8)" fg:x="30625" fg:w="154"/><text x="63.1673%" y="911.50"></text></g><g><title>tcp_poll (61 samples, 0.13%)</title><rect x="63.1084%" y="885" width="0.1253%" height="15" fill="rgb(233,9,32)" fg:x="30718" fg:w="61"/><text x="63.3584%" y="895.50"></text></g><g><title>tcp_stream_memory_free (5 samples, 0.01%)</title><rect x="63.2234%" y="869" width="0.0103%" height="15" fill="rgb(217,54,24)" fg:x="30774" fg:w="5"/><text x="63.4734%" y="879.50"></text></g><g><title>fput (11 samples, 0.02%)</title><rect x="63.2337%" y="917" width="0.0226%" height="15" fill="rgb(235,192,0)" fg:x="30779" fg:w="11"/><text x="63.4837%" y="927.50"></text></g><g><title>mutex_lock (18 samples, 0.04%)</title><rect x="63.2563%" y="917" width="0.0370%" height="15" fill="rgb(235,45,9)" fg:x="30790" fg:w="18"/><text x="63.5063%" y="927.50"></text></g><g><title>mutex_unlock (6 samples, 0.01%)</title><rect x="63.2933%" y="917" width="0.0123%" height="15" fill="rgb(246,42,40)" fg:x="30808" fg:w="6"/><text x="63.5433%" y="927.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (10 samples, 0.02%)</title><rect x="63.5028%" y="853" width="0.0205%" height="15" fill="rgb(248,111,24)" fg:x="30910" fg:w="10"/><text x="63.7528%" y="863.50"></text></g><g><title>native_write_msr (10 samples, 0.02%)</title><rect x="63.5028%" y="837" width="0.0205%" height="15" fill="rgb(249,65,22)" fg:x="30910" fg:w="10"/><text x="63.7528%" y="847.50"></text></g><g><title>_raw_spin_lock (11 samples, 0.02%)</title><rect x="63.5234%" y="853" width="0.0226%" height="15" fill="rgb(238,111,51)" fg:x="30920" fg:w="11"/><text x="63.7734%" y="863.50"></text></g><g><title>__perf_event_task_sched_out (50 samples, 0.10%)</title><rect x="63.4576%" y="869" width="0.1027%" height="15" fill="rgb(250,118,22)" fg:x="30888" fg:w="50"/><text x="63.7076%" y="879.50"></text></g><g><title>_raw_spin_lock (16 samples, 0.03%)</title><rect x="63.5624%" y="869" width="0.0329%" height="15" fill="rgb(234,84,26)" fg:x="30939" fg:w="16"/><text x="63.8124%" y="879.50"></text></g><g><title>native_queued_spin_lock_slowpath (12 samples, 0.02%)</title><rect x="63.5706%" y="853" width="0.0247%" height="15" fill="rgb(243,172,12)" fg:x="30943" fg:w="12"/><text x="63.8206%" y="863.50"></text></g><g><title>reweight_entity (7 samples, 0.01%)</title><rect x="63.7268%" y="837" width="0.0144%" height="15" fill="rgb(236,150,49)" fg:x="31019" fg:w="7"/><text x="63.9768%" y="847.50"></text></g><g><title>update_cfs_group (20 samples, 0.04%)</title><rect x="63.7411%" y="837" width="0.0411%" height="15" fill="rgb(225,197,26)" fg:x="31026" fg:w="20"/><text x="63.9911%" y="847.50"></text></g><g><title>__calc_delta (9 samples, 0.02%)</title><rect x="63.8192%" y="821" width="0.0185%" height="15" fill="rgb(214,17,42)" fg:x="31064" fg:w="9"/><text x="64.0692%" y="831.50"></text></g><g><title>__cgroup_account_cputime (8 samples, 0.02%)</title><rect x="63.8377%" y="821" width="0.0164%" height="15" fill="rgb(224,165,40)" fg:x="31073" fg:w="8"/><text x="64.0877%" y="831.50"></text></g><g><title>cpuacct_charge (19 samples, 0.04%)</title><rect x="63.8541%" y="821" width="0.0390%" height="15" fill="rgb(246,100,4)" fg:x="31081" fg:w="19"/><text x="64.1041%" y="831.50"></text></g><g><title>update_curr (57 samples, 0.12%)</title><rect x="63.7822%" y="837" width="0.1171%" height="15" fill="rgb(222,103,0)" fg:x="31046" fg:w="57"/><text x="64.0322%" y="847.50"></text></g><g><title>__update_load_avg_cfs_rq (18 samples, 0.04%)</title><rect x="63.9486%" y="821" width="0.0370%" height="15" fill="rgb(227,189,26)" fg:x="31127" fg:w="18"/><text x="64.1986%" y="831.50"></text></g><g><title>__update_load_avg_se (14 samples, 0.03%)</title><rect x="63.9856%" y="821" width="0.0288%" height="15" fill="rgb(214,202,17)" fg:x="31145" fg:w="14"/><text x="64.2356%" y="831.50"></text></g><g><title>update_load_avg (57 samples, 0.12%)</title><rect x="63.8993%" y="837" width="0.1171%" height="15" fill="rgb(229,111,3)" fg:x="31103" fg:w="57"/><text x="64.1493%" y="847.50"></text></g><g><title>dequeue_entity (173 samples, 0.36%)</title><rect x="63.6651%" y="853" width="0.3554%" height="15" fill="rgb(229,172,15)" fg:x="30989" fg:w="173"/><text x="63.9151%" y="863.50"></text></g><g><title>__calc_delta (19 samples, 0.04%)</title><rect x="64.0945%" y="821" width="0.0390%" height="15" fill="rgb(230,224,35)" fg:x="31198" fg:w="19"/><text x="64.3445%" y="831.50"></text></g><g><title>reweight_entity (56 samples, 0.12%)</title><rect x="64.0205%" y="853" width="0.1150%" height="15" fill="rgb(251,141,6)" fg:x="31162" fg:w="56"/><text x="64.2705%" y="863.50"></text></g><g><title>update_curr (28 samples, 0.06%)</title><rect x="64.0781%" y="837" width="0.0575%" height="15" fill="rgb(225,208,6)" fg:x="31190" fg:w="28"/><text x="64.3281%" y="847.50"></text></g><g><title>set_next_buddy (25 samples, 0.05%)</title><rect x="64.1356%" y="853" width="0.0514%" height="15" fill="rgb(246,181,16)" fg:x="31218" fg:w="25"/><text x="64.3856%" y="863.50"></text></g><g><title>update_cfs_group (31 samples, 0.06%)</title><rect x="64.1870%" y="853" width="0.0637%" height="15" fill="rgb(227,129,36)" fg:x="31243" fg:w="31"/><text x="64.4370%" y="863.50"></text></g><g><title>__update_load_avg_cfs_rq (10 samples, 0.02%)</title><rect x="64.3102%" y="837" width="0.0205%" height="15" fill="rgb(248,117,24)" fg:x="31303" fg:w="10"/><text x="64.5602%" y="847.50"></text></g><g><title>dequeue_task_fair (370 samples, 0.76%)</title><rect x="63.5953%" y="869" width="0.7601%" height="15" fill="rgb(214,185,35)" fg:x="30955" fg:w="370"/><text x="63.8453%" y="879.50"></text></g><g><title>update_load_avg (51 samples, 0.10%)</title><rect x="64.2506%" y="853" width="0.1048%" height="15" fill="rgb(236,150,34)" fg:x="31274" fg:w="51"/><text x="64.5006%" y="863.50"></text></g><g><title>__update_load_avg_se (12 samples, 0.02%)</title><rect x="64.3308%" y="837" width="0.0247%" height="15" fill="rgb(243,228,27)" fg:x="31313" fg:w="12"/><text x="64.5808%" y="847.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (92 samples, 0.19%)</title><rect x="64.4088%" y="837" width="0.1890%" height="15" fill="rgb(245,77,44)" fg:x="31351" fg:w="92"/><text x="64.6588%" y="847.50"></text></g><g><title>native_write_msr (90 samples, 0.18%)</title><rect x="64.4129%" y="821" width="0.1849%" height="15" fill="rgb(235,214,42)" fg:x="31353" fg:w="90"/><text x="64.6629%" y="831.50"></text></g><g><title>__perf_event_task_sched_in (101 samples, 0.21%)</title><rect x="64.3924%" y="853" width="0.2075%" height="15" fill="rgb(221,74,3)" fg:x="31343" fg:w="101"/><text x="64.6424%" y="863.50"></text></g><g><title>finish_task_switch.isra.0 (128 samples, 0.26%)</title><rect x="64.3554%" y="869" width="0.2630%" height="15" fill="rgb(206,121,29)" fg:x="31325" fg:w="128"/><text x="64.6054%" y="879.50"></text></g><g><title>enqueue_task_fair (11 samples, 0.02%)</title><rect x="64.7067%" y="805" width="0.0226%" height="15" fill="rgb(249,131,53)" fg:x="31496" fg:w="11"/><text x="64.9567%" y="815.50"></text></g><g><title>enqueue_entity (9 samples, 0.02%)</title><rect x="64.7108%" y="789" width="0.0185%" height="15" fill="rgb(236,170,29)" fg:x="31498" fg:w="9"/><text x="64.9608%" y="799.50"></text></g><g><title>activate_task (13 samples, 0.03%)</title><rect x="64.7067%" y="821" width="0.0267%" height="15" fill="rgb(247,96,15)" fg:x="31496" fg:w="13"/><text x="64.9567%" y="831.50"></text></g><g><title>deactivate_task (6 samples, 0.01%)</title><rect x="64.7334%" y="821" width="0.0123%" height="15" fill="rgb(211,210,7)" fg:x="31509" fg:w="6"/><text x="64.9834%" y="831.50"></text></g><g><title>psi_task_change (6 samples, 0.01%)</title><rect x="64.7334%" y="805" width="0.0123%" height="15" fill="rgb(240,88,50)" fg:x="31509" fg:w="6"/><text x="64.9834%" y="815.50"></text></g><g><title>psi_group_change (5 samples, 0.01%)</title><rect x="64.7355%" y="789" width="0.0103%" height="15" fill="rgb(209,229,26)" fg:x="31510" fg:w="5"/><text x="64.9855%" y="799.50"></text></g><g><title>dequeue_entity (7 samples, 0.01%)</title><rect x="64.7458%" y="805" width="0.0144%" height="15" fill="rgb(210,68,23)" fg:x="31515" fg:w="7"/><text x="64.9958%" y="815.50"></text></g><g><title>dequeue_task_fair (11 samples, 0.02%)</title><rect x="64.7458%" y="821" width="0.0226%" height="15" fill="rgb(229,180,13)" fg:x="31515" fg:w="11"/><text x="64.9958%" y="831.50"></text></g><g><title>find_busiest_group (12 samples, 0.02%)</title><rect x="64.7684%" y="821" width="0.0247%" height="15" fill="rgb(236,53,44)" fg:x="31526" fg:w="12"/><text x="65.0184%" y="831.50"></text></g><g><title>update_sd_lb_stats.constprop.0 (12 samples, 0.02%)</title><rect x="64.7684%" y="805" width="0.0247%" height="15" fill="rgb(244,214,29)" fg:x="31526" fg:w="12"/><text x="65.0184%" y="815.50"></text></g><g><title>load_balance (54 samples, 0.11%)</title><rect x="64.6882%" y="837" width="0.1109%" height="15" fill="rgb(220,75,29)" fg:x="31487" fg:w="54"/><text x="64.9382%" y="847.50"></text></g><g><title>newidle_balance (83 samples, 0.17%)</title><rect x="64.6656%" y="853" width="0.1705%" height="15" fill="rgb(214,183,37)" fg:x="31476" fg:w="83"/><text x="64.9156%" y="863.50"></text></g><g><title>update_blocked_averages (18 samples, 0.04%)</title><rect x="64.7992%" y="837" width="0.0370%" height="15" fill="rgb(239,117,29)" fg:x="31541" fg:w="18"/><text x="65.0492%" y="847.50"></text></g><g><title>pick_next_entity (16 samples, 0.03%)</title><rect x="64.8362%" y="853" width="0.0329%" height="15" fill="rgb(237,171,35)" fg:x="31559" fg:w="16"/><text x="65.0862%" y="863.50"></text></g><g><title>set_next_entity (23 samples, 0.05%)</title><rect x="64.8752%" y="853" width="0.0473%" height="15" fill="rgb(229,178,53)" fg:x="31578" fg:w="23"/><text x="65.1252%" y="863.50"></text></g><g><title>update_load_avg (7 samples, 0.01%)</title><rect x="64.9081%" y="837" width="0.0144%" height="15" fill="rgb(210,102,19)" fg:x="31594" fg:w="7"/><text x="65.1581%" y="847.50"></text></g><g><title>pick_next_task_fair (154 samples, 0.32%)</title><rect x="64.6184%" y="869" width="0.3164%" height="15" fill="rgb(235,127,22)" fg:x="31453" fg:w="154"/><text x="64.8684%" y="879.50"></text></g><g><title>update_curr (6 samples, 0.01%)</title><rect x="64.9224%" y="853" width="0.0123%" height="15" fill="rgb(244,31,31)" fg:x="31601" fg:w="6"/><text x="65.1724%" y="863.50"></text></g><g><title>pick_next_task_idle (9 samples, 0.02%)</title><rect x="64.9348%" y="869" width="0.0185%" height="15" fill="rgb(231,43,21)" fg:x="31607" fg:w="9"/><text x="65.1848%" y="879.50"></text></g><g><title>__update_idle_core (9 samples, 0.02%)</title><rect x="64.9348%" y="853" width="0.0185%" height="15" fill="rgb(217,131,35)" fg:x="31607" fg:w="9"/><text x="65.1848%" y="863.50"></text></g><g><title>psi_group_change (109 samples, 0.22%)</title><rect x="65.0046%" y="853" width="0.2239%" height="15" fill="rgb(221,149,4)" fg:x="31641" fg:w="109"/><text x="65.2546%" y="863.50"></text></g><g><title>record_times (7 samples, 0.01%)</title><rect x="65.2142%" y="837" width="0.0144%" height="15" fill="rgb(232,170,28)" fg:x="31743" fg:w="7"/><text x="65.4642%" y="847.50"></text></g><g><title>psi_task_switch (135 samples, 0.28%)</title><rect x="64.9533%" y="869" width="0.2773%" height="15" fill="rgb(238,56,10)" fg:x="31616" fg:w="135"/><text x="65.2033%" y="879.50"></text></g><g><title>put_prev_task_fair (14 samples, 0.03%)</title><rect x="65.2306%" y="869" width="0.0288%" height="15" fill="rgb(235,196,14)" fg:x="31751" fg:w="14"/><text x="65.4806%" y="879.50"></text></g><g><title>put_prev_entity (8 samples, 0.02%)</title><rect x="65.2429%" y="853" width="0.0164%" height="15" fill="rgb(216,45,48)" fg:x="31757" fg:w="8"/><text x="65.4929%" y="863.50"></text></g><g><title>rcu_note_context_switch (6 samples, 0.01%)</title><rect x="65.2594%" y="869" width="0.0123%" height="15" fill="rgb(238,213,17)" fg:x="31765" fg:w="6"/><text x="65.5094%" y="879.50"></text></g><g><title>__x64_sys_epoll_wait (1,474 samples, 3.03%)</title><rect x="62.2784%" y="949" width="3.0282%" height="15" fill="rgb(212,13,2)" fg:x="30314" fg:w="1474"/><text x="62.5284%" y="959.50">__x..</text></g><g><title>do_epoll_wait (1,456 samples, 2.99%)</title><rect x="62.3154%" y="933" width="2.9913%" height="15" fill="rgb(240,114,20)" fg:x="30332" fg:w="1456"/><text x="62.5654%" y="943.50">do_..</text></g><g><title>schedule_hrtimeout_range_clock (974 samples, 2.00%)</title><rect x="63.3056%" y="917" width="2.0010%" height="15" fill="rgb(228,41,40)" fg:x="30814" fg:w="974"/><text x="63.5556%" y="927.50">s..</text></g><g><title>schedule (963 samples, 1.98%)</title><rect x="63.3282%" y="901" width="1.9784%" height="15" fill="rgb(244,132,35)" fg:x="30825" fg:w="963"/><text x="63.5782%" y="911.50">s..</text></g><g><title>__schedule (951 samples, 1.95%)</title><rect x="63.3529%" y="885" width="1.9538%" height="15" fill="rgb(253,189,4)" fg:x="30837" fg:w="951"/><text x="63.6029%" y="895.50">_..</text></g><g><title>update_rq_clock (13 samples, 0.03%)</title><rect x="65.2799%" y="869" width="0.0267%" height="15" fill="rgb(224,37,19)" fg:x="31775" fg:w="13"/><text x="65.5299%" y="879.50"></text></g><g><title>sched_clock_cpu (8 samples, 0.02%)</title><rect x="65.2902%" y="853" width="0.0164%" height="15" fill="rgb(235,223,18)" fg:x="31780" fg:w="8"/><text x="65.5402%" y="863.50"></text></g><g><title>native_sched_clock (7 samples, 0.01%)</title><rect x="65.2922%" y="837" width="0.0144%" height="15" fill="rgb(235,163,25)" fg:x="31781" fg:w="7"/><text x="65.5422%" y="847.50"></text></g><g><title>syscall_enter_from_user_mode (6 samples, 0.01%)</title><rect x="65.3066%" y="949" width="0.0123%" height="15" fill="rgb(217,145,28)" fg:x="31788" fg:w="6"/><text x="65.5566%" y="959.50"></text></g><g><title>__get_user_8 (25 samples, 0.05%)</title><rect x="65.4155%" y="901" width="0.0514%" height="15" fill="rgb(223,223,32)" fg:x="31841" fg:w="25"/><text x="65.6655%" y="911.50"></text></g><g><title>__rseq_handle_notify_resume (45 samples, 0.09%)</title><rect x="65.3867%" y="917" width="0.0924%" height="15" fill="rgb(227,189,39)" fg:x="31827" fg:w="45"/><text x="65.6367%" y="927.50"></text></g><g><title>__put_user_nocheck_8 (6 samples, 0.01%)</title><rect x="65.4669%" y="901" width="0.0123%" height="15" fill="rgb(248,10,22)" fg:x="31866" fg:w="6"/><text x="65.7169%" y="911.50"></text></g><g><title>blkcg_maybe_throttle_current (9 samples, 0.02%)</title><rect x="65.4792%" y="917" width="0.0185%" height="15" fill="rgb(248,46,39)" fg:x="31872" fg:w="9"/><text x="65.7292%" y="927.50"></text></g><g><title>mem_cgroup_handle_over_high (5 samples, 0.01%)</title><rect x="65.5039%" y="917" width="0.0103%" height="15" fill="rgb(248,113,48)" fg:x="31884" fg:w="5"/><text x="65.7539%" y="927.50"></text></g><g><title>exit_to_user_mode_prepare (118 samples, 0.24%)</title><rect x="65.3395%" y="933" width="0.2424%" height="15" fill="rgb(245,16,25)" fg:x="31804" fg:w="118"/><text x="65.5895%" y="943.50"></text></g><g><title>switch_fpu_return (33 samples, 0.07%)</title><rect x="65.5141%" y="917" width="0.0678%" height="15" fill="rgb(249,152,16)" fg:x="31889" fg:w="33"/><text x="65.7641%" y="927.50"></text></g><g><title>restore_fpregs_from_fpstate (23 samples, 0.05%)</title><rect x="65.5347%" y="901" width="0.0473%" height="15" fill="rgb(250,16,1)" fg:x="31899" fg:w="23"/><text x="65.7847%" y="911.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1,697 samples, 3.49%)</title><rect x="62.0976%" y="981" width="3.4864%" height="15" fill="rgb(249,138,3)" fg:x="30226" fg:w="1697"/><text x="62.3476%" y="991.50">ent..</text></g><g><title>do_syscall_64 (1,617 samples, 3.32%)</title><rect x="62.2619%" y="965" width="3.3220%" height="15" fill="rgb(227,71,41)" fg:x="30306" fg:w="1617"/><text x="62.5119%" y="975.50">do_..</text></g><g><title>syscall_exit_to_user_mode (129 samples, 0.27%)</title><rect x="65.3190%" y="949" width="0.2650%" height="15" fill="rgb(209,184,23)" fg:x="31794" fg:w="129"/><text x="65.5690%" y="959.50"></text></g><g><title>save_fpregs_to_fpstate (5 samples, 0.01%)</title><rect x="65.5860%" y="981" width="0.0103%" height="15" fill="rgb(223,215,31)" fg:x="31924" fg:w="5"/><text x="65.8360%" y="991.50"></text></g><g><title>syscall_return_via_sysret (129 samples, 0.27%)</title><rect x="65.5963%" y="981" width="0.2650%" height="15" fill="rgb(210,146,28)" fg:x="31929" fg:w="129"/><text x="65.8463%" y="991.50"></text></g><g><title>mio::sys::unix::selector::epoll::Selector::select (1,960 samples, 4.03%)</title><rect x="61.8367%" y="1013" width="4.0267%" height="15" fill="rgb(209,183,41)" fg:x="30099" fg:w="1960"/><text x="62.0867%" y="1023.50">mio:..</text></g><g><title>epoll_wait (1,949 samples, 4.00%)</title><rect x="61.8593%" y="997" width="4.0041%" height="15" fill="rgb(209,224,45)" fg:x="30110" fg:w="1949"/><text x="62.1093%" y="1007.50">epol..</text></g><g><title>tokio::io::ready::Ready::from_mio (9 samples, 0.02%)</title><rect x="65.8634%" y="1013" width="0.0185%" height="15" fill="rgb(224,209,51)" fg:x="32059" fg:w="9"/><text x="66.1134%" y="1023.50"></text></g><g><title>mio::event::event::Event::is_write_closed (7 samples, 0.01%)</title><rect x="65.8675%" y="997" width="0.0144%" height="15" fill="rgb(223,17,39)" fg:x="32061" fg:w="7"/><text x="66.1175%" y="1007.50"></text></g><g><title>parking_lot_core::spinwait::cpu_relax (5 samples, 0.01%)</title><rect x="65.8963%" y="917" width="0.0103%" height="15" fill="rgb(234,204,37)" fg:x="32075" fg:w="5"/><text x="66.1463%" y="927.50"></text></g><g><title>core::hint::spin_loop (5 samples, 0.01%)</title><rect x="65.8963%" y="901" width="0.0103%" height="15" fill="rgb(236,120,5)" fg:x="32075" fg:w="5"/><text x="66.1463%" y="911.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (5 samples, 0.01%)</title><rect x="65.8963%" y="885" width="0.0103%" height="15" fill="rgb(248,97,27)" fg:x="32075" fg:w="5"/><text x="66.1463%" y="895.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (12 samples, 0.02%)</title><rect x="65.8880%" y="997" width="0.0247%" height="15" fill="rgb(240,66,17)" fg:x="32071" fg:w="12"/><text x="66.1380%" y="1007.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (12 samples, 0.02%)</title><rect x="65.8880%" y="981" width="0.0247%" height="15" fill="rgb(210,79,3)" fg:x="32071" fg:w="12"/><text x="66.1380%" y="991.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (12 samples, 0.02%)</title><rect x="65.8880%" y="965" width="0.0247%" height="15" fill="rgb(214,176,27)" fg:x="32071" fg:w="12"/><text x="66.1380%" y="975.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (9 samples, 0.02%)</title><rect x="65.8942%" y="949" width="0.0185%" height="15" fill="rgb(235,185,3)" fg:x="32074" fg:w="9"/><text x="66.1442%" y="959.50"></text></g><g><title>parking_lot_core::spinwait::SpinWait::spin (8 samples, 0.02%)</title><rect x="65.8963%" y="933" width="0.0164%" height="15" fill="rgb(227,24,12)" fg:x="32075" fg:w="8"/><text x="66.1463%" y="943.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.01%)</title><rect x="65.9127%" y="981" width="0.0103%" height="15" fill="rgb(252,169,48)" fg:x="32083" fg:w="5"/><text x="66.1627%" y="991.50"></text></g><g><title>__GI___lll_lock_wake_private (6 samples, 0.01%)</title><rect x="65.9353%" y="933" width="0.0123%" height="15" fill="rgb(212,65,1)" fg:x="32094" fg:w="6"/><text x="66.1853%" y="943.50"></text></g><g><title>__x64_sys_futex (6 samples, 0.01%)</title><rect x="66.0175%" y="853" width="0.0123%" height="15" fill="rgb(242,39,24)" fg:x="32134" fg:w="6"/><text x="66.2675%" y="863.50"></text></g><g><title>do_futex (5 samples, 0.01%)</title><rect x="66.0195%" y="837" width="0.0103%" height="15" fill="rgb(249,32,23)" fg:x="32135" fg:w="5"/><text x="66.2695%" y="847.50"></text></g><g><title>futex_wait (5 samples, 0.01%)</title><rect x="66.0195%" y="821" width="0.0103%" height="15" fill="rgb(251,195,23)" fg:x="32135" fg:w="5"/><text x="66.2695%" y="831.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (10 samples, 0.02%)</title><rect x="66.0134%" y="885" width="0.0205%" height="15" fill="rgb(236,174,8)" fg:x="32132" fg:w="10"/><text x="66.2634%" y="895.50"></text></g><g><title>do_syscall_64 (9 samples, 0.02%)</title><rect x="66.0154%" y="869" width="0.0185%" height="15" fill="rgb(220,197,8)" fg:x="32133" fg:w="9"/><text x="66.2654%" y="879.50"></text></g><g><title>__GI___lll_lock_wait_private (13 samples, 0.03%)</title><rect x="66.0113%" y="917" width="0.0267%" height="15" fill="rgb(240,108,37)" fg:x="32131" fg:w="13"/><text x="66.2613%" y="927.50"></text></g><g><title>futex_wait (12 samples, 0.02%)</title><rect x="66.0134%" y="901" width="0.0247%" height="15" fill="rgb(232,176,24)" fg:x="32132" fg:w="12"/><text x="66.2634%" y="911.50"></text></g><g><title>__GI___libc_free (66 samples, 0.14%)</title><rect x="65.9250%" y="949" width="0.1356%" height="15" fill="rgb(243,35,29)" fg:x="32089" fg:w="66"/><text x="66.1750%" y="959.50"></text></g><g><title>_int_free (55 samples, 0.11%)</title><rect x="65.9476%" y="933" width="0.1130%" height="15" fill="rgb(210,37,18)" fg:x="32100" fg:w="55"/><text x="66.1976%" y="943.50"></text></g><g><title>unlink_chunk (10 samples, 0.02%)</title><rect x="66.0401%" y="917" width="0.0205%" height="15" fill="rgb(224,184,40)" fg:x="32145" fg:w="10"/><text x="66.2901%" y="927.50"></text></g><g><title>core::mem::drop (7 samples, 0.01%)</title><rect x="66.0709%" y="933" width="0.0144%" height="15" fill="rgb(236,39,29)" fg:x="32160" fg:w="7"/><text x="66.3209%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;tokio::runtime::io::scheduled_io::ScheduledIo,&amp;alloc::alloc::Global&gt;&gt; (7 samples, 0.01%)</title><rect x="66.0709%" y="917" width="0.0144%" height="15" fill="rgb(232,48,39)" fg:x="32160" fg:w="7"/><text x="66.3209%" y="927.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.01%)</title><rect x="66.0709%" y="901" width="0.0144%" height="15" fill="rgb(236,34,42)" fg:x="32160" fg:w="7"/><text x="66.3209%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (6 samples, 0.01%)</title><rect x="66.0729%" y="885" width="0.0123%" height="15" fill="rgb(243,106,37)" fg:x="32161" fg:w="6"/><text x="66.3229%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_sub (6 samples, 0.01%)</title><rect x="66.0729%" y="869" width="0.0123%" height="15" fill="rgb(218,96,6)" fg:x="32161" fg:w="6"/><text x="66.3229%" y="879.50"></text></g><g><title>core::mem::drop (5 samples, 0.01%)</title><rect x="66.0894%" y="885" width="0.0103%" height="15" fill="rgb(235,130,12)" fg:x="32169" fg:w="5"/><text x="66.3394%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::io::scheduled_io::Waiters&gt;&gt; (5 samples, 0.01%)</title><rect x="66.0894%" y="869" width="0.0103%" height="15" fill="rgb(231,95,0)" fg:x="32169" fg:w="5"/><text x="66.3394%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::io::scheduled_io::Waiters&gt;&gt; (5 samples, 0.01%)</title><rect x="66.0894%" y="853" width="0.0103%" height="15" fill="rgb(228,12,23)" fg:x="32169" fg:w="5"/><text x="66.3394%" y="863.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="66.0894%" y="837" width="0.0103%" height="15" fill="rgb(216,12,1)" fg:x="32169" fg:w="5"/><text x="66.3394%" y="847.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (5 samples, 0.01%)</title><rect x="66.0894%" y="821" width="0.0103%" height="15" fill="rgb(219,59,3)" fg:x="32169" fg:w="5"/><text x="66.3394%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (5 samples, 0.01%)</title><rect x="66.0894%" y="805" width="0.0103%" height="15" fill="rgb(215,208,46)" fg:x="32169" fg:w="5"/><text x="66.3394%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (5 samples, 0.01%)</title><rect x="66.0894%" y="789" width="0.0103%" height="15" fill="rgb(254,224,29)" fg:x="32169" fg:w="5"/><text x="66.3394%" y="799.50"></text></g><g><title>&lt;tokio::runtime::io::scheduled_io::ScheduledIo as core::ops::drop::Drop&gt;::drop (14 samples, 0.03%)</title><rect x="66.0853%" y="917" width="0.0288%" height="15" fill="rgb(232,14,29)" fg:x="32167" fg:w="14"/><text x="66.3353%" y="927.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::wake (14 samples, 0.03%)</title><rect x="66.0853%" y="901" width="0.0288%" height="15" fill="rgb(208,45,52)" fg:x="32167" fg:w="14"/><text x="66.3353%" y="911.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (6 samples, 0.01%)</title><rect x="66.1017%" y="885" width="0.0123%" height="15" fill="rgb(234,191,28)" fg:x="32175" fg:w="6"/><text x="66.3517%" y="895.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (6 samples, 0.01%)</title><rect x="66.1017%" y="869" width="0.0123%" height="15" fill="rgb(244,67,43)" fg:x="32175" fg:w="6"/><text x="66.3517%" y="879.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (6 samples, 0.01%)</title><rect x="66.1017%" y="853" width="0.0123%" height="15" fill="rgb(236,189,24)" fg:x="32175" fg:w="6"/><text x="66.3517%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (6 samples, 0.01%)</title><rect x="66.1017%" y="837" width="0.0123%" height="15" fill="rgb(239,214,33)" fg:x="32175" fg:w="6"/><text x="66.3517%" y="847.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (6 samples, 0.01%)</title><rect x="66.1017%" y="821" width="0.0123%" height="15" fill="rgb(226,176,41)" fg:x="32175" fg:w="6"/><text x="66.3517%" y="831.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (22 samples, 0.05%)</title><rect x="66.0709%" y="949" width="0.0452%" height="15" fill="rgb(248,47,8)" fg:x="32160" fg:w="22"/><text x="66.3209%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::io::scheduled_io::ScheduledIo&gt; (15 samples, 0.03%)</title><rect x="66.0853%" y="933" width="0.0308%" height="15" fill="rgb(218,81,44)" fg:x="32167" fg:w="15"/><text x="66.3353%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::runtime::io::scheduled_io::ScheduledIo&gt;&gt; (95 samples, 0.20%)</title><rect x="65.9250%" y="981" width="0.1952%" height="15" fill="rgb(213,98,6)" fg:x="32089" fg:w="95"/><text x="66.1750%" y="991.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (95 samples, 0.20%)</title><rect x="65.9250%" y="965" width="0.1952%" height="15" fill="rgb(222,85,22)" fg:x="32089" fg:w="95"/><text x="66.1750%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;tokio::runtime::io::scheduled_io::ScheduledIo&gt;&gt;&gt; (9 samples, 0.02%)</title><rect x="66.1222%" y="981" width="0.0185%" height="15" fill="rgb(239,46,39)" fg:x="32185" fg:w="9"/><text x="66.3722%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::runtime::io::scheduled_io::ScheduledIo&gt;&gt; (9 samples, 0.02%)</title><rect x="66.1222%" y="965" width="0.0185%" height="15" fill="rgb(237,12,29)" fg:x="32185" fg:w="9"/><text x="66.3722%" y="975.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.02%)</title><rect x="66.1222%" y="949" width="0.0185%" height="15" fill="rgb(214,77,8)" fg:x="32185" fg:w="9"/><text x="66.3722%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (9 samples, 0.02%)</title><rect x="66.1222%" y="933" width="0.0185%" height="15" fill="rgb(217,168,37)" fg:x="32185" fg:w="9"/><text x="66.3722%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_sub (9 samples, 0.02%)</title><rect x="66.1222%" y="917" width="0.0185%" height="15" fill="rgb(221,217,23)" fg:x="32185" fg:w="9"/><text x="66.3722%" y="927.50"></text></g><g><title>tokio::runtime::io::driver::Handle::release_pending_registrations (134 samples, 0.28%)</title><rect x="65.8819%" y="1013" width="0.2753%" height="15" fill="rgb(243,229,36)" fg:x="32068" fg:w="134"/><text x="66.1319%" y="1023.50"></text></g><g><title>tokio::runtime::io::registration_set::RegistrationSet::release (119 samples, 0.24%)</title><rect x="65.9127%" y="997" width="0.2445%" height="15" fill="rgb(251,163,40)" fg:x="32083" fg:w="119"/><text x="66.1627%" y="1007.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::remove (8 samples, 0.02%)</title><rect x="66.1407%" y="981" width="0.0164%" height="15" fill="rgb(237,222,12)" fg:x="32194" fg:w="8"/><text x="66.3907%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (13 samples, 0.03%)</title><rect x="66.1572%" y="997" width="0.0267%" height="15" fill="rgb(248,132,6)" fg:x="32202" fg:w="13"/><text x="66.4072%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (13 samples, 0.03%)</title><rect x="66.1572%" y="981" width="0.0267%" height="15" fill="rgb(227,167,50)" fg:x="32202" fg:w="13"/><text x="66.4072%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (12 samples, 0.02%)</title><rect x="66.1839%" y="997" width="0.0247%" height="15" fill="rgb(242,84,37)" fg:x="32215" fg:w="12"/><text x="66.4339%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_load (12 samples, 0.02%)</title><rect x="66.1839%" y="981" width="0.0247%" height="15" fill="rgb(212,4,50)" fg:x="32215" fg:w="12"/><text x="66.4339%" y="991.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::set_readiness (28 samples, 0.06%)</title><rect x="66.1572%" y="1013" width="0.0575%" height="15" fill="rgb(230,228,32)" fg:x="32202" fg:w="28"/><text x="66.4072%" y="1023.50"></text></g><g><title>core::mem::drop (15 samples, 0.03%)</title><rect x="66.2291%" y="997" width="0.0308%" height="15" fill="rgb(248,217,23)" fg:x="32237" fg:w="15"/><text x="66.4791%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::io::scheduled_io::Waiters&gt;&gt; (15 samples, 0.03%)</title><rect x="66.2291%" y="981" width="0.0308%" height="15" fill="rgb(238,197,32)" fg:x="32237" fg:w="15"/><text x="66.4791%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::io::scheduled_io::Waiters&gt;&gt; (15 samples, 0.03%)</title><rect x="66.2291%" y="965" width="0.0308%" height="15" fill="rgb(236,106,1)" fg:x="32237" fg:w="15"/><text x="66.4791%" y="975.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.03%)</title><rect x="66.2291%" y="949" width="0.0308%" height="15" fill="rgb(219,228,13)" fg:x="32237" fg:w="15"/><text x="66.4791%" y="959.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (15 samples, 0.03%)</title><rect x="66.2291%" y="933" width="0.0308%" height="15" fill="rgb(238,30,35)" fg:x="32237" fg:w="15"/><text x="66.4791%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (15 samples, 0.03%)</title><rect x="66.2291%" y="917" width="0.0308%" height="15" fill="rgb(236,70,23)" fg:x="32237" fg:w="15"/><text x="66.4791%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (15 samples, 0.03%)</title><rect x="66.2291%" y="901" width="0.0308%" height="15" fill="rgb(249,104,48)" fg:x="32237" fg:w="15"/><text x="66.4791%" y="911.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (12 samples, 0.02%)</title><rect x="66.2661%" y="997" width="0.0247%" height="15" fill="rgb(254,117,50)" fg:x="32255" fg:w="12"/><text x="66.5161%" y="1007.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (11 samples, 0.02%)</title><rect x="66.2681%" y="981" width="0.0226%" height="15" fill="rgb(223,152,4)" fg:x="32256" fg:w="11"/><text x="66.5181%" y="991.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (11 samples, 0.02%)</title><rect x="66.2681%" y="965" width="0.0226%" height="15" fill="rgb(245,6,2)" fg:x="32256" fg:w="11"/><text x="66.5181%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (11 samples, 0.02%)</title><rect x="66.2681%" y="949" width="0.0226%" height="15" fill="rgb(249,150,24)" fg:x="32256" fg:w="11"/><text x="66.5181%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (11 samples, 0.02%)</title><rect x="66.2681%" y="933" width="0.0226%" height="15" fill="rgb(228,185,42)" fg:x="32256" fg:w="11"/><text x="66.5181%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (6 samples, 0.01%)</title><rect x="66.3030%" y="933" width="0.0123%" height="15" fill="rgb(226,39,33)" fg:x="32273" fg:w="6"/><text x="66.5530%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_swap (6 samples, 0.01%)</title><rect x="66.3030%" y="917" width="0.0123%" height="15" fill="rgb(221,166,19)" fg:x="32273" fg:w="6"/><text x="66.5530%" y="927.50"></text></g><g><title>futex_wake_mark (8 samples, 0.02%)</title><rect x="66.3564%" y="757" width="0.0164%" height="15" fill="rgb(209,109,2)" fg:x="32299" fg:w="8"/><text x="66.6064%" y="767.50"></text></g><g><title>available_idle_cpu (6 samples, 0.01%)</title><rect x="66.4407%" y="709" width="0.0123%" height="15" fill="rgb(252,216,26)" fg:x="32340" fg:w="6"/><text x="66.6907%" y="719.50"></text></g><g><title>select_task_rq_fair (30 samples, 0.06%)</title><rect x="66.4037%" y="725" width="0.0616%" height="15" fill="rgb(227,173,36)" fg:x="32322" fg:w="30"/><text x="66.6537%" y="735.50"></text></g><g><title>task_h_load (6 samples, 0.01%)</title><rect x="66.4530%" y="709" width="0.0123%" height="15" fill="rgb(209,90,7)" fg:x="32346" fg:w="6"/><text x="66.7030%" y="719.50"></text></g><g><title>enqueue_entity (10 samples, 0.02%)</title><rect x="66.4859%" y="693" width="0.0205%" height="15" fill="rgb(250,194,11)" fg:x="32362" fg:w="10"/><text x="66.7359%" y="703.50"></text></g><g><title>update_load_avg (5 samples, 0.01%)</title><rect x="66.4961%" y="677" width="0.0103%" height="15" fill="rgb(220,72,50)" fg:x="32367" fg:w="5"/><text x="66.7461%" y="687.50"></text></g><g><title>reweight_entity (9 samples, 0.02%)</title><rect x="66.5064%" y="693" width="0.0185%" height="15" fill="rgb(222,106,48)" fg:x="32372" fg:w="9"/><text x="66.7564%" y="703.50"></text></g><g><title>enqueue_task_fair (42 samples, 0.09%)</title><rect x="66.4797%" y="709" width="0.0863%" height="15" fill="rgb(216,220,45)" fg:x="32359" fg:w="42"/><text x="66.7297%" y="719.50"></text></g><g><title>update_load_avg (16 samples, 0.03%)</title><rect x="66.5331%" y="693" width="0.0329%" height="15" fill="rgb(234,112,18)" fg:x="32385" fg:w="16"/><text x="66.7831%" y="703.50"></text></g><g><title>psi_group_change (17 samples, 0.03%)</title><rect x="66.5722%" y="693" width="0.0349%" height="15" fill="rgb(206,179,9)" fg:x="32404" fg:w="17"/><text x="66.8222%" y="703.50"></text></g><g><title>ttwu_do_activate (68 samples, 0.14%)</title><rect x="66.4715%" y="725" width="0.1397%" height="15" fill="rgb(215,115,40)" fg:x="32355" fg:w="68"/><text x="66.7215%" y="735.50"></text></g><g><title>psi_task_change (22 samples, 0.05%)</title><rect x="66.5660%" y="709" width="0.0452%" height="15" fill="rgb(222,69,34)" fg:x="32401" fg:w="22"/><text x="66.8160%" y="719.50"></text></g><g><title>ttwu_queue_wakelist (5 samples, 0.01%)</title><rect x="66.6133%" y="725" width="0.0103%" height="15" fill="rgb(209,161,10)" fg:x="32424" fg:w="5"/><text x="66.8633%" y="735.50"></text></g><g><title>__x64_sys_futex (145 samples, 0.30%)</title><rect x="66.3338%" y="805" width="0.2979%" height="15" fill="rgb(217,6,38)" fg:x="32288" fg:w="145"/><text x="66.5838%" y="815.50"></text></g><g><title>do_futex (143 samples, 0.29%)</title><rect x="66.3380%" y="789" width="0.2938%" height="15" fill="rgb(229,229,48)" fg:x="32290" fg:w="143"/><text x="66.5880%" y="799.50"></text></g><g><title>futex_wake (140 samples, 0.29%)</title><rect x="66.3441%" y="773" width="0.2876%" height="15" fill="rgb(225,21,28)" fg:x="32293" fg:w="140"/><text x="66.5941%" y="783.50"></text></g><g><title>wake_up_q (122 samples, 0.25%)</title><rect x="66.3811%" y="757" width="0.2506%" height="15" fill="rgb(206,33,13)" fg:x="32311" fg:w="122"/><text x="66.6311%" y="767.50"></text></g><g><title>try_to_wake_up (120 samples, 0.25%)</title><rect x="66.3852%" y="741" width="0.2465%" height="15" fill="rgb(242,178,17)" fg:x="32313" fg:w="120"/><text x="66.6352%" y="751.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (160 samples, 0.33%)</title><rect x="66.3174%" y="837" width="0.3287%" height="15" fill="rgb(220,162,5)" fg:x="32280" fg:w="160"/><text x="66.5674%" y="847.50"></text></g><g><title>do_syscall_64 (157 samples, 0.32%)</title><rect x="66.3236%" y="821" width="0.3225%" height="15" fill="rgb(210,33,43)" fg:x="32283" fg:w="157"/><text x="66.5736%" y="831.50"></text></g><g><title>syscall_exit_to_user_mode (7 samples, 0.01%)</title><rect x="66.6317%" y="805" width="0.0144%" height="15" fill="rgb(216,116,54)" fg:x="32433" fg:w="7"/><text x="66.8817%" y="815.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (169 samples, 0.35%)</title><rect x="66.3174%" y="869" width="0.3472%" height="15" fill="rgb(249,92,24)" fg:x="32280" fg:w="169"/><text x="66.5674%" y="879.50"></text></g><g><title>syscall (169 samples, 0.35%)</title><rect x="66.3174%" y="853" width="0.3472%" height="15" fill="rgb(231,189,14)" fg:x="32280" fg:w="169"/><text x="66.5674%" y="863.50"></text></g><g><title>syscall_return_via_sysret (9 samples, 0.02%)</title><rect x="66.6461%" y="837" width="0.0185%" height="15" fill="rgb(230,8,41)" fg:x="32440" fg:w="9"/><text x="66.8961%" y="847.50"></text></g><g><title>tokio::runtime::park::wake (192 samples, 0.39%)</title><rect x="66.2907%" y="965" width="0.3945%" height="15" fill="rgb(249,7,27)" fg:x="32267" fg:w="192"/><text x="66.5407%" y="975.50"></text></g><g><title>tokio::runtime::park::Inner::unpark (189 samples, 0.39%)</title><rect x="66.2969%" y="949" width="0.3883%" height="15" fill="rgb(232,86,5)" fg:x="32270" fg:w="189"/><text x="66.5469%" y="959.50"></text></g><g><title>tokio::loom::std::parking_lot::Condvar::notify_one (180 samples, 0.37%)</title><rect x="66.3154%" y="933" width="0.3698%" height="15" fill="rgb(224,175,18)" fg:x="32279" fg:w="180"/><text x="66.5654%" y="943.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one (180 samples, 0.37%)</title><rect x="66.3154%" y="917" width="0.3698%" height="15" fill="rgb(220,129,12)" fg:x="32279" fg:w="180"/><text x="66.5654%" y="927.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (180 samples, 0.37%)</title><rect x="66.3154%" y="901" width="0.3698%" height="15" fill="rgb(210,19,36)" fg:x="32279" fg:w="180"/><text x="66.5654%" y="911.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (180 samples, 0.37%)</title><rect x="66.3154%" y="885" width="0.3698%" height="15" fill="rgb(219,96,14)" fg:x="32279" fg:w="180"/><text x="66.5654%" y="895.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::drop_reference (6 samples, 0.01%)</title><rect x="66.6852%" y="933" width="0.0123%" height="15" fill="rgb(249,106,1)" fg:x="32459" fg:w="6"/><text x="66.9352%" y="943.50"></text></g><g><title>tokio::runtime::task::state::State::ref_dec (6 samples, 0.01%)</title><rect x="66.6852%" y="917" width="0.0123%" height="15" fill="rgb(249,155,20)" fg:x="32459" fg:w="6"/><text x="66.9352%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (6 samples, 0.01%)</title><rect x="66.6852%" y="901" width="0.0123%" height="15" fill="rgb(244,168,9)" fg:x="32459" fg:w="6"/><text x="66.9352%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_sub (6 samples, 0.01%)</title><rect x="66.6852%" y="885" width="0.0123%" height="15" fill="rgb(216,23,50)" fg:x="32459" fg:w="6"/><text x="66.9352%" y="895.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::schedule (13 samples, 0.03%)</title><rect x="66.6995%" y="917" width="0.0267%" height="15" fill="rgb(224,219,20)" fg:x="32466" fg:w="13"/><text x="66.9495%" y="927.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (13 samples, 0.03%)</title><rect x="66.6995%" y="901" width="0.0267%" height="15" fill="rgb(222,156,15)" fg:x="32466" fg:w="13"/><text x="66.9495%" y="911.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current (13 samples, 0.03%)</title><rect x="66.6995%" y="885" width="0.0267%" height="15" fill="rgb(231,97,17)" fg:x="32466" fg:w="13"/><text x="66.9495%" y="895.50"></text></g><g><title>tokio::runtime::context::with_scheduler (12 samples, 0.02%)</title><rect x="66.7016%" y="869" width="0.0247%" height="15" fill="rgb(218,70,48)" fg:x="32467" fg:w="12"/><text x="66.9516%" y="879.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (9 samples, 0.02%)</title><rect x="66.7078%" y="853" width="0.0185%" height="15" fill="rgb(212,196,52)" fg:x="32470" fg:w="9"/><text x="66.9578%" y="863.50"></text></g><g><title>tokio::runtime::context::with_scheduler::{{closure}} (8 samples, 0.02%)</title><rect x="66.7098%" y="837" width="0.0164%" height="15" fill="rgb(243,203,18)" fg:x="32471" fg:w="8"/><text x="66.9598%" y="847.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::with (8 samples, 0.02%)</title><rect x="66.7098%" y="821" width="0.0164%" height="15" fill="rgb(252,125,41)" fg:x="32471" fg:w="8"/><text x="66.9598%" y="831.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current::{{closure}} (7 samples, 0.01%)</title><rect x="66.7119%" y="805" width="0.0144%" height="15" fill="rgb(223,180,33)" fg:x="32472" fg:w="7"/><text x="66.9619%" y="815.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task::{{closure}} (5 samples, 0.01%)</title><rect x="66.7160%" y="789" width="0.0103%" height="15" fill="rgb(254,159,46)" fg:x="32474" fg:w="5"/><text x="66.9660%" y="799.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::schedule (18 samples, 0.04%)</title><rect x="66.6975%" y="933" width="0.0370%" height="15" fill="rgb(254,38,10)" fg:x="32465" fg:w="18"/><text x="66.9475%" y="943.50"></text></g><g><title>tokio::runtime::io::driver::Driver::turn (2,431 samples, 4.99%)</title><rect x="61.7607%" y="1029" width="4.9944%" height="15" fill="rgb(208,217,32)" fg:x="30062" fg:w="2431"/><text x="62.0107%" y="1039.50">tokio:..</text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::wake (263 samples, 0.54%)</title><rect x="66.2147%" y="1013" width="0.5403%" height="15" fill="rgb(221,120,13)" fg:x="32230" fg:w="263"/><text x="66.4647%" y="1023.50"></text></g><g><title>tokio::util::wake_list::WakeList::wake_all (226 samples, 0.46%)</title><rect x="66.2907%" y="997" width="0.4643%" height="15" fill="rgb(246,54,52)" fg:x="32267" fg:w="226"/><text x="66.5407%" y="1007.50"></text></g><g><title>core::task::wake::Waker::wake (226 samples, 0.46%)</title><rect x="66.2907%" y="981" width="0.4643%" height="15" fill="rgb(242,34,25)" fg:x="32267" fg:w="226"/><text x="66.5407%" y="991.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (34 samples, 0.07%)</title><rect x="66.6852%" y="965" width="0.0699%" height="15" fill="rgb(247,209,9)" fg:x="32459" fg:w="34"/><text x="66.9352%" y="975.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::wake_by_val (34 samples, 0.07%)</title><rect x="66.6852%" y="949" width="0.0699%" height="15" fill="rgb(228,71,26)" fg:x="32459" fg:w="34"/><text x="66.9352%" y="959.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_val (10 samples, 0.02%)</title><rect x="66.7345%" y="933" width="0.0205%" height="15" fill="rgb(222,145,49)" fg:x="32483" fg:w="10"/><text x="66.9845%" y="943.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (8 samples, 0.02%)</title><rect x="66.7386%" y="917" width="0.0164%" height="15" fill="rgb(218,121,17)" fg:x="32485" fg:w="8"/><text x="66.9886%" y="927.50"></text></g><g><title>tokio::runtime::time::source::TimeSource::instant_to_tick (12 samples, 0.02%)</title><rect x="66.7653%" y="997" width="0.0247%" height="15" fill="rgb(244,50,7)" fg:x="32498" fg:w="12"/><text x="67.0153%" y="1007.50"></text></g><g><title>tokio::time::instant::Instant::checked_duration_since (8 samples, 0.02%)</title><rect x="66.7735%" y="981" width="0.0164%" height="15" fill="rgb(246,229,37)" fg:x="32502" fg:w="8"/><text x="67.0235%" y="991.50"></text></g><g><title>std::time::Instant::checked_duration_since (8 samples, 0.02%)</title><rect x="66.7735%" y="965" width="0.0164%" height="15" fill="rgb(225,18,5)" fg:x="32502" fg:w="8"/><text x="67.0235%" y="975.50"></text></g><g><title>std::sys::unix::time::Instant::checked_sub_instant (7 samples, 0.01%)</title><rect x="66.7756%" y="949" width="0.0144%" height="15" fill="rgb(213,204,8)" fg:x="32503" fg:w="7"/><text x="67.0256%" y="959.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (5 samples, 0.01%)</title><rect x="66.7797%" y="933" width="0.0103%" height="15" fill="rgb(238,103,6)" fg:x="32505" fg:w="5"/><text x="67.0297%" y="943.50"></text></g><g><title>std::sys::unix::time::Timespec::now (27 samples, 0.06%)</title><rect x="66.7899%" y="965" width="0.0555%" height="15" fill="rgb(222,25,35)" fg:x="32510" fg:w="27"/><text x="67.0399%" y="975.50"></text></g><g><title>__GI___clock_gettime (27 samples, 0.06%)</title><rect x="66.7899%" y="949" width="0.0555%" height="15" fill="rgb(213,203,35)" fg:x="32510" fg:w="27"/><text x="67.0399%" y="959.50"></text></g><g><title>__vdso_clock_gettime (14 samples, 0.03%)</title><rect x="66.8166%" y="933" width="0.0288%" height="15" fill="rgb(221,79,53)" fg:x="32523" fg:w="14"/><text x="67.0666%" y="943.50"></text></g><g><title>[[vdso]] (7 samples, 0.01%)</title><rect x="66.8310%" y="917" width="0.0144%" height="15" fill="rgb(243,200,35)" fg:x="32530" fg:w="7"/><text x="67.0810%" y="927.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process (46 samples, 0.09%)</title><rect x="66.7571%" y="1029" width="0.0945%" height="15" fill="rgb(248,60,25)" fg:x="32494" fg:w="46"/><text x="67.0071%" y="1039.50"></text></g><g><title>tokio::runtime::time::source::TimeSource::now (46 samples, 0.09%)</title><rect x="66.7571%" y="1013" width="0.0945%" height="15" fill="rgb(227,53,46)" fg:x="32494" fg:w="46"/><text x="67.0071%" y="1023.50"></text></g><g><title>tokio::time::clock::Clock::now (30 samples, 0.06%)</title><rect x="66.7899%" y="997" width="0.0616%" height="15" fill="rgb(216,120,32)" fg:x="32510" fg:w="30"/><text x="67.0399%" y="1007.50"></text></g><g><title>tokio::time::clock::now (30 samples, 0.06%)</title><rect x="66.7899%" y="981" width="0.0616%" height="15" fill="rgb(220,134,1)" fg:x="32510" fg:w="30"/><text x="67.0399%" y="991.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park_driver (2,690 samples, 5.53%)</title><rect x="61.3457%" y="1061" width="5.5265%" height="15" fill="rgb(237,168,5)" fg:x="29860" fg:w="2690"/><text x="61.5957%" y="1071.50">tokio::..</text></g><g><title>tokio::runtime::time::Driver::park_internal (2,556 samples, 5.25%)</title><rect x="61.6210%" y="1045" width="5.2512%" height="15" fill="rgb(231,100,33)" fg:x="29994" fg:w="2556"/><text x="61.8710%" y="1055.50">tokio:..</text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration_time (8 samples, 0.02%)</title><rect x="66.8557%" y="1029" width="0.0164%" height="15" fill="rgb(236,177,47)" fg:x="32542" fg:w="8"/><text x="67.1057%" y="1039.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (6 samples, 0.01%)</title><rect x="66.8598%" y="1013" width="0.0123%" height="15" fill="rgb(235,7,49)" fg:x="32544" fg:w="6"/><text x="67.1098%" y="1023.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Parker::park (4,033 samples, 8.29%)</title><rect x="58.6133%" y="1093" width="8.2856%" height="15" fill="rgb(232,119,22)" fg:x="28530" fg:w="4033"/><text x="58.8633%" y="1103.50">tokio::runti..</text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park (4,033 samples, 8.29%)</title><rect x="58.6133%" y="1077" width="8.2856%" height="15" fill="rgb(254,73,53)" fg:x="28530" fg:w="4033"/><text x="58.8633%" y="1087.50">tokio::runti..</text></g><g><title>tokio::util::try_lock::TryLock&lt;T&gt;::try_lock (13 samples, 0.03%)</title><rect x="66.8721%" y="1061" width="0.0267%" height="15" fill="rgb(251,35,20)" fg:x="32550" fg:w="13"/><text x="67.1221%" y="1071.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (13 samples, 0.03%)</title><rect x="66.8721%" y="1045" width="0.0267%" height="15" fill="rgb(241,119,20)" fg:x="32550" fg:w="13"/><text x="67.1221%" y="1055.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (13 samples, 0.03%)</title><rect x="66.8721%" y="1029" width="0.0267%" height="15" fill="rgb(207,102,14)" fg:x="32550" fg:w="13"/><text x="67.1221%" y="1039.50"></text></g><g><title>enqueue_task_fair (6 samples, 0.01%)</title><rect x="66.9296%" y="885" width="0.0123%" height="15" fill="rgb(248,201,50)" fg:x="32578" fg:w="6"/><text x="67.1796%" y="895.50"></text></g><g><title>ttwu_do_activate (14 samples, 0.03%)</title><rect x="66.9296%" y="901" width="0.0288%" height="15" fill="rgb(222,185,44)" fg:x="32578" fg:w="14"/><text x="67.1796%" y="911.50"></text></g><g><title>psi_task_change (8 samples, 0.02%)</title><rect x="66.9420%" y="885" width="0.0164%" height="15" fill="rgb(218,107,18)" fg:x="32584" fg:w="8"/><text x="67.1920%" y="895.50"></text></g><g><title>psi_group_change (8 samples, 0.02%)</title><rect x="66.9420%" y="869" width="0.0164%" height="15" fill="rgb(237,177,39)" fg:x="32584" fg:w="8"/><text x="67.1920%" y="879.50"></text></g><g><title>__x64_sys_futex (27 samples, 0.06%)</title><rect x="66.9050%" y="981" width="0.0555%" height="15" fill="rgb(246,69,6)" fg:x="32566" fg:w="27"/><text x="67.1550%" y="991.50"></text></g><g><title>do_futex (27 samples, 0.06%)</title><rect x="66.9050%" y="965" width="0.0555%" height="15" fill="rgb(234,208,37)" fg:x="32566" fg:w="27"/><text x="67.1550%" y="975.50"></text></g><g><title>futex_wake (27 samples, 0.06%)</title><rect x="66.9050%" y="949" width="0.0555%" height="15" fill="rgb(225,4,6)" fg:x="32566" fg:w="27"/><text x="67.1550%" y="959.50"></text></g><g><title>wake_up_q (21 samples, 0.04%)</title><rect x="66.9173%" y="933" width="0.0431%" height="15" fill="rgb(233,45,0)" fg:x="32572" fg:w="21"/><text x="67.1673%" y="943.50"></text></g><g><title>try_to_wake_up (21 samples, 0.04%)</title><rect x="66.9173%" y="917" width="0.0431%" height="15" fill="rgb(226,136,5)" fg:x="32572" fg:w="21"/><text x="67.1673%" y="927.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (32 samples, 0.07%)</title><rect x="66.8988%" y="1013" width="0.0657%" height="15" fill="rgb(211,91,47)" fg:x="32563" fg:w="32"/><text x="67.1488%" y="1023.50"></text></g><g><title>do_syscall_64 (30 samples, 0.06%)</title><rect x="66.9029%" y="997" width="0.0616%" height="15" fill="rgb(242,88,51)" fg:x="32565" fg:w="30"/><text x="67.1529%" y="1007.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (35 samples, 0.07%)</title><rect x="66.8988%" y="1045" width="0.0719%" height="15" fill="rgb(230,91,28)" fg:x="32563" fg:w="35"/><text x="67.1488%" y="1055.50"></text></g><g><title>syscall (35 samples, 0.07%)</title><rect x="66.8988%" y="1029" width="0.0719%" height="15" fill="rgb(254,186,29)" fg:x="32563" fg:w="35"/><text x="67.1488%" y="1039.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (39 samples, 0.08%)</title><rect x="66.8988%" y="1077" width="0.0801%" height="15" fill="rgb(238,6,4)" fg:x="32563" fg:w="39"/><text x="67.1488%" y="1087.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (39 samples, 0.08%)</title><rect x="66.8988%" y="1061" width="0.0801%" height="15" fill="rgb(221,151,16)" fg:x="32563" fg:w="39"/><text x="67.1488%" y="1071.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_parked_local (43 samples, 0.09%)</title><rect x="66.8988%" y="1093" width="0.0883%" height="15" fill="rgb(251,143,52)" fg:x="32563" fg:w="43"/><text x="67.1488%" y="1103.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (4,125 samples, 8.47%)</title><rect x="58.5331%" y="1109" width="8.4746%" height="15" fill="rgb(206,90,15)" fg:x="28491" fg:w="4125"/><text x="58.7831%" y="1119.50">tokio::runti..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::should_notify_others (10 samples, 0.02%)</title><rect x="66.9872%" y="1093" width="0.0205%" height="15" fill="rgb(218,35,8)" fg:x="32606" fg:w="10"/><text x="67.2372%" y="1103.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Local&lt;T&gt;::len (8 samples, 0.02%)</title><rect x="66.9913%" y="1077" width="0.0164%" height="15" fill="rgb(239,215,6)" fg:x="32608" fg:w="8"/><text x="67.2413%" y="1087.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Inner&lt;T&gt;::len (8 samples, 0.02%)</title><rect x="66.9913%" y="1061" width="0.0164%" height="15" fill="rgb(245,116,39)" fg:x="32608" fg:w="8"/><text x="67.2413%" y="1071.50"></text></g><g><title>core::sync::atomic::AtomicU64::load (8 samples, 0.02%)</title><rect x="66.9913%" y="1045" width="0.0164%" height="15" fill="rgb(242,65,28)" fg:x="32608" fg:w="8"/><text x="67.2413%" y="1055.50"></text></g><g><title>core::sync::atomic::atomic_load (8 samples, 0.02%)</title><rect x="66.9913%" y="1029" width="0.0164%" height="15" fill="rgb(252,132,53)" fg:x="32608" fg:w="8"/><text x="67.2413%" y="1039.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (20 samples, 0.04%)</title><rect x="67.0077%" y="1109" width="0.0411%" height="15" fill="rgb(224,159,50)" fg:x="32616" fg:w="20"/><text x="67.2577%" y="1119.50"></text></g><g><title>tokio::runtime::coop::budget (20 samples, 0.04%)</title><rect x="67.0077%" y="1093" width="0.0411%" height="15" fill="rgb(224,93,4)" fg:x="32616" fg:w="20"/><text x="67.2577%" y="1103.50"></text></g><g><title>tokio::runtime::coop::with_budget (20 samples, 0.04%)</title><rect x="67.0077%" y="1077" width="0.0411%" height="15" fill="rgb(208,81,34)" fg:x="32616" fg:w="20"/><text x="67.2577%" y="1087.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task::{{closure}} (20 samples, 0.04%)</title><rect x="67.0077%" y="1061" width="0.0411%" height="15" fill="rgb(233,92,54)" fg:x="32616" fg:w="20"/><text x="67.2577%" y="1071.50"></text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (20 samples, 0.04%)</title><rect x="67.0077%" y="1045" width="0.0411%" height="15" fill="rgb(237,21,14)" fg:x="32616" fg:w="20"/><text x="67.2577%" y="1055.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (20 samples, 0.04%)</title><rect x="67.0077%" y="1029" width="0.0411%" height="15" fill="rgb(249,128,51)" fg:x="32616" fg:w="20"/><text x="67.2577%" y="1039.50"></text></g><g><title>tokio::runtime::task::raw::poll (20 samples, 0.04%)</title><rect x="67.0077%" y="1013" width="0.0411%" height="15" fill="rgb(223,129,24)" fg:x="32616" fg:w="20"/><text x="67.2577%" y="1023.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (20 samples, 0.04%)</title><rect x="67.0077%" y="997" width="0.0411%" height="15" fill="rgb(231,168,25)" fg:x="32616" fg:w="20"/><text x="67.2577%" y="1007.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete (20 samples, 0.04%)</title><rect x="67.0077%" y="981" width="0.0411%" height="15" fill="rgb(224,39,20)" fg:x="32616" fg:w="20"/><text x="67.2577%" y="991.50"></text></g><g><title>engine::engine::match_server::MatchServer::run::{{closure}}::{{closure}} (20 samples, 0.04%)</title><rect x="67.0077%" y="965" width="0.0411%" height="15" fill="rgb(225,152,53)" fg:x="32616" fg:w="20"/><text x="67.2577%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::io::registration::Registration&gt; (16 samples, 0.03%)</title><rect x="67.0159%" y="949" width="0.0329%" height="15" fill="rgb(252,17,24)" fg:x="32620" fg:w="16"/><text x="67.2659%" y="959.50"></text></g><g><title>__GI___close (16 samples, 0.03%)</title><rect x="67.0159%" y="933" width="0.0329%" height="15" fill="rgb(250,114,30)" fg:x="32620" fg:w="16"/><text x="67.2659%" y="943.50"></text></g><g><title>entry_SYSCALL_64 (16 samples, 0.03%)</title><rect x="67.0159%" y="917" width="0.0329%" height="15" fill="rgb(229,5,4)" fg:x="32620" fg:w="16"/><text x="67.2659%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (8 samples, 0.02%)</title><rect x="67.0734%" y="1093" width="0.0164%" height="15" fill="rgb(225,176,49)" fg:x="32648" fg:w="8"/><text x="67.3234%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (8 samples, 0.02%)</title><rect x="67.0734%" y="1077" width="0.0164%" height="15" fill="rgb(224,221,49)" fg:x="32648" fg:w="8"/><text x="67.3234%" y="1087.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.02%)</title><rect x="67.0734%" y="1061" width="0.0164%" height="15" fill="rgb(253,169,27)" fg:x="32648" fg:w="8"/><text x="67.3234%" y="1071.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (8 samples, 0.02%)</title><rect x="67.0734%" y="1045" width="0.0164%" height="15" fill="rgb(211,206,16)" fg:x="32648" fg:w="8"/><text x="67.3234%" y="1055.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (8 samples, 0.02%)</title><rect x="67.0734%" y="1029" width="0.0164%" height="15" fill="rgb(244,87,35)" fg:x="32648" fg:w="8"/><text x="67.3234%" y="1039.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (8 samples, 0.02%)</title><rect x="67.0734%" y="1013" width="0.0164%" height="15" fill="rgb(246,28,10)" fg:x="32648" fg:w="8"/><text x="67.3234%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (16 samples, 0.03%)</title><rect x="67.0899%" y="1045" width="0.0329%" height="15" fill="rgb(229,12,44)" fg:x="32656" fg:w="16"/><text x="67.3399%" y="1055.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (16 samples, 0.03%)</title><rect x="67.0899%" y="1029" width="0.0329%" height="15" fill="rgb(210,145,37)" fg:x="32656" fg:w="16"/><text x="67.3399%" y="1039.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (17 samples, 0.03%)</title><rect x="67.0899%" y="1093" width="0.0349%" height="15" fill="rgb(227,112,52)" fg:x="32656" fg:w="17"/><text x="67.3399%" y="1103.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (17 samples, 0.03%)</title><rect x="67.0899%" y="1077" width="0.0349%" height="15" fill="rgb(238,155,34)" fg:x="32656" fg:w="17"/><text x="67.3399%" y="1087.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (17 samples, 0.03%)</title><rect x="67.0899%" y="1061" width="0.0349%" height="15" fill="rgb(239,226,36)" fg:x="32656" fg:w="17"/><text x="67.3399%" y="1071.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::maintenance (38 samples, 0.08%)</title><rect x="67.0488%" y="1109" width="0.0781%" height="15" fill="rgb(230,16,23)" fg:x="32636" fg:w="38"/><text x="67.2988%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (9 samples, 0.02%)</title><rect x="67.1330%" y="1077" width="0.0185%" height="15" fill="rgb(236,171,36)" fg:x="32677" fg:w="9"/><text x="67.3830%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (9 samples, 0.02%)</title><rect x="67.1330%" y="1061" width="0.0185%" height="15" fill="rgb(221,22,14)" fg:x="32677" fg:w="9"/><text x="67.3830%" y="1071.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.02%)</title><rect x="67.1330%" y="1045" width="0.0185%" height="15" fill="rgb(242,43,11)" fg:x="32677" fg:w="9"/><text x="67.3830%" y="1055.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (9 samples, 0.02%)</title><rect x="67.1330%" y="1029" width="0.0185%" height="15" fill="rgb(232,69,23)" fg:x="32677" fg:w="9"/><text x="67.3830%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (8 samples, 0.02%)</title><rect x="67.1351%" y="1013" width="0.0164%" height="15" fill="rgb(216,180,54)" fg:x="32678" fg:w="8"/><text x="67.3851%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (8 samples, 0.02%)</title><rect x="67.1351%" y="997" width="0.0164%" height="15" fill="rgb(216,5,24)" fg:x="32678" fg:w="8"/><text x="67.3851%" y="1007.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::is_parked (20 samples, 0.04%)</title><rect x="67.1310%" y="1093" width="0.0411%" height="15" fill="rgb(225,89,9)" fg:x="32676" fg:w="20"/><text x="67.3810%" y="1103.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (7 samples, 0.01%)</title><rect x="67.1577%" y="1077" width="0.0144%" height="15" fill="rgb(243,75,33)" fg:x="32689" fg:w="7"/><text x="67.4077%" y="1087.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (7 samples, 0.01%)</title><rect x="67.1577%" y="1061" width="0.0144%" height="15" fill="rgb(247,141,45)" fg:x="32689" fg:w="7"/><text x="67.4077%" y="1071.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (7 samples, 0.01%)</title><rect x="67.1577%" y="1045" width="0.0144%" height="15" fill="rgb(232,177,36)" fg:x="32689" fg:w="7"/><text x="67.4077%" y="1055.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (7 samples, 0.01%)</title><rect x="67.1577%" y="1029" width="0.0144%" height="15" fill="rgb(219,125,36)" fg:x="32689" fg:w="7"/><text x="67.4077%" y="1039.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (7 samples, 0.01%)</title><rect x="67.1577%" y="1013" width="0.0144%" height="15" fill="rgb(227,94,9)" fg:x="32689" fg:w="7"/><text x="67.4077%" y="1023.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::unpark_worker_by_id (7 samples, 0.01%)</title><rect x="67.1721%" y="1093" width="0.0144%" height="15" fill="rgb(240,34,52)" fg:x="32696" fg:w="7"/><text x="67.4221%" y="1103.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_from_parked (32 samples, 0.07%)</title><rect x="67.1269%" y="1109" width="0.0657%" height="15" fill="rgb(216,45,12)" fg:x="32674" fg:w="32"/><text x="67.3769%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (10 samples, 0.02%)</title><rect x="67.1926%" y="1077" width="0.0205%" height="15" fill="rgb(246,21,19)" fg:x="32706" fg:w="10"/><text x="67.4426%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (10 samples, 0.02%)</title><rect x="67.1926%" y="1061" width="0.0205%" height="15" fill="rgb(213,98,42)" fg:x="32706" fg:w="10"/><text x="67.4426%" y="1071.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.02%)</title><rect x="67.1926%" y="1045" width="0.0205%" height="15" fill="rgb(250,136,47)" fg:x="32706" fg:w="10"/><text x="67.4426%" y="1055.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (10 samples, 0.02%)</title><rect x="67.1926%" y="1029" width="0.0205%" height="15" fill="rgb(251,124,27)" fg:x="32706" fg:w="10"/><text x="67.4426%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (10 samples, 0.02%)</title><rect x="67.1926%" y="1013" width="0.0205%" height="15" fill="rgb(229,180,14)" fg:x="32706" fg:w="10"/><text x="67.4426%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (10 samples, 0.02%)</title><rect x="67.1926%" y="997" width="0.0205%" height="15" fill="rgb(245,216,25)" fg:x="32706" fg:w="10"/><text x="67.4426%" y="1007.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::transition_worker_to_parked (16 samples, 0.03%)</title><rect x="67.1926%" y="1093" width="0.0329%" height="15" fill="rgb(251,43,5)" fg:x="32706" fg:w="16"/><text x="67.4426%" y="1103.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::State::dec_num_unparked (5 samples, 0.01%)</title><rect x="67.2152%" y="1077" width="0.0103%" height="15" fill="rgb(250,128,24)" fg:x="32717" fg:w="5"/><text x="67.4652%" y="1087.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (5 samples, 0.01%)</title><rect x="67.2152%" y="1061" width="0.0103%" height="15" fill="rgb(217,117,27)" fg:x="32717" fg:w="5"/><text x="67.4652%" y="1071.50"></text></g><g><title>core::sync::atomic::atomic_sub (5 samples, 0.01%)</title><rect x="67.2152%" y="1045" width="0.0103%" height="15" fill="rgb(245,147,4)" fg:x="32717" fg:w="5"/><text x="67.4652%" y="1055.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_if_work_pending (8 samples, 0.02%)</title><rect x="67.2255%" y="1093" width="0.0164%" height="15" fill="rgb(242,201,35)" fg:x="32722" fg:w="8"/><text x="67.4755%" y="1103.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park (4,276 samples, 8.78%)</title><rect x="58.4653%" y="1125" width="8.7848%" height="15" fill="rgb(218,181,1)" fg:x="28458" fg:w="4276"/><text x="58.7153%" y="1135.50">tokio::runti..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_to_parked (28 samples, 0.06%)</title><rect x="67.1926%" y="1109" width="0.0575%" height="15" fill="rgb(222,6,29)" fg:x="32706" fg:w="28"/><text x="67.4426%" y="1119.50"></text></g><g><title>tokio::runtime::context::budget (9 samples, 0.02%)</title><rect x="67.2686%" y="1077" width="0.0185%" height="15" fill="rgb(208,186,3)" fg:x="32743" fg:w="9"/><text x="67.5186%" y="1087.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (9 samples, 0.02%)</title><rect x="67.2686%" y="1061" width="0.0185%" height="15" fill="rgb(216,36,26)" fg:x="32743" fg:w="9"/><text x="67.5186%" y="1071.50"></text></g><g><title>tokio::runtime::context::budget::{{closure}} (5 samples, 0.01%)</title><rect x="67.2768%" y="1045" width="0.0103%" height="15" fill="rgb(248,201,23)" fg:x="32747" fg:w="5"/><text x="67.5268%" y="1055.50"></text></g><g><title>tokio::runtime::coop::with_budget::{{closure}} (5 samples, 0.01%)</title><rect x="67.2768%" y="1029" width="0.0103%" height="15" fill="rgb(251,170,31)" fg:x="32747" fg:w="5"/><text x="67.5268%" y="1039.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (22 samples, 0.05%)</title><rect x="67.2912%" y="1061" width="0.0452%" height="15" fill="rgb(207,110,25)" fg:x="32754" fg:w="22"/><text x="67.5412%" y="1071.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (22 samples, 0.05%)</title><rect x="67.2912%" y="1045" width="0.0452%" height="15" fill="rgb(250,54,15)" fg:x="32754" fg:w="22"/><text x="67.5412%" y="1055.50"></text></g><g><title>core::cell::BorrowRefMut::new (22 samples, 0.05%)</title><rect x="67.2912%" y="1029" width="0.0452%" height="15" fill="rgb(227,68,33)" fg:x="32754" fg:w="22"/><text x="67.5412%" y="1039.50"></text></g><g><title>core::ptr::read (7 samples, 0.01%)</title><rect x="67.3364%" y="1029" width="0.0144%" height="15" fill="rgb(238,34,41)" fg:x="32776" fg:w="7"/><text x="67.5864%" y="1039.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (9 samples, 0.02%)</title><rect x="67.3364%" y="1061" width="0.0185%" height="15" fill="rgb(220,11,15)" fg:x="32776" fg:w="9"/><text x="67.5864%" y="1071.50"></text></g><g><title>core::mem::replace (9 samples, 0.02%)</title><rect x="67.3364%" y="1045" width="0.0185%" height="15" fill="rgb(246,111,35)" fg:x="32776" fg:w="9"/><text x="67.5864%" y="1055.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::reset_lifo_enabled (12 samples, 0.02%)</title><rect x="67.3570%" y="1061" width="0.0247%" height="15" fill="rgb(209,88,53)" fg:x="32786" fg:w="12"/><text x="67.6070%" y="1071.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (8 samples, 0.02%)</title><rect x="67.3919%" y="1029" width="0.0164%" height="15" fill="rgb(231,185,47)" fg:x="32803" fg:w="8"/><text x="67.6419%" y="1039.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (8 samples, 0.02%)</title><rect x="67.3919%" y="1013" width="0.0164%" height="15" fill="rgb(233,154,1)" fg:x="32803" fg:w="8"/><text x="67.6419%" y="1023.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (8 samples, 0.02%)</title><rect x="67.3919%" y="997" width="0.0164%" height="15" fill="rgb(225,15,46)" fg:x="32803" fg:w="8"/><text x="67.6419%" y="1007.50"></text></g><g><title>syscall (8 samples, 0.02%)</title><rect x="67.3919%" y="981" width="0.0164%" height="15" fill="rgb(211,135,41)" fg:x="32803" fg:w="8"/><text x="67.6419%" y="991.50"></text></g><g><title>entry_SYSCALL_64 (8 samples, 0.02%)</title><rect x="67.3919%" y="965" width="0.0164%" height="15" fill="rgb(208,54,0)" fg:x="32803" fg:w="8"/><text x="67.6419%" y="975.50"></text></g><g><title>__x64_sys_futex (6 samples, 0.01%)</title><rect x="67.4741%" y="917" width="0.0123%" height="15" fill="rgb(244,136,14)" fg:x="32843" fg:w="6"/><text x="67.7241%" y="927.50"></text></g><g><title>do_futex (6 samples, 0.01%)</title><rect x="67.4741%" y="901" width="0.0123%" height="15" fill="rgb(241,56,14)" fg:x="32843" fg:w="6"/><text x="67.7241%" y="911.50"></text></g><g><title>futex_wake (6 samples, 0.01%)</title><rect x="67.4741%" y="885" width="0.0123%" height="15" fill="rgb(205,80,24)" fg:x="32843" fg:w="6"/><text x="67.7241%" y="895.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (25 samples, 0.05%)</title><rect x="67.4474%" y="949" width="0.0514%" height="15" fill="rgb(220,57,4)" fg:x="32830" fg:w="25"/><text x="67.6974%" y="959.50"></text></g><g><title>do_syscall_64 (13 samples, 0.03%)</title><rect x="67.4720%" y="933" width="0.0267%" height="15" fill="rgb(226,193,50)" fg:x="32842" fg:w="13"/><text x="67.7220%" y="943.50"></text></g><g><title>syscall_exit_to_user_mode (5 samples, 0.01%)</title><rect x="67.4884%" y="917" width="0.0103%" height="15" fill="rgb(231,168,22)" fg:x="32850" fg:w="5"/><text x="67.7384%" y="927.50"></text></g><g><title>__GI___lll_lock_wake_private (35 samples, 0.07%)</title><rect x="67.4412%" y="965" width="0.0719%" height="15" fill="rgb(254,215,14)" fg:x="32827" fg:w="35"/><text x="67.6912%" y="975.50"></text></g><g><title>syscall_return_via_sysret (7 samples, 0.01%)</title><rect x="67.4987%" y="949" width="0.0144%" height="15" fill="rgb(211,115,16)" fg:x="32855" fg:w="7"/><text x="67.7487%" y="959.50"></text></g><g><title>futex_wait_queue (10 samples, 0.02%)</title><rect x="67.7001%" y="837" width="0.0205%" height="15" fill="rgb(236,210,16)" fg:x="32953" fg:w="10"/><text x="67.9501%" y="847.50"></text></g><g><title>schedule (10 samples, 0.02%)</title><rect x="67.7001%" y="821" width="0.0205%" height="15" fill="rgb(221,94,12)" fg:x="32953" fg:w="10"/><text x="67.9501%" y="831.50"></text></g><g><title>__schedule (10 samples, 0.02%)</title><rect x="67.7001%" y="805" width="0.0205%" height="15" fill="rgb(235,218,49)" fg:x="32953" fg:w="10"/><text x="67.9501%" y="815.50"></text></g><g><title>__x64_sys_futex (20 samples, 0.04%)</title><rect x="67.6918%" y="885" width="0.0411%" height="15" fill="rgb(217,114,14)" fg:x="32949" fg:w="20"/><text x="67.9418%" y="895.50"></text></g><g><title>do_futex (20 samples, 0.04%)</title><rect x="67.6918%" y="869" width="0.0411%" height="15" fill="rgb(216,145,22)" fg:x="32949" fg:w="20"/><text x="67.9418%" y="879.50"></text></g><g><title>futex_wait (18 samples, 0.04%)</title><rect x="67.6959%" y="853" width="0.0370%" height="15" fill="rgb(217,112,39)" fg:x="32951" fg:w="18"/><text x="67.9459%" y="863.50"></text></g><g><title>futex_wait_setup (6 samples, 0.01%)</title><rect x="67.7206%" y="837" width="0.0123%" height="15" fill="rgb(225,85,32)" fg:x="32963" fg:w="6"/><text x="67.9706%" y="847.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (27 samples, 0.06%)</title><rect x="67.6816%" y="917" width="0.0555%" height="15" fill="rgb(245,209,47)" fg:x="32944" fg:w="27"/><text x="67.9316%" y="927.50"></text></g><g><title>do_syscall_64 (22 samples, 0.05%)</title><rect x="67.6918%" y="901" width="0.0452%" height="15" fill="rgb(218,220,15)" fg:x="32949" fg:w="22"/><text x="67.9418%" y="911.50"></text></g><g><title>__GI___lll_lock_wait_private (36 samples, 0.07%)</title><rect x="67.6733%" y="949" width="0.0740%" height="15" fill="rgb(222,202,31)" fg:x="32940" fg:w="36"/><text x="67.9233%" y="959.50"></text></g><g><title>futex_wait (35 samples, 0.07%)</title><rect x="67.6754%" y="933" width="0.0719%" height="15" fill="rgb(243,203,4)" fg:x="32941" fg:w="35"/><text x="67.9254%" y="943.50"></text></g><g><title>syscall_return_via_sysret (5 samples, 0.01%)</title><rect x="67.7370%" y="917" width="0.0103%" height="15" fill="rgb(237,92,17)" fg:x="32971" fg:w="5"/><text x="67.9870%" y="927.50"></text></g><g><title>_int_free (132 samples, 0.27%)</title><rect x="67.5131%" y="965" width="0.2712%" height="15" fill="rgb(231,119,7)" fg:x="32862" fg:w="132"/><text x="67.7631%" y="975.50"></text></g><g><title>unlink_chunk (16 samples, 0.03%)</title><rect x="67.7514%" y="949" width="0.0329%" height="15" fill="rgb(237,82,41)" fg:x="32978" fg:w="16"/><text x="68.0014%" y="959.50"></text></g><g><title>__GI___libc_free (179 samples, 0.37%)</title><rect x="67.4186%" y="981" width="0.3677%" height="15" fill="rgb(226,81,48)" fg:x="32816" fg:w="179"/><text x="67.6686%" y="991.50"></text></g><g><title>__rdl_dealloc (6 samples, 0.01%)</title><rect x="67.7863%" y="981" width="0.0123%" height="15" fill="rgb(234,70,51)" fg:x="32995" fg:w="6"/><text x="68.0363%" y="991.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (6 samples, 0.01%)</title><rect x="67.7863%" y="965" width="0.0123%" height="15" fill="rgb(251,86,4)" fg:x="32995" fg:w="6"/><text x="68.0363%" y="975.50"></text></g><g><title>engine::engine::match_server::MatchServer::run::{{closure}}::{{closure}} (5 samples, 0.01%)</title><rect x="67.8007%" y="981" width="0.0103%" height="15" fill="rgb(244,144,28)" fg:x="33002" fg:w="5"/><text x="68.0507%" y="991.50"></text></g><g><title>__memcpy_avx_unaligned_erms (20 samples, 0.04%)</title><rect x="67.8192%" y="853" width="0.0411%" height="15" fill="rgb(232,161,39)" fg:x="33011" fg:w="20"/><text x="68.0692%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::TaskIdGuard&gt; (5 samples, 0.01%)</title><rect x="67.8603%" y="853" width="0.0103%" height="15" fill="rgb(247,34,51)" fg:x="33031" fg:w="5"/><text x="68.1103%" y="863.50"></text></g><g><title>&lt;tokio::runtime::task::core::TaskIdGuard as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="67.8603%" y="837" width="0.0103%" height="15" fill="rgb(225,132,2)" fg:x="33031" fg:w="5"/><text x="68.1103%" y="847.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (25 samples, 0.05%)</title><rect x="67.8706%" y="853" width="0.0514%" height="15" fill="rgb(209,159,44)" fg:x="33036" fg:w="25"/><text x="68.1206%" y="863.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage::{{closure}} (25 samples, 0.05%)</title><rect x="67.8706%" y="837" width="0.0514%" height="15" fill="rgb(251,214,1)" fg:x="33036" fg:w="25"/><text x="68.1206%" y="847.50"></text></g><g><title>__memcpy_avx_unaligned_erms (25 samples, 0.05%)</title><rect x="67.8706%" y="821" width="0.0514%" height="15" fill="rgb(247,84,47)" fg:x="33036" fg:w="25"/><text x="68.1206%" y="831.50"></text></g><g><title>std::panic::catch_unwind (58 samples, 0.12%)</title><rect x="67.8110%" y="981" width="0.1192%" height="15" fill="rgb(240,111,43)" fg:x="33007" fg:w="58"/><text x="68.0610%" y="991.50"></text></g><g><title>std::panicking::try (58 samples, 0.12%)</title><rect x="67.8110%" y="965" width="0.1192%" height="15" fill="rgb(215,214,35)" fg:x="33007" fg:w="58"/><text x="68.0610%" y="975.50"></text></g><g><title>std::panicking::try::do_call (58 samples, 0.12%)</title><rect x="67.8110%" y="949" width="0.1192%" height="15" fill="rgb(248,207,23)" fg:x="33007" fg:w="58"/><text x="68.0610%" y="959.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (58 samples, 0.12%)</title><rect x="67.8110%" y="933" width="0.1192%" height="15" fill="rgb(214,186,4)" fg:x="33007" fg:w="58"/><text x="68.0610%" y="943.50"></text></g><g><title>core::ops::function::FnOnce::call_once (58 samples, 0.12%)</title><rect x="67.8110%" y="917" width="0.1192%" height="15" fill="rgb(220,133,22)" fg:x="33007" fg:w="58"/><text x="68.0610%" y="927.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete::{{closure}} (58 samples, 0.12%)</title><rect x="67.8110%" y="901" width="0.1192%" height="15" fill="rgb(239,134,19)" fg:x="33007" fg:w="58"/><text x="68.0610%" y="911.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::drop_future_or_output (57 samples, 0.12%)</title><rect x="67.8130%" y="885" width="0.1171%" height="15" fill="rgb(250,140,9)" fg:x="33008" fg:w="57"/><text x="68.0630%" y="895.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage (56 samples, 0.12%)</title><rect x="67.8151%" y="869" width="0.1150%" height="15" fill="rgb(225,59,14)" fg:x="33009" fg:w="56"/><text x="68.0651%" y="879.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::dealloc (7 samples, 0.01%)</title><rect x="67.9301%" y="981" width="0.0144%" height="15" fill="rgb(214,152,51)" fg:x="33065" fg:w="7"/><text x="68.1801%" y="991.50"></text></g><g><title>core::mem::drop (7 samples, 0.01%)</title><rect x="67.9301%" y="965" width="0.0144%" height="15" fill="rgb(251,227,43)" fg:x="33065" fg:w="7"/><text x="68.1801%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;tokio::runtime::task::core::Cell&lt;engine::engine::match_server::MatchServer::run::{{closure}}::{{closure}},alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;&gt;&gt; (7 samples, 0.01%)</title><rect x="67.9301%" y="949" width="0.0144%" height="15" fill="rgb(241,96,17)" fg:x="33065" fg:w="7"/><text x="68.1801%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Cell&lt;engine::engine::match_server::MatchServer::run::{{closure}}::{{closure}},alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;&gt; (6 samples, 0.01%)</title><rect x="67.9322%" y="933" width="0.0123%" height="15" fill="rgb(234,198,43)" fg:x="33066" fg:w="6"/><text x="68.1822%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Core&lt;engine::engine::match_server::MatchServer::run::{{closure}}::{{closure}},alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;&gt; (5 samples, 0.01%)</title><rect x="67.9343%" y="917" width="0.0103%" height="15" fill="rgb(220,108,29)" fg:x="33067" fg:w="5"/><text x="68.1843%" y="927.50"></text></g><g><title>&lt;core::num::nonzero::NonZeroU64 as core::cmp::PartialEq&gt;::eq (8 samples, 0.02%)</title><rect x="67.9486%" y="933" width="0.0164%" height="15" fill="rgb(226,163,33)" fg:x="33074" fg:w="8"/><text x="68.1986%" y="943.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::release (10 samples, 0.02%)</title><rect x="67.9486%" y="965" width="0.0205%" height="15" fill="rgb(205,194,45)" fg:x="33074" fg:w="10"/><text x="68.1986%" y="975.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::remove (10 samples, 0.02%)</title><rect x="67.9486%" y="949" width="0.0205%" height="15" fill="rgb(206,143,44)" fg:x="33074" fg:w="10"/><text x="68.1986%" y="959.50"></text></g><g><title>&lt;tokio::runtime::task::Task&lt;S&gt; as tokio::util::sharded_list::ShardedListItem&gt;::get_shard_id (12 samples, 0.02%)</title><rect x="67.9692%" y="949" width="0.0247%" height="15" fill="rgb(236,136,36)" fg:x="33084" fg:w="12"/><text x="68.2192%" y="959.50"></text></g><g><title>tokio::runtime::task::core::Header::get_id (12 samples, 0.02%)</title><rect x="67.9692%" y="933" width="0.0247%" height="15" fill="rgb(249,172,42)" fg:x="33084" fg:w="12"/><text x="68.2192%" y="943.50"></text></g><g><title>tokio::runtime::task::core::Header::get_id_ptr (12 samples, 0.02%)</title><rect x="67.9692%" y="917" width="0.0247%" height="15" fill="rgb(216,139,23)" fg:x="33084" fg:w="12"/><text x="68.2192%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::util::linked_list::LinkedList&lt;tokio::runtime::task::Task&lt;alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt;&gt;,tokio::runtime::task::core::Header&gt;&gt;&gt; (8 samples, 0.02%)</title><rect x="67.9938%" y="949" width="0.0164%" height="15" fill="rgb(207,166,20)" fg:x="33096" fg:w="8"/><text x="68.2438%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::util::linked_list::LinkedList&lt;tokio::runtime::task::Task&lt;alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt;&gt;,tokio::runtime::task::core::Header&gt;&gt;&gt; (8 samples, 0.02%)</title><rect x="67.9938%" y="933" width="0.0164%" height="15" fill="rgb(210,209,22)" fg:x="33096" fg:w="8"/><text x="68.2438%" y="943.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.02%)</title><rect x="67.9938%" y="917" width="0.0164%" height="15" fill="rgb(232,118,20)" fg:x="33096" fg:w="8"/><text x="68.2438%" y="927.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (8 samples, 0.02%)</title><rect x="67.9938%" y="901" width="0.0164%" height="15" fill="rgb(238,113,42)" fg:x="33096" fg:w="8"/><text x="68.2438%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (8 samples, 0.02%)</title><rect x="67.9938%" y="885" width="0.0164%" height="15" fill="rgb(231,42,5)" fg:x="33096" fg:w="8"/><text x="68.2438%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (8 samples, 0.02%)</title><rect x="67.9938%" y="869" width="0.0164%" height="15" fill="rgb(243,166,24)" fg:x="33096" fg:w="8"/><text x="68.2438%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (9 samples, 0.02%)</title><rect x="68.0103%" y="949" width="0.0185%" height="15" fill="rgb(237,226,12)" fg:x="33104" fg:w="9"/><text x="68.2603%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_sub (9 samples, 0.02%)</title><rect x="68.0103%" y="933" width="0.0185%" height="15" fill="rgb(229,133,24)" fg:x="33104" fg:w="9"/><text x="68.2603%" y="943.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::release (69 samples, 0.14%)</title><rect x="67.9445%" y="981" width="0.1418%" height="15" fill="rgb(238,33,43)" fg:x="33072" fg:w="69"/><text x="68.1945%" y="991.50"></text></g><g><title>tokio::util::sharded_list::ShardedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::remove (57 samples, 0.12%)</title><rect x="67.9692%" y="965" width="0.1171%" height="15" fill="rgb(227,59,38)" fg:x="33084" fg:w="57"/><text x="68.2192%" y="975.50"></text></g><g><title>tokio::util::sharded_list::ShardedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::shard_inner (28 samples, 0.06%)</title><rect x="68.0288%" y="949" width="0.0575%" height="15" fill="rgb(230,97,0)" fg:x="33113" fg:w="28"/><text x="68.2788%" y="959.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (28 samples, 0.06%)</title><rect x="68.0288%" y="933" width="0.0575%" height="15" fill="rgb(250,173,50)" fg:x="33113" fg:w="28"/><text x="68.2788%" y="943.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (28 samples, 0.06%)</title><rect x="68.0288%" y="917" width="0.0575%" height="15" fill="rgb(240,15,50)" fg:x="33113" fg:w="28"/><text x="68.2788%" y="927.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (28 samples, 0.06%)</title><rect x="68.0288%" y="901" width="0.0575%" height="15" fill="rgb(221,93,22)" fg:x="33113" fg:w="28"/><text x="68.2788%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (28 samples, 0.06%)</title><rect x="68.0288%" y="885" width="0.0575%" height="15" fill="rgb(245,180,53)" fg:x="33113" fg:w="28"/><text x="68.2788%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (28 samples, 0.06%)</title><rect x="68.0288%" y="869" width="0.0575%" height="15" fill="rgb(231,88,51)" fg:x="33113" fg:w="28"/><text x="68.2788%" y="879.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_complete (9 samples, 0.02%)</title><rect x="68.0863%" y="981" width="0.0185%" height="15" fill="rgb(240,58,21)" fg:x="33141" fg:w="9"/><text x="68.3363%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_xor (9 samples, 0.02%)</title><rect x="68.0863%" y="965" width="0.0185%" height="15" fill="rgb(237,21,10)" fg:x="33141" fg:w="9"/><text x="68.3363%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_xor (9 samples, 0.02%)</title><rect x="68.0863%" y="949" width="0.0185%" height="15" fill="rgb(218,43,11)" fg:x="33141" fg:w="9"/><text x="68.3363%" y="959.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete (340 samples, 0.70%)</title><rect x="67.4165%" y="997" width="0.6985%" height="15" fill="rgb(218,221,29)" fg:x="32815" fg:w="340"/><text x="67.6665%" y="1007.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_terminal (5 samples, 0.01%)</title><rect x="68.1048%" y="981" width="0.0103%" height="15" fill="rgb(214,118,42)" fg:x="33150" fg:w="5"/><text x="68.3548%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (5 samples, 0.01%)</title><rect x="68.1048%" y="965" width="0.0103%" height="15" fill="rgb(251,200,26)" fg:x="33150" fg:w="5"/><text x="68.3548%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_sub (5 samples, 0.01%)</title><rect x="68.1048%" y="949" width="0.0103%" height="15" fill="rgb(237,101,39)" fg:x="33150" fg:w="5"/><text x="68.3548%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::TaskIdGuard&gt; (10 samples, 0.02%)</title><rect x="68.2198%" y="837" width="0.0205%" height="15" fill="rgb(251,117,11)" fg:x="33206" fg:w="10"/><text x="68.4698%" y="847.50"></text></g><g><title>&lt;tokio::runtime::task::core::TaskIdGuard as core::ops::drop::Drop&gt;::drop (10 samples, 0.02%)</title><rect x="68.2198%" y="821" width="0.0205%" height="15" fill="rgb(216,223,23)" fg:x="33206" fg:w="10"/><text x="68.4698%" y="831.50"></text></g><g><title>tokio::runtime::context::set_current_task_id (6 samples, 0.01%)</title><rect x="68.2280%" y="805" width="0.0123%" height="15" fill="rgb(251,54,12)" fg:x="33210" fg:w="6"/><text x="68.4780%" y="815.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (6 samples, 0.01%)</title><rect x="68.2280%" y="789" width="0.0123%" height="15" fill="rgb(254,176,54)" fg:x="33210" fg:w="6"/><text x="68.4780%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::engine::match_server::MatchServer::handler::{{closure}}&gt; (6 samples, 0.01%)</title><rect x="68.3123%" y="821" width="0.0123%" height="15" fill="rgb(210,32,8)" fg:x="33251" fg:w="6"/><text x="68.5623%" y="831.50"></text></g><g><title>&lt;tokio::net::tcp::split::ReadHalf as tokio::io::async_read::AsyncRead&gt;::poll_read (17 samples, 0.03%)</title><rect x="68.4643%" y="773" width="0.0349%" height="15" fill="rgb(235,52,38)" fg:x="33325" fg:w="17"/><text x="68.7143%" y="783.50"></text></g><g><title>__GI___pthread_disable_asynccancel (7 samples, 0.01%)</title><rect x="68.5937%" y="581" width="0.0144%" height="15" fill="rgb(231,4,44)" fg:x="33388" fg:w="7"/><text x="68.8437%" y="591.50"></text></g><g><title>__GI___pthread_disable_asynccancel (6 samples, 0.01%)</title><rect x="68.5958%" y="565" width="0.0123%" height="15" fill="rgb(249,2,32)" fg:x="33389" fg:w="6"/><text x="68.8458%" y="575.50"></text></g><g><title>__GI___pthread_enable_asynccancel (8 samples, 0.02%)</title><rect x="68.6081%" y="581" width="0.0164%" height="15" fill="rgb(224,65,26)" fg:x="33395" fg:w="8"/><text x="68.8581%" y="591.50"></text></g><g><title>entry_SYSCALL_64 (12 samples, 0.02%)</title><rect x="68.6266%" y="581" width="0.0247%" height="15" fill="rgb(250,73,40)" fg:x="33404" fg:w="12"/><text x="68.8766%" y="591.50"></text></g><g><title>fput (9 samples, 0.02%)</title><rect x="68.9697%" y="517" width="0.0185%" height="15" fill="rgb(253,177,16)" fg:x="33571" fg:w="9"/><text x="69.2197%" y="527.50"></text></g><g><title>__local_bh_enable_ip (8 samples, 0.02%)</title><rect x="69.0395%" y="485" width="0.0164%" height="15" fill="rgb(217,32,34)" fg:x="33605" fg:w="8"/><text x="69.2895%" y="495.50"></text></g><g><title>lock_sock_nested (16 samples, 0.03%)</title><rect x="69.0560%" y="485" width="0.0329%" height="15" fill="rgb(212,7,10)" fg:x="33613" fg:w="16"/><text x="69.3060%" y="495.50"></text></g><g><title>_raw_spin_lock_bh (15 samples, 0.03%)</title><rect x="69.0580%" y="469" width="0.0308%" height="15" fill="rgb(245,89,8)" fg:x="33614" fg:w="15"/><text x="69.3080%" y="479.50"></text></g><g><title>_raw_spin_lock_bh (6 samples, 0.01%)</title><rect x="69.0991%" y="469" width="0.0123%" height="15" fill="rgb(237,16,53)" fg:x="33634" fg:w="6"/><text x="69.3491%" y="479.50"></text></g><g><title>release_sock (15 samples, 0.03%)</title><rect x="69.0889%" y="485" width="0.0308%" height="15" fill="rgb(250,204,30)" fg:x="33629" fg:w="15"/><text x="69.3389%" y="495.50"></text></g><g><title>tcp_recv_timestamp (14 samples, 0.03%)</title><rect x="69.1197%" y="485" width="0.0288%" height="15" fill="rgb(208,77,27)" fg:x="33644" fg:w="14"/><text x="69.3697%" y="495.50"></text></g><g><title>mem_cgroup_uncharge_skmem (29 samples, 0.06%)</title><rect x="69.3046%" y="453" width="0.0596%" height="15" fill="rgb(250,204,28)" fg:x="33734" fg:w="29"/><text x="69.5546%" y="463.50"></text></g><g><title>mod_memcg_state (26 samples, 0.05%)</title><rect x="69.3107%" y="437" width="0.0534%" height="15" fill="rgb(244,63,21)" fg:x="33737" fg:w="26"/><text x="69.5607%" y="447.50"></text></g><g><title>__mod_memcg_state (23 samples, 0.05%)</title><rect x="69.3169%" y="421" width="0.0473%" height="15" fill="rgb(236,85,44)" fg:x="33740" fg:w="23"/><text x="69.5669%" y="431.50"></text></g><g><title>__refill_stock (12 samples, 0.02%)</title><rect x="69.3662%" y="437" width="0.0247%" height="15" fill="rgb(215,98,4)" fg:x="33764" fg:w="12"/><text x="69.6162%" y="447.50"></text></g><g><title>__sk_mem_reduce_allocated (52 samples, 0.11%)</title><rect x="69.2861%" y="469" width="0.1068%" height="15" fill="rgb(235,38,11)" fg:x="33725" fg:w="52"/><text x="69.5361%" y="479.50"></text></g><g><title>refill_stock (14 samples, 0.03%)</title><rect x="69.3641%" y="453" width="0.0288%" height="15" fill="rgb(254,186,25)" fg:x="33763" fg:w="14"/><text x="69.6141%" y="463.50"></text></g><g><title>__tcp_cleanup_rbuf (17 samples, 0.03%)</title><rect x="69.3929%" y="469" width="0.0349%" height="15" fill="rgb(225,55,31)" fg:x="33777" fg:w="17"/><text x="69.6429%" y="479.50"></text></g><g><title>_raw_spin_lock_irqsave (17 samples, 0.03%)</title><rect x="69.4689%" y="453" width="0.0349%" height="15" fill="rgb(211,15,21)" fg:x="33814" fg:w="17"/><text x="69.7189%" y="463.50"></text></g><g><title>skb_attempt_defer_free (38 samples, 0.08%)</title><rect x="69.4381%" y="469" width="0.0781%" height="15" fill="rgb(215,187,41)" fg:x="33799" fg:w="38"/><text x="69.6881%" y="479.50"></text></g><g><title>skb_release_data (5 samples, 0.01%)</title><rect x="69.5059%" y="453" width="0.0103%" height="15" fill="rgb(248,69,32)" fg:x="33832" fg:w="5"/><text x="69.7559%" y="463.50"></text></g><g><title>copy_user_enhanced_fast_string (7 samples, 0.01%)</title><rect x="69.6271%" y="421" width="0.0144%" height="15" fill="rgb(252,102,52)" fg:x="33891" fg:w="7"/><text x="69.8771%" y="431.50"></text></g><g><title>_copy_to_iter (51 samples, 0.10%)</title><rect x="69.6045%" y="437" width="0.1048%" height="15" fill="rgb(253,140,32)" fg:x="33880" fg:w="51"/><text x="69.8545%" y="447.50"></text></g><g><title>copy_user_short_string (33 samples, 0.07%)</title><rect x="69.6415%" y="421" width="0.0678%" height="15" fill="rgb(216,56,42)" fg:x="33898" fg:w="33"/><text x="69.8915%" y="431.50"></text></g><g><title>__virt_addr_valid (47 samples, 0.10%)</title><rect x="69.7709%" y="405" width="0.0966%" height="15" fill="rgb(216,184,14)" fg:x="33961" fg:w="47"/><text x="70.0209%" y="415.50"></text></g><g><title>skb_copy_datagram_iter (177 samples, 0.36%)</title><rect x="69.5162%" y="469" width="0.3636%" height="15" fill="rgb(237,187,27)" fg:x="33837" fg:w="177"/><text x="69.7662%" y="479.50"></text></g><g><title>__skb_datagram_iter (174 samples, 0.36%)</title><rect x="69.5223%" y="453" width="0.3575%" height="15" fill="rgb(219,65,3)" fg:x="33840" fg:w="174"/><text x="69.7723%" y="463.50"></text></g><g><title>simple_copy_to_iter (83 samples, 0.17%)</title><rect x="69.7093%" y="437" width="0.1705%" height="15" fill="rgb(245,83,25)" fg:x="33931" fg:w="83"/><text x="69.9593%" y="447.50"></text></g><g><title>__check_object_size (83 samples, 0.17%)</title><rect x="69.7093%" y="421" width="0.1705%" height="15" fill="rgb(214,205,45)" fg:x="33931" fg:w="83"/><text x="69.9593%" y="431.50"></text></g><g><title>is_vmalloc_addr (5 samples, 0.01%)</title><rect x="69.8695%" y="405" width="0.0103%" height="15" fill="rgb(241,20,18)" fg:x="34009" fg:w="5"/><text x="70.1195%" y="415.50"></text></g><g><title>sock_rfree (17 samples, 0.03%)</title><rect x="69.8798%" y="469" width="0.0349%" height="15" fill="rgb(232,163,23)" fg:x="34014" fg:w="17"/><text x="70.1298%" y="479.50"></text></g><g><title>tcp_rcv_space_adjust (46 samples, 0.09%)</title><rect x="69.9188%" y="469" width="0.0945%" height="15" fill="rgb(214,5,46)" fg:x="34033" fg:w="46"/><text x="70.1688%" y="479.50"></text></g><g><title>tcp_mstamp_refresh (30 samples, 0.06%)</title><rect x="69.9517%" y="453" width="0.0616%" height="15" fill="rgb(229,78,17)" fg:x="34049" fg:w="30"/><text x="70.2017%" y="463.50"></text></g><g><title>ktime_get (26 samples, 0.05%)</title><rect x="69.9599%" y="437" width="0.0534%" height="15" fill="rgb(248,89,10)" fg:x="34053" fg:w="26"/><text x="70.2099%" y="447.50"></text></g><g><title>read_tsc (13 samples, 0.03%)</title><rect x="69.9866%" y="421" width="0.0267%" height="15" fill="rgb(248,54,15)" fg:x="34066" fg:w="13"/><text x="70.2366%" y="431.50"></text></g><g><title>inet_recvmsg (506 samples, 1.04%)</title><rect x="68.9923%" y="517" width="1.0395%" height="15" fill="rgb(223,116,6)" fg:x="33582" fg:w="506"/><text x="69.2423%" y="527.50"></text></g><g><title>tcp_recvmsg (498 samples, 1.02%)</title><rect x="69.0087%" y="501" width="1.0231%" height="15" fill="rgb(205,125,38)" fg:x="33590" fg:w="498"/><text x="69.2587%" y="511.50"></text></g><g><title>tcp_recvmsg_locked (430 samples, 0.88%)</title><rect x="69.1484%" y="485" width="0.8834%" height="15" fill="rgb(251,78,38)" fg:x="33658" fg:w="430"/><text x="69.3984%" y="495.50"></text></g><g><title>tcp_update_recv_tstamps (9 samples, 0.02%)</title><rect x="70.0134%" y="469" width="0.0185%" height="15" fill="rgb(253,78,28)" fg:x="34079" fg:w="9"/><text x="70.2634%" y="479.50"></text></g><g><title>aa_sk_perm (54 samples, 0.11%)</title><rect x="70.0483%" y="485" width="0.1109%" height="15" fill="rgb(209,120,3)" fg:x="34096" fg:w="54"/><text x="70.2983%" y="495.50"></text></g><g><title>sock_recvmsg (67 samples, 0.14%)</title><rect x="70.0318%" y="517" width="0.1376%" height="15" fill="rgb(238,229,9)" fg:x="34088" fg:w="67"/><text x="70.2818%" y="527.50"></text></g><g><title>security_socket_recvmsg (63 samples, 0.13%)</title><rect x="70.0401%" y="501" width="0.1294%" height="15" fill="rgb(253,159,18)" fg:x="34092" fg:w="63"/><text x="70.2901%" y="511.50"></text></g><g><title>__x64_sys_recvfrom (709 samples, 1.46%)</title><rect x="68.8567%" y="549" width="1.4566%" height="15" fill="rgb(244,42,34)" fg:x="33516" fg:w="709"/><text x="69.1067%" y="559.50"></text></g><g><title>__sys_recvfrom (694 samples, 1.43%)</title><rect x="68.8875%" y="533" width="1.4258%" height="15" fill="rgb(224,8,7)" fg:x="33531" fg:w="694"/><text x="69.1375%" y="543.50"></text></g><g><title>sockfd_lookup_light (70 samples, 0.14%)</title><rect x="70.1695%" y="517" width="0.1438%" height="15" fill="rgb(210,201,45)" fg:x="34155" fg:w="70"/><text x="70.4195%" y="527.50"></text></g><g><title>__fget_light (62 samples, 0.13%)</title><rect x="70.1859%" y="501" width="0.1274%" height="15" fill="rgb(252,185,21)" fg:x="34163" fg:w="62"/><text x="70.4359%" y="511.50"></text></g><g><title>exit_to_user_mode_prepare (8 samples, 0.02%)</title><rect x="70.3441%" y="533" width="0.0164%" height="15" fill="rgb(223,131,1)" fg:x="34240" fg:w="8"/><text x="70.5941%" y="543.50"></text></g><g><title>fpregs_assert_state_consistent (5 samples, 0.01%)</title><rect x="70.3503%" y="517" width="0.0103%" height="15" fill="rgb(245,141,16)" fg:x="34243" fg:w="5"/><text x="70.6003%" y="527.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (835 samples, 1.72%)</title><rect x="68.6513%" y="581" width="1.7155%" height="15" fill="rgb(229,55,45)" fg:x="33416" fg:w="835"/><text x="68.9013%" y="591.50"></text></g><g><title>do_syscall_64 (750 samples, 1.54%)</title><rect x="68.8259%" y="565" width="1.5408%" height="15" fill="rgb(208,92,15)" fg:x="33501" fg:w="750"/><text x="69.0759%" y="575.50"></text></g><g><title>syscall_exit_to_user_mode (24 samples, 0.05%)</title><rect x="70.3174%" y="549" width="0.0493%" height="15" fill="rgb(234,185,47)" fg:x="34227" fg:w="24"/><text x="70.5674%" y="559.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (1,044 samples, 2.14%)</title><rect x="68.5198%" y="741" width="2.1448%" height="15" fill="rgb(253,104,50)" fg:x="33352" fg:w="1044"/><text x="68.7698%" y="751.50">&lt;..</text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (1,042 samples, 2.14%)</title><rect x="68.5239%" y="725" width="2.1407%" height="15" fill="rgb(205,70,7)" fg:x="33354" fg:w="1042"/><text x="68.7739%" y="735.50">m..</text></g><g><title>mio::sys::unix::stateless_io_source::IoSourceState::do_io (1,042 samples, 2.14%)</title><rect x="68.5239%" y="709" width="2.1407%" height="15" fill="rgb(240,178,43)" fg:x="33354" fg:w="1042"/><text x="68.7739%" y="719.50">m..</text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read::{{closure}} (1,041 samples, 2.14%)</title><rect x="68.5259%" y="693" width="2.1387%" height="15" fill="rgb(214,112,2)" fg:x="33355" fg:w="1041"/><text x="68.7759%" y="703.50">&lt;..</text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (1,041 samples, 2.14%)</title><rect x="68.5259%" y="677" width="2.1387%" height="15" fill="rgb(206,46,17)" fg:x="33355" fg:w="1041"/><text x="68.7759%" y="687.50">&lt;..</text></g><g><title>std::sys_common::net::TcpStream::read (1,041 samples, 2.14%)</title><rect x="68.5259%" y="661" width="2.1387%" height="15" fill="rgb(225,220,16)" fg:x="33355" fg:w="1041"/><text x="68.7759%" y="671.50">s..</text></g><g><title>std::sys::unix::net::Socket::read (1,041 samples, 2.14%)</title><rect x="68.5259%" y="645" width="2.1387%" height="15" fill="rgb(238,65,40)" fg:x="33355" fg:w="1041"/><text x="68.7759%" y="655.50">s..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (1,041 samples, 2.14%)</title><rect x="68.5259%" y="629" width="2.1387%" height="15" fill="rgb(230,151,21)" fg:x="33355" fg:w="1041"/><text x="68.7759%" y="639.50">s..</text></g><g><title>__libc_recv (1,041 samples, 2.14%)</title><rect x="68.5259%" y="613" width="2.1387%" height="15" fill="rgb(218,58,49)" fg:x="33355" fg:w="1041"/><text x="68.7759%" y="623.50">_..</text></g><g><title>__libc_recv (1,023 samples, 2.10%)</title><rect x="68.5629%" y="597" width="2.1017%" height="15" fill="rgb(219,179,14)" fg:x="33373" fg:w="1023"/><text x="68.8129%" y="607.50">_..</text></g><g><title>syscall_return_via_sysret (144 samples, 0.30%)</title><rect x="70.3688%" y="581" width="0.2958%" height="15" fill="rgb(223,72,1)" fg:x="34252" fg:w="144"/><text x="70.6188%" y="591.50"></text></g><g><title>tokio::runtime::io::registration::Registration::clear_readiness (8 samples, 0.02%)</title><rect x="70.6687%" y="741" width="0.0164%" height="15" fill="rgb(238,126,10)" fg:x="34398" fg:w="8"/><text x="70.9187%" y="751.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::clear_readiness (5 samples, 0.01%)</title><rect x="70.6749%" y="725" width="0.0103%" height="15" fill="rgb(224,206,38)" fg:x="34401" fg:w="5"/><text x="70.9249%" y="735.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::set_readiness (5 samples, 0.01%)</title><rect x="70.6749%" y="709" width="0.0103%" height="15" fill="rgb(212,201,54)" fg:x="34401" fg:w="5"/><text x="70.9249%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (5 samples, 0.01%)</title><rect x="70.6749%" y="693" width="0.0103%" height="15" fill="rgb(218,154,48)" fg:x="34401" fg:w="5"/><text x="70.9249%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (5 samples, 0.01%)</title><rect x="70.6749%" y="677" width="0.0103%" height="15" fill="rgb(232,93,24)" fg:x="34401" fg:w="5"/><text x="70.9249%" y="687.50"></text></g><g><title>tokio::runtime::coop::poll_proceed (6 samples, 0.01%)</title><rect x="70.6975%" y="709" width="0.0123%" height="15" fill="rgb(245,30,21)" fg:x="34412" fg:w="6"/><text x="70.9475%" y="719.50"></text></g><g><title>tokio::runtime::context::budget (6 samples, 0.01%)</title><rect x="70.6975%" y="693" width="0.0123%" height="15" fill="rgb(242,148,29)" fg:x="34412" fg:w="6"/><text x="70.9475%" y="703.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (6 samples, 0.01%)</title><rect x="70.6975%" y="677" width="0.0123%" height="15" fill="rgb(244,153,54)" fg:x="34412" fg:w="6"/><text x="70.9475%" y="687.50"></text></g><g><title>tokio::runtime::context::budget::{{closure}} (6 samples, 0.01%)</title><rect x="70.6975%" y="661" width="0.0123%" height="15" fill="rgb(252,87,22)" fg:x="34412" fg:w="6"/><text x="70.9475%" y="671.50"></text></g><g><title>tokio::runtime::coop::poll_proceed::{{closure}} (6 samples, 0.01%)</title><rect x="70.6975%" y="645" width="0.0123%" height="15" fill="rgb(210,51,29)" fg:x="34412" fg:w="6"/><text x="70.9475%" y="655.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (5 samples, 0.01%)</title><rect x="70.7119%" y="693" width="0.0103%" height="15" fill="rgb(242,136,47)" fg:x="34419" fg:w="5"/><text x="70.9619%" y="703.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (5 samples, 0.01%)</title><rect x="70.7119%" y="677" width="0.0103%" height="15" fill="rgb(238,68,4)" fg:x="34419" fg:w="5"/><text x="70.9619%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::io::scheduled_io::Waiters&gt;&gt; (5 samples, 0.01%)</title><rect x="70.7242%" y="693" width="0.0103%" height="15" fill="rgb(242,161,30)" fg:x="34425" fg:w="5"/><text x="70.9742%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::io::scheduled_io::Waiters&gt;&gt; (5 samples, 0.01%)</title><rect x="70.7242%" y="677" width="0.0103%" height="15" fill="rgb(218,58,44)" fg:x="34425" fg:w="5"/><text x="70.9742%" y="687.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="70.7242%" y="661" width="0.0103%" height="15" fill="rgb(252,125,32)" fg:x="34425" fg:w="5"/><text x="70.9742%" y="671.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (5 samples, 0.01%)</title><rect x="70.7242%" y="645" width="0.0103%" height="15" fill="rgb(219,178,0)" fg:x="34425" fg:w="5"/><text x="70.9742%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (5 samples, 0.01%)</title><rect x="70.7242%" y="629" width="0.0103%" height="15" fill="rgb(213,152,7)" fg:x="34425" fg:w="5"/><text x="70.9742%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (5 samples, 0.01%)</title><rect x="70.7242%" y="613" width="0.0103%" height="15" fill="rgb(249,109,34)" fg:x="34425" fg:w="5"/><text x="70.9742%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (13 samples, 0.03%)</title><rect x="70.7345%" y="693" width="0.0267%" height="15" fill="rgb(232,96,21)" fg:x="34430" fg:w="13"/><text x="70.9845%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_load (13 samples, 0.03%)</title><rect x="70.7345%" y="677" width="0.0267%" height="15" fill="rgb(228,27,39)" fg:x="34430" fg:w="13"/><text x="70.9845%" y="687.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_read::AsyncRead&gt;::poll_read (1,141 samples, 2.34%)</title><rect x="68.4397%" y="789" width="2.3441%" height="15" fill="rgb(211,182,52)" fg:x="33313" fg:w="1141"/><text x="68.6897%" y="799.50">&lt;..</text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_read_priv (1,112 samples, 2.28%)</title><rect x="68.4992%" y="773" width="2.2845%" height="15" fill="rgb(234,178,38)" fg:x="33342" fg:w="1112"/><text x="68.7492%" y="783.50">t..</text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (1,110 samples, 2.28%)</title><rect x="68.5033%" y="757" width="2.2804%" height="15" fill="rgb(221,111,3)" fg:x="33344" fg:w="1110"/><text x="68.7533%" y="767.50">t..</text></g><g><title>tokio::runtime::io::registration::Registration::poll_read_ready (48 samples, 0.10%)</title><rect x="70.6852%" y="741" width="0.0986%" height="15" fill="rgb(228,175,21)" fg:x="34406" fg:w="48"/><text x="70.9352%" y="751.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (47 samples, 0.10%)</title><rect x="70.6872%" y="725" width="0.0966%" height="15" fill="rgb(228,174,43)" fg:x="34407" fg:w="47"/><text x="70.9372%" y="735.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (36 samples, 0.07%)</title><rect x="70.7098%" y="709" width="0.0740%" height="15" fill="rgb(211,191,0)" fg:x="34418" fg:w="36"/><text x="70.9598%" y="719.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (11 samples, 0.02%)</title><rect x="70.7612%" y="693" width="0.0226%" height="15" fill="rgb(253,117,3)" fg:x="34443" fg:w="11"/><text x="71.0112%" y="703.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (11 samples, 0.02%)</title><rect x="70.7612%" y="677" width="0.0226%" height="15" fill="rgb(241,127,19)" fg:x="34443" fg:w="11"/><text x="71.0112%" y="687.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (11 samples, 0.02%)</title><rect x="70.7612%" y="661" width="0.0226%" height="15" fill="rgb(218,103,12)" fg:x="34443" fg:w="11"/><text x="71.0112%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (11 samples, 0.02%)</title><rect x="70.7612%" y="645" width="0.0226%" height="15" fill="rgb(236,214,43)" fg:x="34443" fg:w="11"/><text x="71.0112%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (11 samples, 0.02%)</title><rect x="70.7612%" y="629" width="0.0226%" height="15" fill="rgb(244,144,19)" fg:x="34443" fg:w="11"/><text x="71.0112%" y="639.50"></text></g><g><title>&lt;tokio::io::util::read::Read&lt;R&gt; as core::future::future::Future&gt;::poll (1,147 samples, 2.36%)</title><rect x="68.4376%" y="805" width="2.3564%" height="15" fill="rgb(246,188,10)" fg:x="33312" fg:w="1147"/><text x="68.6876%" y="815.50">&lt;..</text></g><g><title>__GI___pthread_disable_asynccancel (26 samples, 0.05%)</title><rect x="70.9276%" y="597" width="0.0534%" height="15" fill="rgb(212,193,33)" fg:x="34524" fg:w="26"/><text x="71.1776%" y="607.50"></text></g><g><title>__GI___pthread_disable_asynccancel (26 samples, 0.05%)</title><rect x="70.9276%" y="581" width="0.0534%" height="15" fill="rgb(241,51,29)" fg:x="34524" fg:w="26"/><text x="71.1776%" y="591.50"></text></g><g><title>__GI___pthread_enable_asynccancel (11 samples, 0.02%)</title><rect x="70.9810%" y="597" width="0.0226%" height="15" fill="rgb(211,58,19)" fg:x="34550" fg:w="11"/><text x="71.2310%" y="607.50"></text></g><g><title>inet_sendmsg (13 samples, 0.03%)</title><rect x="71.3898%" y="517" width="0.0267%" height="15" fill="rgb(229,111,26)" fg:x="34749" fg:w="13"/><text x="71.6398%" y="527.50"></text></g><g><title>inet_send_prepare (5 samples, 0.01%)</title><rect x="71.4063%" y="501" width="0.0103%" height="15" fill="rgb(213,115,40)" fg:x="34757" fg:w="5"/><text x="71.6563%" y="511.50"></text></g><g><title>aa_sk_perm (22 samples, 0.05%)</title><rect x="71.4535%" y="501" width="0.0452%" height="15" fill="rgb(209,56,44)" fg:x="34780" fg:w="22"/><text x="71.7035%" y="511.50"></text></g><g><title>apparmor_socket_sendmsg (9 samples, 0.02%)</title><rect x="71.4987%" y="501" width="0.0185%" height="15" fill="rgb(230,108,32)" fg:x="34802" fg:w="9"/><text x="71.7487%" y="511.50"></text></g><g><title>tomoyo_socket_sendmsg (5 samples, 0.01%)</title><rect x="71.5213%" y="501" width="0.0103%" height="15" fill="rgb(216,165,31)" fg:x="34813" fg:w="5"/><text x="71.7713%" y="511.50"></text></g><g><title>security_socket_sendmsg (68 samples, 0.14%)</title><rect x="71.4165%" y="517" width="0.1397%" height="15" fill="rgb(218,122,21)" fg:x="34762" fg:w="68"/><text x="71.6665%" y="527.50"></text></g><g><title>tomoyo_socket_sendmsg_permission (12 samples, 0.02%)</title><rect x="71.5316%" y="501" width="0.0247%" height="15" fill="rgb(223,224,47)" fg:x="34818" fg:w="12"/><text x="71.7816%" y="511.50"></text></g><g><title>__local_bh_enable_ip (13 samples, 0.03%)</title><rect x="71.5788%" y="501" width="0.0267%" height="15" fill="rgb(238,102,44)" fg:x="34841" fg:w="13"/><text x="71.8288%" y="511.50"></text></g><g><title>lock_sock_nested (8 samples, 0.02%)</title><rect x="71.6076%" y="501" width="0.0164%" height="15" fill="rgb(236,46,40)" fg:x="34855" fg:w="8"/><text x="71.8576%" y="511.50"></text></g><g><title>_raw_spin_lock_bh (8 samples, 0.02%)</title><rect x="71.6076%" y="485" width="0.0164%" height="15" fill="rgb(247,202,50)" fg:x="34855" fg:w="8"/><text x="71.8576%" y="495.50"></text></g><g><title>__cond_resched (12 samples, 0.02%)</title><rect x="71.6569%" y="469" width="0.0247%" height="15" fill="rgb(209,99,20)" fg:x="34879" fg:w="12"/><text x="71.9069%" y="479.50"></text></g><g><title>preempt_schedule_common (11 samples, 0.02%)</title><rect x="71.6590%" y="453" width="0.0226%" height="15" fill="rgb(252,27,34)" fg:x="34880" fg:w="11"/><text x="71.9090%" y="463.50"></text></g><g><title>__schedule (11 samples, 0.02%)</title><rect x="71.6590%" y="437" width="0.0226%" height="15" fill="rgb(215,206,23)" fg:x="34880" fg:w="11"/><text x="71.9090%" y="447.50"></text></g><g><title>ipv4_dst_check (6 samples, 0.01%)</title><rect x="71.7288%" y="453" width="0.0123%" height="15" fill="rgb(212,135,36)" fg:x="34914" fg:w="6"/><text x="71.9788%" y="463.50"></text></g><g><title>__kmem_cache_free (12 samples, 0.02%)</title><rect x="71.8172%" y="405" width="0.0247%" height="15" fill="rgb(240,189,1)" fg:x="34957" fg:w="12"/><text x="72.0672%" y="415.50"></text></g><g><title>kfree (24 samples, 0.05%)</title><rect x="71.8418%" y="405" width="0.0493%" height="15" fill="rgb(242,56,20)" fg:x="34969" fg:w="24"/><text x="72.0918%" y="415.50"></text></g><g><title>skb_release_data (49 samples, 0.10%)</title><rect x="71.8048%" y="421" width="0.1007%" height="15" fill="rgb(247,132,33)" fg:x="34951" fg:w="49"/><text x="72.0548%" y="431.50"></text></g><g><title>skb_free_head (7 samples, 0.01%)</title><rect x="71.8911%" y="405" width="0.0144%" height="15" fill="rgb(208,149,11)" fg:x="34993" fg:w="7"/><text x="72.1411%" y="415.50"></text></g><g><title>__kfree_skb (53 samples, 0.11%)</title><rect x="71.7987%" y="437" width="0.1089%" height="15" fill="rgb(211,33,11)" fg:x="34948" fg:w="53"/><text x="72.0487%" y="447.50"></text></g><g><title>kmem_cache_free (43 samples, 0.09%)</title><rect x="71.9076%" y="437" width="0.0883%" height="15" fill="rgb(221,29,38)" fg:x="35001" fg:w="43"/><text x="72.1576%" y="447.50"></text></g><g><title>cache_from_obj (13 samples, 0.03%)</title><rect x="71.9692%" y="421" width="0.0267%" height="15" fill="rgb(206,182,49)" fg:x="35031" fg:w="13"/><text x="72.2192%" y="431.50"></text></g><g><title>skb_release_data (14 samples, 0.03%)</title><rect x="72.3595%" y="405" width="0.0288%" height="15" fill="rgb(216,140,1)" fg:x="35221" fg:w="14"/><text x="72.6095%" y="415.50"></text></g><g><title>__kfree_skb (17 samples, 0.03%)</title><rect x="72.3554%" y="421" width="0.0349%" height="15" fill="rgb(232,57,40)" fg:x="35219" fg:w="17"/><text x="72.6054%" y="431.50"></text></g><g><title>__sk_mem_reclaim (7 samples, 0.01%)</title><rect x="72.3924%" y="421" width="0.0144%" height="15" fill="rgb(224,186,18)" fg:x="35237" fg:w="7"/><text x="72.6424%" y="431.50"></text></g><g><title>__mod_memcg_state (14 samples, 0.03%)</title><rect x="72.4273%" y="373" width="0.0288%" height="15" fill="rgb(215,121,11)" fg:x="35254" fg:w="14"/><text x="72.6773%" y="383.50"></text></g><g><title>cgroup_rstat_updated (8 samples, 0.02%)</title><rect x="72.4397%" y="357" width="0.0164%" height="15" fill="rgb(245,147,10)" fg:x="35260" fg:w="8"/><text x="72.6897%" y="367.50"></text></g><g><title>mem_cgroup_uncharge_skmem (18 samples, 0.04%)</title><rect x="72.4232%" y="405" width="0.0370%" height="15" fill="rgb(238,153,13)" fg:x="35252" fg:w="18"/><text x="72.6732%" y="415.50"></text></g><g><title>mod_memcg_state (18 samples, 0.04%)</title><rect x="72.4232%" y="389" width="0.0370%" height="15" fill="rgb(233,108,0)" fg:x="35252" fg:w="18"/><text x="72.6732%" y="399.50"></text></g><g><title>__sk_mem_reduce_allocated (42 samples, 0.09%)</title><rect x="72.4068%" y="421" width="0.0863%" height="15" fill="rgb(212,157,17)" fg:x="35244" fg:w="42"/><text x="72.6568%" y="431.50"></text></g><g><title>refill_stock (16 samples, 0.03%)</title><rect x="72.4602%" y="405" width="0.0329%" height="15" fill="rgb(225,213,38)" fg:x="35270" fg:w="16"/><text x="72.7102%" y="415.50"></text></g><g><title>__refill_stock (9 samples, 0.02%)</title><rect x="72.4746%" y="389" width="0.0185%" height="15" fill="rgb(248,16,11)" fg:x="35277" fg:w="9"/><text x="72.7246%" y="399.50"></text></g><g><title>cubictcp_acked (15 samples, 0.03%)</title><rect x="72.4931%" y="421" width="0.0308%" height="15" fill="rgb(241,33,4)" fg:x="35286" fg:w="15"/><text x="72.7431%" y="431.50"></text></g><g><title>cubictcp_cong_avoid (5 samples, 0.01%)</title><rect x="72.5239%" y="421" width="0.0103%" height="15" fill="rgb(222,26,43)" fg:x="35301" fg:w="5"/><text x="72.7739%" y="431.50"></text></g><g><title>kfree_skbmem (8 samples, 0.02%)</title><rect x="72.5342%" y="421" width="0.0164%" height="15" fill="rgb(243,29,36)" fg:x="35306" fg:w="8"/><text x="72.7842%" y="431.50"></text></g><g><title>rb_erase (7 samples, 0.01%)</title><rect x="72.5506%" y="421" width="0.0144%" height="15" fill="rgb(241,9,27)" fg:x="35314" fg:w="7"/><text x="72.8006%" y="431.50"></text></g><g><title>rb_next (6 samples, 0.01%)</title><rect x="72.5650%" y="421" width="0.0123%" height="15" fill="rgb(205,117,26)" fg:x="35321" fg:w="6"/><text x="72.8150%" y="431.50"></text></g><g><title>tcp_ack_update_rtt (43 samples, 0.09%)</title><rect x="72.5794%" y="421" width="0.0883%" height="15" fill="rgb(209,80,39)" fg:x="35328" fg:w="43"/><text x="72.8294%" y="431.50"></text></g><g><title>minmax_running_min (15 samples, 0.03%)</title><rect x="72.6369%" y="405" width="0.0308%" height="15" fill="rgb(239,155,6)" fg:x="35356" fg:w="15"/><text x="72.8869%" y="415.50"></text></g><g><title>tcp_newly_delivered (12 samples, 0.02%)</title><rect x="72.6739%" y="421" width="0.0247%" height="15" fill="rgb(212,104,12)" fg:x="35374" fg:w="12"/><text x="72.9239%" y="431.50"></text></g><g><title>tcp_rack_advance (6 samples, 0.01%)</title><rect x="72.6985%" y="421" width="0.0123%" height="15" fill="rgb(234,204,3)" fg:x="35386" fg:w="6"/><text x="72.9485%" y="431.50"></text></g><g><title>tcp_rack_update_reo_wnd (7 samples, 0.01%)</title><rect x="72.7108%" y="421" width="0.0144%" height="15" fill="rgb(251,218,7)" fg:x="35392" fg:w="7"/><text x="72.9608%" y="431.50"></text></g><g><title>tcp_rate_gen (14 samples, 0.03%)</title><rect x="72.7252%" y="421" width="0.0288%" height="15" fill="rgb(221,81,32)" fg:x="35399" fg:w="14"/><text x="72.9752%" y="431.50"></text></g><g><title>tcp_rate_skb_delivered (8 samples, 0.02%)</title><rect x="72.7540%" y="421" width="0.0164%" height="15" fill="rgb(214,152,26)" fg:x="35413" fg:w="8"/><text x="73.0040%" y="431.50"></text></g><g><title>tcp_schedule_loss_probe (7 samples, 0.01%)</title><rect x="72.7786%" y="421" width="0.0144%" height="15" fill="rgb(223,22,3)" fg:x="35425" fg:w="7"/><text x="73.0286%" y="431.50"></text></g><g><title>tcp_update_pacing_rate (14 samples, 0.03%)</title><rect x="72.7930%" y="421" width="0.0288%" height="15" fill="rgb(207,174,7)" fg:x="35432" fg:w="14"/><text x="73.0430%" y="431.50"></text></g><g><title>tcp_ack (401 samples, 0.82%)</title><rect x="72.0021%" y="437" width="0.8238%" height="15" fill="rgb(224,19,52)" fg:x="35047" fg:w="401"/><text x="72.2521%" y="447.50"></text></g><g><title>tcp_check_space (7 samples, 0.01%)</title><rect x="72.8259%" y="437" width="0.0144%" height="15" fill="rgb(228,24,14)" fg:x="35448" fg:w="7"/><text x="73.0759%" y="447.50"></text></g><g><title>tcp_data_queue (5 samples, 0.01%)</title><rect x="72.8403%" y="437" width="0.0103%" height="15" fill="rgb(230,153,43)" fg:x="35455" fg:w="5"/><text x="73.0903%" y="447.50"></text></g><g><title>__release_sock (607 samples, 1.25%)</title><rect x="71.6446%" y="485" width="1.2470%" height="15" fill="rgb(231,106,12)" fg:x="34873" fg:w="607"/><text x="71.8946%" y="495.50"></text></g><g><title>tcp_v4_do_rcv (583 samples, 1.20%)</title><rect x="71.6939%" y="469" width="1.1977%" height="15" fill="rgb(215,92,2)" fg:x="34897" fg:w="583"/><text x="71.9439%" y="479.50"></text></g><g><title>tcp_rcv_established (560 samples, 1.15%)</title><rect x="71.7411%" y="453" width="1.1505%" height="15" fill="rgb(249,143,25)" fg:x="34920" fg:w="560"/><text x="71.9911%" y="463.50"></text></g><g><title>tcp_mstamp_refresh (20 samples, 0.04%)</title><rect x="72.8505%" y="437" width="0.0411%" height="15" fill="rgb(252,7,35)" fg:x="35460" fg:w="20"/><text x="73.1005%" y="447.50"></text></g><g><title>ktime_get (18 samples, 0.04%)</title><rect x="72.8546%" y="421" width="0.0370%" height="15" fill="rgb(216,69,40)" fg:x="35462" fg:w="18"/><text x="73.1046%" y="431.50"></text></g><g><title>read_tsc (13 samples, 0.03%)</title><rect x="72.8649%" y="405" width="0.0267%" height="15" fill="rgb(240,36,33)" fg:x="35467" fg:w="13"/><text x="73.1149%" y="415.50"></text></g><g><title>_raw_spin_lock_bh (8 samples, 0.02%)</title><rect x="72.8916%" y="485" width="0.0164%" height="15" fill="rgb(231,128,14)" fg:x="35480" fg:w="8"/><text x="73.1416%" y="495.50"></text></g><g><title>release_sock (633 samples, 1.30%)</title><rect x="71.6240%" y="501" width="1.3005%" height="15" fill="rgb(245,143,14)" fg:x="34863" fg:w="633"/><text x="71.8740%" y="511.50"></text></g><g><title>tcp_release_cb (8 samples, 0.02%)</title><rect x="72.9081%" y="485" width="0.0164%" height="15" fill="rgb(222,130,28)" fg:x="35488" fg:w="8"/><text x="73.1581%" y="495.50"></text></g><g><title>__virt_addr_valid (25 samples, 0.05%)</title><rect x="73.1361%" y="469" width="0.0514%" height="15" fill="rgb(212,10,48)" fg:x="35599" fg:w="25"/><text x="73.3861%" y="479.50"></text></g><g><title>__check_object_size (38 samples, 0.08%)</title><rect x="73.1135%" y="485" width="0.0781%" height="15" fill="rgb(254,118,45)" fg:x="35588" fg:w="38"/><text x="73.3635%" y="495.50"></text></g><g><title>__ip_finish_output (22 samples, 0.05%)</title><rect x="73.6908%" y="421" width="0.0452%" height="15" fill="rgb(228,6,45)" fg:x="35869" fg:w="22"/><text x="73.9408%" y="431.50"></text></g><g><title>ip_skb_dst_mtu (13 samples, 0.03%)</title><rect x="73.7093%" y="405" width="0.0267%" height="15" fill="rgb(241,18,35)" fg:x="35878" fg:w="13"/><text x="73.9593%" y="415.50"></text></g><g><title>__rcu_read_unlock (5 samples, 0.01%)</title><rect x="73.7442%" y="421" width="0.0103%" height="15" fill="rgb(227,214,53)" fg:x="35895" fg:w="5"/><text x="73.9942%" y="431.50"></text></g><g><title>__sk_dst_check (23 samples, 0.05%)</title><rect x="73.7545%" y="421" width="0.0473%" height="15" fill="rgb(224,107,51)" fg:x="35900" fg:w="23"/><text x="74.0045%" y="431.50"></text></g><g><title>ipv4_dst_check (12 samples, 0.02%)</title><rect x="73.7771%" y="405" width="0.0247%" height="15" fill="rgb(248,60,28)" fg:x="35911" fg:w="12"/><text x="74.0271%" y="415.50"></text></g><g><title>ip_finish_output (8 samples, 0.02%)</title><rect x="73.8038%" y="421" width="0.0164%" height="15" fill="rgb(249,101,23)" fg:x="35924" fg:w="8"/><text x="74.0538%" y="431.50"></text></g><g><title>__netif_receive_skb (9 samples, 0.02%)</title><rect x="74.3729%" y="293" width="0.0185%" height="15" fill="rgb(228,51,19)" fg:x="36201" fg:w="9"/><text x="74.6229%" y="303.50"></text></g><g><title>__netif_receive_skb_core.constprop.0 (82 samples, 0.17%)</title><rect x="74.4407%" y="277" width="0.1685%" height="15" fill="rgb(213,20,6)" fg:x="36234" fg:w="82"/><text x="74.6907%" y="287.50"></text></g><g><title>__rcu_read_unlock (7 samples, 0.01%)</title><rect x="74.6810%" y="261" width="0.0144%" height="15" fill="rgb(212,124,10)" fg:x="36351" fg:w="7"/><text x="74.9310%" y="271.50"></text></g><g><title>ipv4_confirm (13 samples, 0.03%)</title><rect x="74.7468%" y="245" width="0.0267%" height="15" fill="rgb(248,3,40)" fg:x="36383" fg:w="13"/><text x="74.9968%" y="255.50"></text></g><g><title>nf_confirm (6 samples, 0.01%)</title><rect x="74.7735%" y="245" width="0.0123%" height="15" fill="rgb(223,178,23)" fg:x="36396" fg:w="6"/><text x="75.0235%" y="255.50"></text></g><g><title>ip_local_deliver (125 samples, 0.26%)</title><rect x="74.6091%" y="277" width="0.2568%" height="15" fill="rgb(240,132,45)" fg:x="36316" fg:w="125"/><text x="74.8591%" y="287.50"></text></g><g><title>nf_hook_slow (83 samples, 0.17%)</title><rect x="74.6954%" y="261" width="0.1705%" height="15" fill="rgb(245,164,36)" fg:x="36358" fg:w="83"/><text x="74.9454%" y="271.50"></text></g><g><title>nf_nat_ipv4_local_in (39 samples, 0.08%)</title><rect x="74.7858%" y="245" width="0.0801%" height="15" fill="rgb(231,188,53)" fg:x="36402" fg:w="39"/><text x="75.0358%" y="255.50"></text></g><g><title>nf_nat_inet_fn (19 samples, 0.04%)</title><rect x="74.8269%" y="229" width="0.0390%" height="15" fill="rgb(237,198,39)" fg:x="36422" fg:w="19"/><text x="75.0769%" y="239.50"></text></g><g><title>__rcu_read_lock (8 samples, 0.02%)</title><rect x="74.8885%" y="261" width="0.0164%" height="15" fill="rgb(223,120,35)" fg:x="36452" fg:w="8"/><text x="75.1385%" y="271.50"></text></g><g><title>raw_local_deliver (28 samples, 0.06%)</title><rect x="74.9461%" y="245" width="0.0575%" height="15" fill="rgb(253,107,49)" fg:x="36480" fg:w="28"/><text x="75.1961%" y="255.50"></text></g><g><title>__inet_lookup_established (105 samples, 0.22%)</title><rect x="75.2173%" y="229" width="0.2157%" height="15" fill="rgb(216,44,31)" fg:x="36612" fg:w="105"/><text x="75.4673%" y="239.50"></text></g><g><title>inet_ehashfn (20 samples, 0.04%)</title><rect x="75.3919%" y="213" width="0.0411%" height="15" fill="rgb(253,87,21)" fg:x="36697" fg:w="20"/><text x="75.6419%" y="223.50"></text></g><g><title>_raw_spin_lock (25 samples, 0.05%)</title><rect x="75.4330%" y="229" width="0.0514%" height="15" fill="rgb(226,18,2)" fg:x="36717" fg:w="25"/><text x="75.6830%" y="239.50"></text></g><g><title>_raw_spin_unlock (6 samples, 0.01%)</title><rect x="75.4843%" y="229" width="0.0123%" height="15" fill="rgb(216,8,46)" fg:x="36742" fg:w="6"/><text x="75.7343%" y="239.50"></text></g><g><title>nf_conntrack_put (12 samples, 0.02%)</title><rect x="75.4967%" y="229" width="0.0247%" height="15" fill="rgb(226,140,39)" fg:x="36748" fg:w="12"/><text x="75.7467%" y="239.50"></text></g><g><title>__rcu_read_lock (10 samples, 0.02%)</title><rect x="75.5747%" y="213" width="0.0205%" height="15" fill="rgb(221,194,54)" fg:x="36786" fg:w="10"/><text x="75.8247%" y="223.50"></text></g><g><title>__rcu_read_unlock (5 samples, 0.01%)</title><rect x="75.5953%" y="213" width="0.0103%" height="15" fill="rgb(213,92,11)" fg:x="36796" fg:w="5"/><text x="75.8453%" y="223.50"></text></g><g><title>apparmor_socket_sock_rcv_skb (11 samples, 0.02%)</title><rect x="75.6590%" y="197" width="0.0226%" height="15" fill="rgb(229,162,46)" fg:x="36827" fg:w="11"/><text x="75.9090%" y="207.50"></text></g><g><title>sk_filter_trim_cap (90 samples, 0.18%)</title><rect x="75.5213%" y="229" width="0.1849%" height="15" fill="rgb(214,111,36)" fg:x="36760" fg:w="90"/><text x="75.7713%" y="239.50"></text></g><g><title>security_sock_rcv_skb (49 samples, 0.10%)</title><rect x="75.6055%" y="213" width="0.1007%" height="15" fill="rgb(207,6,21)" fg:x="36801" fg:w="49"/><text x="75.8555%" y="223.50"></text></g><g><title>bpf_lsm_socket_sock_rcv_skb (12 samples, 0.02%)</title><rect x="75.6816%" y="197" width="0.0247%" height="15" fill="rgb(213,127,38)" fg:x="36838" fg:w="12"/><text x="75.9316%" y="207.50"></text></g><g><title>sock_put (10 samples, 0.02%)</title><rect x="75.7062%" y="229" width="0.0205%" height="15" fill="rgb(238,118,32)" fg:x="36850" fg:w="10"/><text x="75.9562%" y="239.50"></text></g><g><title>dst_release (9 samples, 0.02%)</title><rect x="75.7781%" y="213" width="0.0185%" height="15" fill="rgb(240,139,39)" fg:x="36885" fg:w="9"/><text x="76.0281%" y="223.50"></text></g><g><title>tcp_add_backlog (42 samples, 0.09%)</title><rect x="75.7268%" y="229" width="0.0863%" height="15" fill="rgb(235,10,37)" fg:x="36860" fg:w="42"/><text x="75.9768%" y="239.50"></text></g><g><title>skb_condense (8 samples, 0.02%)</title><rect x="75.7966%" y="213" width="0.0164%" height="15" fill="rgb(249,171,38)" fg:x="36894" fg:w="8"/><text x="76.0466%" y="223.50"></text></g><g><title>tcp_inbound_md5_hash (8 samples, 0.02%)</title><rect x="75.8213%" y="229" width="0.0164%" height="15" fill="rgb(242,144,32)" fg:x="36906" fg:w="8"/><text x="76.0713%" y="239.50"></text></g><g><title>__build_skb_around (20 samples, 0.04%)</title><rect x="75.9301%" y="181" width="0.0411%" height="15" fill="rgb(217,117,21)" fg:x="36959" fg:w="20"/><text x="76.1801%" y="191.50"></text></g><g><title>memset_erms (19 samples, 0.04%)</title><rect x="76.0534%" y="133" width="0.0390%" height="15" fill="rgb(249,87,1)" fg:x="37019" fg:w="19"/><text x="76.3034%" y="143.50"></text></g><g><title>__kmalloc_node_track_caller (53 samples, 0.11%)</title><rect x="75.9856%" y="165" width="0.1089%" height="15" fill="rgb(248,196,48)" fg:x="36986" fg:w="53"/><text x="76.2356%" y="175.50"></text></g><g><title>__kmem_cache_alloc_node (50 samples, 0.10%)</title><rect x="75.9918%" y="149" width="0.1027%" height="15" fill="rgb(251,206,33)" fg:x="36989" fg:w="50"/><text x="76.2418%" y="159.50"></text></g><g><title>kmalloc_reserve (68 samples, 0.14%)</title><rect x="75.9753%" y="181" width="0.1397%" height="15" fill="rgb(232,141,28)" fg:x="36981" fg:w="68"/><text x="76.2253%" y="191.50"></text></g><g><title>kmalloc_size_roundup (10 samples, 0.02%)</title><rect x="76.0945%" y="165" width="0.0205%" height="15" fill="rgb(209,167,14)" fg:x="37039" fg:w="10"/><text x="76.3445%" y="175.50"></text></g><g><title>kmem_cache_alloc_node (48 samples, 0.10%)</title><rect x="76.1150%" y="181" width="0.0986%" height="15" fill="rgb(225,11,50)" fg:x="37049" fg:w="48"/><text x="76.3650%" y="191.50"></text></g><g><title>memset_erms (7 samples, 0.01%)</title><rect x="76.1993%" y="165" width="0.0144%" height="15" fill="rgb(209,50,20)" fg:x="37090" fg:w="7"/><text x="76.4493%" y="175.50"></text></g><g><title>__tcp_send_ack.part.0 (165 samples, 0.34%)</title><rect x="75.8767%" y="213" width="0.3390%" height="15" fill="rgb(212,17,46)" fg:x="36933" fg:w="165"/><text x="76.1267%" y="223.50"></text></g><g><title>__alloc_skb (158 samples, 0.32%)</title><rect x="75.8911%" y="197" width="0.3246%" height="15" fill="rgb(216,101,39)" fg:x="36940" fg:w="158"/><text x="76.1411%" y="207.50"></text></g><g><title>__ip_finish_output (8 samples, 0.02%)</title><rect x="76.4581%" y="181" width="0.0164%" height="15" fill="rgb(212,228,48)" fg:x="37216" fg:w="8"/><text x="76.7081%" y="191.50"></text></g><g><title>__sk_dst_check (13 samples, 0.03%)</title><rect x="76.4848%" y="181" width="0.0267%" height="15" fill="rgb(250,6,50)" fg:x="37229" fg:w="13"/><text x="76.7348%" y="191.50"></text></g><g><title>ip_finish_output (12 samples, 0.02%)</title><rect x="76.5116%" y="181" width="0.0247%" height="15" fill="rgb(250,160,48)" fg:x="37242" fg:w="12"/><text x="76.7616%" y="191.50"></text></g><g><title>_raw_spin_lock_irqsave (11 samples, 0.02%)</title><rect x="76.7540%" y="69" width="0.0226%" height="15" fill="rgb(244,216,33)" fg:x="37360" fg:w="11"/><text x="77.0040%" y="79.50"></text></g><g><title>__netif_rx (37 samples, 0.08%)</title><rect x="76.7108%" y="117" width="0.0760%" height="15" fill="rgb(207,157,5)" fg:x="37339" fg:w="37"/><text x="76.9608%" y="127.50"></text></g><g><title>netif_rx_internal (36 samples, 0.07%)</title><rect x="76.7129%" y="101" width="0.0740%" height="15" fill="rgb(228,199,8)" fg:x="37340" fg:w="36"/><text x="76.9629%" y="111.50"></text></g><g><title>enqueue_to_backlog (29 samples, 0.06%)</title><rect x="76.7273%" y="85" width="0.0596%" height="15" fill="rgb(227,80,20)" fg:x="37347" fg:w="29"/><text x="76.9773%" y="95.50"></text></g><g><title>_raw_spin_unlock_irqrestore (5 samples, 0.01%)</title><rect x="76.7766%" y="69" width="0.0103%" height="15" fill="rgb(222,9,33)" fg:x="37371" fg:w="5"/><text x="77.0266%" y="79.50"></text></g><g><title>__sock_wfree (12 samples, 0.02%)</title><rect x="76.7869%" y="117" width="0.0247%" height="15" fill="rgb(239,44,28)" fg:x="37376" fg:w="12"/><text x="77.0369%" y="127.50"></text></g><g><title>eth_type_trans (5 samples, 0.01%)</title><rect x="76.8115%" y="117" width="0.0103%" height="15" fill="rgb(249,187,43)" fg:x="37388" fg:w="5"/><text x="77.0615%" y="127.50"></text></g><g><title>dev_hard_start_xmit (75 samples, 0.15%)</title><rect x="76.6697%" y="149" width="0.1541%" height="15" fill="rgb(216,141,28)" fg:x="37319" fg:w="75"/><text x="76.9197%" y="159.50"></text></g><g><title>loopback_xmit (73 samples, 0.15%)</title><rect x="76.6739%" y="133" width="0.1500%" height="15" fill="rgb(230,154,53)" fg:x="37321" fg:w="73"/><text x="76.9239%" y="143.50"></text></g><g><title>netif_skb_features (8 samples, 0.02%)</title><rect x="76.8505%" y="133" width="0.0164%" height="15" fill="rgb(227,82,4)" fg:x="37407" fg:w="8"/><text x="77.1005%" y="143.50"></text></g><g><title>validate_xmit_skb (22 samples, 0.05%)</title><rect x="76.8259%" y="149" width="0.0452%" height="15" fill="rgb(220,107,16)" fg:x="37395" fg:w="22"/><text x="77.0759%" y="159.50"></text></g><g><title>__dev_queue_xmit (135 samples, 0.28%)</title><rect x="76.5999%" y="165" width="0.2773%" height="15" fill="rgb(207,187,2)" fg:x="37285" fg:w="135"/><text x="76.8499%" y="175.50"></text></g><g><title>ip_finish_output2 (171 samples, 0.35%)</title><rect x="76.5362%" y="181" width="0.3513%" height="15" fill="rgb(210,162,52)" fg:x="37254" fg:w="171"/><text x="76.7862%" y="191.50"></text></g><g><title>__rcu_read_unlock (5 samples, 0.01%)</title><rect x="76.8772%" y="165" width="0.0103%" height="15" fill="rgb(217,216,49)" fg:x="37420" fg:w="5"/><text x="77.1272%" y="175.50"></text></g><g><title>__rcu_read_unlock (6 samples, 0.01%)</title><rect x="76.9430%" y="149" width="0.0123%" height="15" fill="rgb(218,146,49)" fg:x="37452" fg:w="6"/><text x="77.1930%" y="159.50"></text></g><g><title>ip_send_check (10 samples, 0.02%)</title><rect x="76.9553%" y="149" width="0.0205%" height="15" fill="rgb(216,55,40)" fg:x="37458" fg:w="10"/><text x="77.2053%" y="159.50"></text></g><g><title>ipv4_conntrack_defrag (8 samples, 0.02%)</title><rect x="76.9923%" y="133" width="0.0164%" height="15" fill="rgb(208,196,21)" fg:x="37476" fg:w="8"/><text x="77.2423%" y="143.50"></text></g><g><title>ipv4_conntrack_local (5 samples, 0.01%)</title><rect x="77.0087%" y="133" width="0.0103%" height="15" fill="rgb(242,117,42)" fg:x="37484" fg:w="5"/><text x="77.2587%" y="143.50"></text></g><g><title>__nf_conntrack_find_get (27 samples, 0.06%)</title><rect x="77.1073%" y="117" width="0.0555%" height="15" fill="rgb(210,11,23)" fg:x="37532" fg:w="27"/><text x="77.3573%" y="127.50"></text></g><g><title>get_l4proto (9 samples, 0.02%)</title><rect x="77.1628%" y="117" width="0.0185%" height="15" fill="rgb(217,110,2)" fg:x="37559" fg:w="9"/><text x="77.4128%" y="127.50"></text></g><g><title>hash_conntrack_raw (52 samples, 0.11%)</title><rect x="77.1813%" y="117" width="0.1068%" height="15" fill="rgb(229,77,54)" fg:x="37568" fg:w="52"/><text x="77.4313%" y="127.50"></text></g><g><title>__siphash_unaligned (27 samples, 0.06%)</title><rect x="77.2327%" y="101" width="0.0555%" height="15" fill="rgb(218,53,16)" fg:x="37593" fg:w="27"/><text x="77.4827%" y="111.50"></text></g><g><title>__local_bh_enable_ip (5 samples, 0.01%)</title><rect x="77.3991%" y="101" width="0.0103%" height="15" fill="rgb(215,38,13)" fg:x="37674" fg:w="5"/><text x="77.6491%" y="111.50"></text></g><g><title>__nf_ct_refresh_acct (5 samples, 0.01%)</title><rect x="77.4093%" y="101" width="0.0103%" height="15" fill="rgb(235,42,18)" fg:x="37679" fg:w="5"/><text x="77.6593%" y="111.50"></text></g><g><title>_raw_spin_lock_bh (8 samples, 0.02%)</title><rect x="77.4196%" y="101" width="0.0164%" height="15" fill="rgb(219,66,54)" fg:x="37684" fg:w="8"/><text x="77.6696%" y="111.50"></text></g><g><title>nf_conntrack_tcp_packet (73 samples, 0.15%)</title><rect x="77.2881%" y="117" width="0.1500%" height="15" fill="rgb(222,205,4)" fg:x="37620" fg:w="73"/><text x="77.5381%" y="127.50"></text></g><g><title>nf_conntrack_in (221 samples, 0.45%)</title><rect x="77.0190%" y="133" width="0.4540%" height="15" fill="rgb(227,213,46)" fg:x="37489" fg:w="221"/><text x="77.2690%" y="143.50"></text></g><g><title>nf_ct_get_tuple (17 samples, 0.03%)</title><rect x="77.4381%" y="117" width="0.0349%" height="15" fill="rgb(250,145,42)" fg:x="37693" fg:w="17"/><text x="77.6881%" y="127.50"></text></g><g><title>ip_local_out (313 samples, 0.64%)</title><rect x="76.8875%" y="181" width="0.6430%" height="15" fill="rgb(219,15,2)" fg:x="37425" fg:w="313"/><text x="77.1375%" y="191.50"></text></g><g><title>__ip_local_out (308 samples, 0.63%)</title><rect x="76.8978%" y="165" width="0.6328%" height="15" fill="rgb(231,181,52)" fg:x="37430" fg:w="308"/><text x="77.1478%" y="175.50"></text></g><g><title>nf_hook_slow (270 samples, 0.55%)</title><rect x="76.9759%" y="149" width="0.5547%" height="15" fill="rgb(235,1,42)" fg:x="37468" fg:w="270"/><text x="77.2259%" y="159.50"></text></g><g><title>nf_nat_ipv4_local_fn (28 samples, 0.06%)</title><rect x="77.4730%" y="133" width="0.0575%" height="15" fill="rgb(249,88,27)" fg:x="37710" fg:w="28"/><text x="77.7230%" y="143.50"></text></g><g><title>nf_nat_inet_fn (12 samples, 0.02%)</title><rect x="77.5059%" y="117" width="0.0247%" height="15" fill="rgb(235,145,16)" fg:x="37726" fg:w="12"/><text x="77.7559%" y="127.50"></text></g><g><title>apparmor_ip_postroute (6 samples, 0.01%)</title><rect x="77.6107%" y="149" width="0.0123%" height="15" fill="rgb(237,114,19)" fg:x="37777" fg:w="6"/><text x="77.8607%" y="159.50"></text></g><g><title>ipv4_confirm (11 samples, 0.02%)</title><rect x="77.6230%" y="149" width="0.0226%" height="15" fill="rgb(238,51,50)" fg:x="37783" fg:w="11"/><text x="77.8730%" y="159.50"></text></g><g><title>ip_output (77 samples, 0.16%)</title><rect x="77.5306%" y="181" width="0.1582%" height="15" fill="rgb(205,194,25)" fg:x="37738" fg:w="77"/><text x="77.7806%" y="191.50"></text></g><g><title>nf_hook_slow (54 samples, 0.11%)</title><rect x="77.5778%" y="165" width="0.1109%" height="15" fill="rgb(215,203,17)" fg:x="37761" fg:w="54"/><text x="77.8278%" y="175.50"></text></g><g><title>nf_nat_ipv4_out (21 samples, 0.04%)</title><rect x="77.6456%" y="149" width="0.0431%" height="15" fill="rgb(233,112,49)" fg:x="37794" fg:w="21"/><text x="77.8956%" y="159.50"></text></g><g><title>nf_nat_inet_fn (6 samples, 0.01%)</title><rect x="77.6764%" y="133" width="0.0123%" height="15" fill="rgb(241,130,26)" fg:x="37809" fg:w="6"/><text x="77.9264%" y="143.50"></text></g><g><title>__ip_queue_xmit (637 samples, 1.31%)</title><rect x="76.3842%" y="197" width="1.3087%" height="15" fill="rgb(252,223,19)" fg:x="37180" fg:w="637"/><text x="76.6342%" y="207.50"></text></g><g><title>__tcp_select_window (8 samples, 0.02%)</title><rect x="77.6929%" y="197" width="0.0164%" height="15" fill="rgb(211,95,25)" fg:x="37817" fg:w="8"/><text x="77.9429%" y="207.50"></text></g><g><title>bpf_skops_write_hdr_opt.isra.0 (8 samples, 0.02%)</title><rect x="77.7114%" y="197" width="0.0164%" height="15" fill="rgb(251,182,27)" fg:x="37826" fg:w="8"/><text x="77.9614%" y="207.50"></text></g><g><title>tcp_established_options (5 samples, 0.01%)</title><rect x="77.7319%" y="197" width="0.0103%" height="15" fill="rgb(238,24,4)" fg:x="37836" fg:w="5"/><text x="77.9819%" y="207.50"></text></g><g><title>tcp_options_write (7 samples, 0.01%)</title><rect x="77.7422%" y="197" width="0.0144%" height="15" fill="rgb(224,220,25)" fg:x="37841" fg:w="7"/><text x="77.9922%" y="207.50"></text></g><g><title>__tcp_transmit_skb (751 samples, 1.54%)</title><rect x="76.2157%" y="213" width="1.5429%" height="15" fill="rgb(239,133,26)" fg:x="37098" fg:w="751"/><text x="76.4657%" y="223.50"></text></g><g><title>inet_sk_rx_dst_set (19 samples, 0.04%)</title><rect x="77.8634%" y="197" width="0.0390%" height="15" fill="rgb(211,94,48)" fg:x="37900" fg:w="19"/><text x="78.1134%" y="207.50"></text></g><g><title>tcp_ack (40 samples, 0.08%)</title><rect x="77.9024%" y="197" width="0.0822%" height="15" fill="rgb(239,87,6)" fg:x="37919" fg:w="40"/><text x="78.1524%" y="207.50"></text></g><g><title>tcp_check_space (14 samples, 0.03%)</title><rect x="77.9846%" y="197" width="0.0288%" height="15" fill="rgb(227,62,0)" fg:x="37959" fg:w="14"/><text x="78.2346%" y="207.50"></text></g><g><title>dst_release (12 samples, 0.02%)</title><rect x="78.0894%" y="181" width="0.0247%" height="15" fill="rgb(211,226,4)" fg:x="38010" fg:w="12"/><text x="78.3394%" y="191.50"></text></g><g><title>mod_memcg_state (12 samples, 0.02%)</title><rect x="78.1263%" y="165" width="0.0247%" height="15" fill="rgb(253,38,52)" fg:x="38028" fg:w="12"/><text x="78.3763%" y="175.50"></text></g><g><title>__mod_memcg_state (8 samples, 0.02%)</title><rect x="78.1346%" y="149" width="0.0164%" height="15" fill="rgb(229,126,40)" fg:x="38032" fg:w="8"/><text x="78.3846%" y="159.50"></text></g><g><title>mem_cgroup_charge_skmem (25 samples, 0.05%)</title><rect x="78.1140%" y="181" width="0.0514%" height="15" fill="rgb(229,165,44)" fg:x="38022" fg:w="25"/><text x="78.3640%" y="191.50"></text></g><g><title>try_charge_memcg (7 samples, 0.01%)</title><rect x="78.1510%" y="165" width="0.0144%" height="15" fill="rgb(247,95,47)" fg:x="38040" fg:w="7"/><text x="78.4010%" y="175.50"></text></g><g><title>sk_forced_mem_schedule (10 samples, 0.02%)</title><rect x="78.1654%" y="181" width="0.0205%" height="15" fill="rgb(216,140,30)" fg:x="38047" fg:w="10"/><text x="78.4154%" y="191.50"></text></g><g><title>__rcu_read_lock (11 samples, 0.02%)</title><rect x="78.2414%" y="165" width="0.0226%" height="15" fill="rgb(246,214,8)" fg:x="38084" fg:w="11"/><text x="78.4914%" y="175.50"></text></g><g><title>ttwu_do_activate (6 samples, 0.01%)</title><rect x="78.4037%" y="53" width="0.0123%" height="15" fill="rgb(227,224,15)" fg:x="38163" fg:w="6"/><text x="78.6537%" y="63.50"></text></g><g><title>__wake_up_common (17 samples, 0.03%)</title><rect x="78.3873%" y="101" width="0.0349%" height="15" fill="rgb(233,175,4)" fg:x="38155" fg:w="17"/><text x="78.6373%" y="111.50"></text></g><g><title>ep_autoremove_wake_function (16 samples, 0.03%)</title><rect x="78.3893%" y="85" width="0.0329%" height="15" fill="rgb(221,66,45)" fg:x="38156" fg:w="16"/><text x="78.6393%" y="95.50"></text></g><g><title>try_to_wake_up (16 samples, 0.03%)</title><rect x="78.3893%" y="69" width="0.0329%" height="15" fill="rgb(221,178,18)" fg:x="38156" fg:w="16"/><text x="78.6393%" y="79.50"></text></g><g><title>__wake_up_common_lock (18 samples, 0.04%)</title><rect x="78.3873%" y="117" width="0.0370%" height="15" fill="rgb(213,81,29)" fg:x="38155" fg:w="18"/><text x="78.6373%" y="127.50"></text></g><g><title>_raw_read_lock_irqsave (30 samples, 0.06%)</title><rect x="78.4242%" y="117" width="0.0616%" height="15" fill="rgb(220,89,49)" fg:x="38173" fg:w="30"/><text x="78.6742%" y="127.50"></text></g><g><title>__wake_up_common (119 samples, 0.24%)</title><rect x="78.2661%" y="149" width="0.2445%" height="15" fill="rgb(227,60,33)" fg:x="38096" fg:w="119"/><text x="78.5161%" y="159.50"></text></g><g><title>ep_poll_callback (102 samples, 0.21%)</title><rect x="78.3010%" y="133" width="0.2096%" height="15" fill="rgb(205,113,12)" fg:x="38113" fg:w="102"/><text x="78.5510%" y="143.50"></text></g><g><title>_raw_read_unlock_irqrestore (12 samples, 0.02%)</title><rect x="78.4859%" y="117" width="0.0247%" height="15" fill="rgb(211,32,1)" fg:x="38203" fg:w="12"/><text x="78.7359%" y="127.50"></text></g><g><title>_raw_spin_lock_irqsave (19 samples, 0.04%)</title><rect x="78.5105%" y="149" width="0.0390%" height="15" fill="rgb(246,2,12)" fg:x="38215" fg:w="19"/><text x="78.7605%" y="159.50"></text></g><g><title>sock_def_readable (181 samples, 0.37%)</title><rect x="78.1859%" y="181" width="0.3719%" height="15" fill="rgb(243,37,27)" fg:x="38057" fg:w="181"/><text x="78.4359%" y="191.50"></text></g><g><title>__wake_up_common_lock (143 samples, 0.29%)</title><rect x="78.2640%" y="165" width="0.2938%" height="15" fill="rgb(248,211,31)" fg:x="38095" fg:w="143"/><text x="78.5140%" y="175.50"></text></g><g><title>tcp_data_ready (7 samples, 0.01%)</title><rect x="78.5578%" y="181" width="0.0144%" height="15" fill="rgb(242,146,47)" fg:x="38238" fg:w="7"/><text x="78.8078%" y="191.50"></text></g><g><title>tcp_event_data_recv (31 samples, 0.06%)</title><rect x="78.5722%" y="181" width="0.0637%" height="15" fill="rgb(206,70,20)" fg:x="38245" fg:w="31"/><text x="78.8222%" y="191.50"></text></g><g><title>tcp_data_queue (325 samples, 0.67%)</title><rect x="78.0134%" y="197" width="0.6677%" height="15" fill="rgb(215,10,51)" fg:x="37973" fg:w="325"/><text x="78.2634%" y="207.50"></text></g><g><title>tcp_queue_rcv (22 samples, 0.05%)</title><rect x="78.6359%" y="181" width="0.0452%" height="15" fill="rgb(243,178,53)" fg:x="38276" fg:w="22"/><text x="78.8859%" y="191.50"></text></g><g><title>tcp_mstamp_refresh (16 samples, 0.03%)</title><rect x="78.6810%" y="197" width="0.0329%" height="15" fill="rgb(233,221,20)" fg:x="38298" fg:w="16"/><text x="78.9310%" y="207.50"></text></g><g><title>ktime_get (15 samples, 0.03%)</title><rect x="78.6831%" y="181" width="0.0308%" height="15" fill="rgb(218,95,35)" fg:x="38299" fg:w="15"/><text x="78.9331%" y="191.50"></text></g><g><title>read_tsc (7 samples, 0.01%)</title><rect x="78.6995%" y="165" width="0.0144%" height="15" fill="rgb(229,13,5)" fg:x="38307" fg:w="7"/><text x="78.9495%" y="175.50"></text></g><g><title>tcp_v4_do_rcv (1,411 samples, 2.90%)</title><rect x="75.8377%" y="229" width="2.8988%" height="15" fill="rgb(252,164,30)" fg:x="36914" fg:w="1411"/><text x="76.0877%" y="239.50">tc..</text></g><g><title>tcp_rcv_established (476 samples, 0.98%)</title><rect x="77.7586%" y="213" width="0.9779%" height="15" fill="rgb(232,68,36)" fg:x="37849" fg:w="476"/><text x="78.0086%" y="223.50"></text></g><g><title>tcp_urg (11 samples, 0.02%)</title><rect x="78.7139%" y="197" width="0.0226%" height="15" fill="rgb(219,59,54)" fg:x="38314" fg:w="11"/><text x="78.9639%" y="207.50"></text></g><g><title>ip_protocol_deliver_rcu (1,878 samples, 3.86%)</title><rect x="74.9111%" y="261" width="3.8582%" height="15" fill="rgb(250,92,33)" fg:x="36463" fg:w="1878"/><text x="75.1611%" y="271.50">ip_p..</text></g><g><title>tcp_v4_rcv (1,833 samples, 3.77%)</title><rect x="75.0036%" y="245" width="3.7658%" height="15" fill="rgb(229,162,54)" fg:x="36508" fg:w="1833"/><text x="75.2536%" y="255.50">tcp_..</text></g><g><title>tcp_v4_fill_cb (16 samples, 0.03%)</title><rect x="78.7365%" y="229" width="0.0329%" height="15" fill="rgb(244,114,52)" fg:x="38325" fg:w="16"/><text x="78.9865%" y="239.50"></text></g><g><title>ip_local_deliver_finish (1,960 samples, 4.03%)</title><rect x="74.8659%" y="277" width="4.0267%" height="15" fill="rgb(212,211,43)" fg:x="36441" fg:w="1960"/><text x="75.1159%" y="287.50">ip_l..</text></g><g><title>ktime_get_with_offset (60 samples, 0.12%)</title><rect x="78.7694%" y="261" width="0.1233%" height="15" fill="rgb(226,147,8)" fg:x="38341" fg:w="60"/><text x="79.0194%" y="271.50"></text></g><g><title>read_tsc (20 samples, 0.04%)</title><rect x="78.8516%" y="245" width="0.0411%" height="15" fill="rgb(226,23,13)" fg:x="38381" fg:w="20"/><text x="79.1016%" y="255.50"></text></g><g><title>__rcu_read_lock (8 samples, 0.02%)</title><rect x="78.9563%" y="261" width="0.0164%" height="15" fill="rgb(240,63,4)" fg:x="38432" fg:w="8"/><text x="79.2063%" y="271.50"></text></g><g><title>__rcu_read_unlock (10 samples, 0.02%)</title><rect x="78.9728%" y="261" width="0.0205%" height="15" fill="rgb(221,1,32)" fg:x="38440" fg:w="10"/><text x="79.2228%" y="271.50"></text></g><g><title>ip_rcv_core (44 samples, 0.09%)</title><rect x="78.9933%" y="261" width="0.0904%" height="15" fill="rgb(242,117,10)" fg:x="38450" fg:w="44"/><text x="79.2433%" y="271.50"></text></g><g><title>ip_rcv_finish_core.constprop.0 (46 samples, 0.09%)</title><rect x="79.0837%" y="261" width="0.0945%" height="15" fill="rgb(249,172,44)" fg:x="38494" fg:w="46"/><text x="79.3337%" y="271.50"></text></g><g><title>ip_sabotage_in (14 samples, 0.03%)</title><rect x="79.2460%" y="245" width="0.0288%" height="15" fill="rgb(244,46,45)" fg:x="38573" fg:w="14"/><text x="79.4960%" y="255.50"></text></g><g><title>ipv4_conntrack_defrag (39 samples, 0.08%)</title><rect x="79.2748%" y="245" width="0.0801%" height="15" fill="rgb(206,43,17)" fg:x="38587" fg:w="39"/><text x="79.5248%" y="255.50"></text></g><g><title>ipv4_conntrack_in (14 samples, 0.03%)</title><rect x="79.3549%" y="245" width="0.0288%" height="15" fill="rgb(239,218,39)" fg:x="38626" fg:w="14"/><text x="79.6049%" y="255.50"></text></g><g><title>nf_conntrack_in (23 samples, 0.05%)</title><rect x="79.3837%" y="245" width="0.0473%" height="15" fill="rgb(208,169,54)" fg:x="38640" fg:w="23"/><text x="79.6337%" y="255.50"></text></g><g><title>__netif_receive_skb_one_core (2,511 samples, 5.16%)</title><rect x="74.3914%" y="293" width="5.1587%" height="15" fill="rgb(247,25,42)" fg:x="36210" fg:w="2511"/><text x="74.6414%" y="303.50">__neti..</text></g><g><title>ip_rcv (320 samples, 0.66%)</title><rect x="78.8927%" y="277" width="0.6574%" height="15" fill="rgb(226,23,31)" fg:x="38401" fg:w="320"/><text x="79.1427%" y="287.50"></text></g><g><title>nf_hook_slow (181 samples, 0.37%)</title><rect x="79.1782%" y="261" width="0.3719%" height="15" fill="rgb(247,16,28)" fg:x="38540" fg:w="181"/><text x="79.4282%" y="271.50"></text></g><g><title>nf_nat_ipv4_pre_routing (58 samples, 0.12%)</title><rect x="79.4309%" y="245" width="0.1192%" height="15" fill="rgb(231,147,38)" fg:x="38663" fg:w="58"/><text x="79.6809%" y="255.50"></text></g><g><title>nf_nat_inet_fn (19 samples, 0.04%)</title><rect x="79.5110%" y="229" width="0.0390%" height="15" fill="rgb(253,81,48)" fg:x="38702" fg:w="19"/><text x="79.7610%" y="239.50"></text></g><g><title>_raw_spin_lock_irq (11 samples, 0.02%)</title><rect x="79.5665%" y="293" width="0.0226%" height="15" fill="rgb(249,222,43)" fg:x="38729" fg:w="11"/><text x="79.8165%" y="303.50"></text></g><g><title>__napi_poll (2,579 samples, 5.30%)</title><rect x="74.3092%" y="325" width="5.2984%" height="15" fill="rgb(221,3,27)" fg:x="36170" fg:w="2579"/><text x="74.5592%" y="335.50">__napi..</text></g><g><title>process_backlog (2,575 samples, 5.29%)</title><rect x="74.3174%" y="309" width="5.2902%" height="15" fill="rgb(228,180,5)" fg:x="36174" fg:w="2575"/><text x="74.5674%" y="319.50">proces..</text></g><g><title>_raw_spin_unlock_irq (9 samples, 0.02%)</title><rect x="79.5891%" y="293" width="0.0185%" height="15" fill="rgb(227,131,42)" fg:x="38740" fg:w="9"/><text x="79.8391%" y="303.50"></text></g><g><title>_raw_spin_lock_irqsave (7 samples, 0.01%)</title><rect x="79.6076%" y="325" width="0.0144%" height="15" fill="rgb(212,3,39)" fg:x="38749" fg:w="7"/><text x="79.8576%" y="335.50"></text></g><g><title>kfree_skbmem (13 samples, 0.03%)</title><rect x="79.6240%" y="325" width="0.0267%" height="15" fill="rgb(226,45,5)" fg:x="38757" fg:w="13"/><text x="79.8740%" y="335.50"></text></g><g><title>kmem_cache_free (12 samples, 0.02%)</title><rect x="79.6507%" y="325" width="0.0247%" height="15" fill="rgb(215,167,45)" fg:x="38770" fg:w="12"/><text x="79.9007%" y="335.50"></text></g><g><title>cache_from_obj (6 samples, 0.01%)</title><rect x="79.6631%" y="309" width="0.0123%" height="15" fill="rgb(250,218,53)" fg:x="38776" fg:w="6"/><text x="79.9131%" y="319.50"></text></g><g><title>__kmem_cache_free (8 samples, 0.02%)</title><rect x="79.7309%" y="293" width="0.0164%" height="15" fill="rgb(207,140,0)" fg:x="38809" fg:w="8"/><text x="79.9809%" y="303.50"></text></g><g><title>skb_release_data (32 samples, 0.07%)</title><rect x="79.6898%" y="309" width="0.0657%" height="15" fill="rgb(238,133,51)" fg:x="38789" fg:w="32"/><text x="79.9398%" y="319.50"></text></g><g><title>net_rx_action (2,708 samples, 5.56%)</title><rect x="74.1962%" y="341" width="5.5634%" height="15" fill="rgb(218,203,53)" fg:x="36115" fg:w="2708"/><text x="74.4462%" y="351.50">net_rx_..</text></g><g><title>napi_consume_skb (41 samples, 0.08%)</title><rect x="79.6754%" y="325" width="0.0842%" height="15" fill="rgb(226,184,25)" fg:x="38782" fg:w="41"/><text x="79.9254%" y="335.50"></text></g><g><title>__local_bh_enable_ip (2,798 samples, 5.75%)</title><rect x="74.0154%" y="389" width="5.7483%" height="15" fill="rgb(231,121,21)" fg:x="36027" fg:w="2798"/><text x="74.2654%" y="399.50">__local..</text></g><g><title>do_softirq.part.0 (2,790 samples, 5.73%)</title><rect x="74.0318%" y="373" width="5.7319%" height="15" fill="rgb(251,14,34)" fg:x="36035" fg:w="2790"/><text x="74.2818%" y="383.50">do_soft..</text></g><g><title>__softirqentry_text_start (2,754 samples, 5.66%)</title><rect x="74.1058%" y="357" width="5.6579%" height="15" fill="rgb(249,193,11)" fg:x="36071" fg:w="2754"/><text x="74.3558%" y="367.50">__softi..</text></g><g><title>__raise_softirq_irqoff (6 samples, 0.01%)</title><rect x="79.8850%" y="309" width="0.0123%" height="15" fill="rgb(220,172,37)" fg:x="38884" fg:w="6"/><text x="80.1350%" y="319.50"></text></g><g><title>_raw_spin_lock_irqsave (15 samples, 0.03%)</title><rect x="79.8973%" y="309" width="0.0308%" height="15" fill="rgb(231,229,43)" fg:x="38890" fg:w="15"/><text x="80.1473%" y="319.50"></text></g><g><title>__netif_rx (52 samples, 0.11%)</title><rect x="79.8274%" y="357" width="0.1068%" height="15" fill="rgb(250,161,5)" fg:x="38856" fg:w="52"/><text x="80.0774%" y="367.50"></text></g><g><title>netif_rx_internal (50 samples, 0.10%)</title><rect x="79.8315%" y="341" width="0.1027%" height="15" fill="rgb(218,225,18)" fg:x="38858" fg:w="50"/><text x="80.0815%" y="351.50"></text></g><g><title>enqueue_to_backlog (40 samples, 0.08%)</title><rect x="79.8521%" y="325" width="0.0822%" height="15" fill="rgb(245,45,42)" fg:x="38868" fg:w="40"/><text x="80.1021%" y="335.50"></text></g><g><title>eth_type_trans (8 samples, 0.02%)</title><rect x="79.9343%" y="357" width="0.0164%" height="15" fill="rgb(211,115,1)" fg:x="38908" fg:w="8"/><text x="80.1843%" y="367.50"></text></g><g><title>sk_free (8 samples, 0.02%)</title><rect x="79.9507%" y="357" width="0.0164%" height="15" fill="rgb(248,133,52)" fg:x="38916" fg:w="8"/><text x="80.2007%" y="367.50"></text></g><g><title>skb_clone_tx_timestamp (5 samples, 0.01%)</title><rect x="79.9671%" y="357" width="0.0103%" height="15" fill="rgb(238,100,21)" fg:x="38924" fg:w="5"/><text x="80.2171%" y="367.50"></text></g><g><title>dev_hard_start_xmit (118 samples, 0.24%)</title><rect x="79.7658%" y="389" width="0.2424%" height="15" fill="rgb(247,144,11)" fg:x="38826" fg:w="118"/><text x="80.0158%" y="399.50"></text></g><g><title>loopback_xmit (106 samples, 0.22%)</title><rect x="79.7904%" y="373" width="0.2178%" height="15" fill="rgb(206,164,16)" fg:x="38838" fg:w="106"/><text x="80.0404%" y="383.50"></text></g><g><title>tcp_wfree (15 samples, 0.03%)</title><rect x="79.9774%" y="357" width="0.0308%" height="15" fill="rgb(222,34,3)" fg:x="38929" fg:w="15"/><text x="80.2274%" y="367.50"></text></g><g><title>netif_skb_features (16 samples, 0.03%)</title><rect x="80.0534%" y="373" width="0.0329%" height="15" fill="rgb(248,82,4)" fg:x="38966" fg:w="16"/><text x="80.3034%" y="383.50"></text></g><g><title>skb_network_protocol (7 samples, 0.01%)</title><rect x="80.0719%" y="357" width="0.0144%" height="15" fill="rgb(228,81,46)" fg:x="38975" fg:w="7"/><text x="80.3219%" y="367.50"></text></g><g><title>validate_xmit_skb (40 samples, 0.08%)</title><rect x="80.0103%" y="389" width="0.0822%" height="15" fill="rgb(227,67,47)" fg:x="38945" fg:w="40"/><text x="80.2603%" y="399.50"></text></g><g><title>__dev_queue_xmit (2,994 samples, 6.15%)</title><rect x="73.9456%" y="405" width="6.1510%" height="15" fill="rgb(215,93,53)" fg:x="35993" fg:w="2994"/><text x="74.1956%" y="415.50">__dev_qu..</text></g><g><title>ip_finish_output2 (3,061 samples, 6.29%)</title><rect x="73.8202%" y="421" width="6.2886%" height="15" fill="rgb(248,194,39)" fg:x="35932" fg:w="3061"/><text x="74.0702%" y="431.50">ip_finis..</text></g><g><title>__rcu_read_unlock (10 samples, 0.02%)</title><rect x="80.1602%" y="389" width="0.0205%" height="15" fill="rgb(215,5,19)" fg:x="39018" fg:w="10"/><text x="80.4102%" y="399.50"></text></g><g><title>ip_send_check (6 samples, 0.01%)</title><rect x="80.1828%" y="389" width="0.0123%" height="15" fill="rgb(226,215,51)" fg:x="39029" fg:w="6"/><text x="80.4328%" y="399.50"></text></g><g><title>ipv4_conntrack_defrag (12 samples, 0.02%)</title><rect x="80.2239%" y="373" width="0.0247%" height="15" fill="rgb(225,56,26)" fg:x="39049" fg:w="12"/><text x="80.4739%" y="383.50"></text></g><g><title>ipv4_conntrack_local (12 samples, 0.02%)</title><rect x="80.2486%" y="373" width="0.0247%" height="15" fill="rgb(222,75,29)" fg:x="39061" fg:w="12"/><text x="80.4986%" y="383.50"></text></g><g><title>__nf_conntrack_find_get (102 samples, 0.21%)</title><rect x="80.3534%" y="357" width="0.2096%" height="15" fill="rgb(236,139,6)" fg:x="39112" fg:w="102"/><text x="80.6034%" y="367.50"></text></g><g><title>get_l4proto (16 samples, 0.03%)</title><rect x="80.5629%" y="357" width="0.0329%" height="15" fill="rgb(223,137,36)" fg:x="39214" fg:w="16"/><text x="80.8129%" y="367.50"></text></g><g><title>hash_conntrack_raw (63 samples, 0.13%)</title><rect x="80.5958%" y="357" width="0.1294%" height="15" fill="rgb(226,99,2)" fg:x="39230" fg:w="63"/><text x="80.8458%" y="367.50"></text></g><g><title>__siphash_unaligned (44 samples, 0.09%)</title><rect x="80.6348%" y="341" width="0.0904%" height="15" fill="rgb(206,133,23)" fg:x="39249" fg:w="44"/><text x="80.8848%" y="351.50"></text></g><g><title>__nf_ct_refresh_acct (7 samples, 0.01%)</title><rect x="81.0046%" y="341" width="0.0144%" height="15" fill="rgb(243,173,15)" fg:x="39429" fg:w="7"/><text x="81.2546%" y="351.50"></text></g><g><title>_raw_spin_lock_bh (5 samples, 0.01%)</title><rect x="81.0190%" y="341" width="0.0103%" height="15" fill="rgb(228,69,28)" fg:x="39436" fg:w="5"/><text x="81.2690%" y="351.50"></text></g><g><title>nf_conntrack_tcp_packet (161 samples, 0.33%)</title><rect x="80.7252%" y="357" width="0.3308%" height="15" fill="rgb(212,51,22)" fg:x="39293" fg:w="161"/><text x="80.9752%" y="367.50"></text></g><g><title>nf_ct_seq_offset (8 samples, 0.02%)</title><rect x="81.0395%" y="341" width="0.0164%" height="15" fill="rgb(227,113,0)" fg:x="39446" fg:w="8"/><text x="81.2895%" y="351.50"></text></g><g><title>nf_conntrack_in (401 samples, 0.82%)</title><rect x="80.2732%" y="373" width="0.8238%" height="15" fill="rgb(252,84,27)" fg:x="39073" fg:w="401"/><text x="80.5232%" y="383.50"></text></g><g><title>nf_ct_get_tuple (20 samples, 0.04%)</title><rect x="81.0560%" y="357" width="0.0411%" height="15" fill="rgb(223,145,39)" fg:x="39454" fg:w="20"/><text x="81.3060%" y="367.50"></text></g><g><title>ip_local_out (524 samples, 1.08%)</title><rect x="80.1089%" y="421" width="1.0765%" height="15" fill="rgb(239,219,30)" fg:x="38993" fg:w="524"/><text x="80.3589%" y="431.50"></text></g><g><title>__ip_local_out (522 samples, 1.07%)</title><rect x="80.1130%" y="405" width="1.0724%" height="15" fill="rgb(224,196,39)" fg:x="38995" fg:w="522"/><text x="80.3630%" y="415.50"></text></g><g><title>nf_hook_slow (482 samples, 0.99%)</title><rect x="80.1952%" y="389" width="0.9902%" height="15" fill="rgb(205,35,43)" fg:x="39035" fg:w="482"/><text x="80.4452%" y="399.50"></text></g><g><title>nf_nat_ipv4_local_fn (43 samples, 0.09%)</title><rect x="81.0971%" y="373" width="0.0883%" height="15" fill="rgb(228,201,21)" fg:x="39474" fg:w="43"/><text x="81.3471%" y="383.50"></text></g><g><title>nf_nat_inet_fn (22 samples, 0.05%)</title><rect x="81.1402%" y="357" width="0.0452%" height="15" fill="rgb(237,118,16)" fg:x="39495" fg:w="22"/><text x="81.3902%" y="367.50"></text></g><g><title>__rcu_read_unlock (6 samples, 0.01%)</title><rect x="81.2306%" y="405" width="0.0123%" height="15" fill="rgb(241,17,19)" fg:x="39539" fg:w="6"/><text x="81.4806%" y="415.50"></text></g><g><title>apparmor_ip_postroute (14 samples, 0.03%)</title><rect x="81.2779%" y="389" width="0.0288%" height="15" fill="rgb(214,10,25)" fg:x="39562" fg:w="14"/><text x="81.5279%" y="399.50"></text></g><g><title>ipv4_confirm (14 samples, 0.03%)</title><rect x="81.3066%" y="389" width="0.0288%" height="15" fill="rgb(238,37,29)" fg:x="39576" fg:w="14"/><text x="81.5566%" y="399.50"></text></g><g><title>nf_confirm (7 samples, 0.01%)</title><rect x="81.3354%" y="389" width="0.0144%" height="15" fill="rgb(253,83,25)" fg:x="39590" fg:w="7"/><text x="81.5854%" y="399.50"></text></g><g><title>ip_output (121 samples, 0.25%)</title><rect x="81.1854%" y="421" width="0.2486%" height="15" fill="rgb(234,192,12)" fg:x="39517" fg:w="121"/><text x="81.4354%" y="431.50"></text></g><g><title>nf_hook_slow (93 samples, 0.19%)</title><rect x="81.2429%" y="405" width="0.1911%" height="15" fill="rgb(241,216,45)" fg:x="39545" fg:w="93"/><text x="81.4929%" y="415.50"></text></g><g><title>nf_nat_ipv4_out (41 samples, 0.08%)</title><rect x="81.3498%" y="389" width="0.0842%" height="15" fill="rgb(242,22,33)" fg:x="39597" fg:w="41"/><text x="81.5998%" y="399.50"></text></g><g><title>nf_nat_inet_fn (11 samples, 0.02%)</title><rect x="81.4114%" y="373" width="0.0226%" height="15" fill="rgb(231,105,49)" fg:x="39627" fg:w="11"/><text x="81.6614%" y="383.50"></text></g><g><title>__ip_queue_xmit (3,817 samples, 7.84%)</title><rect x="73.5963%" y="437" width="7.8418%" height="15" fill="rgb(218,204,15)" fg:x="35823" fg:w="3817"/><text x="73.8463%" y="447.50">__ip_queue_..</text></g><g><title>__skb_clone (32 samples, 0.07%)</title><rect x="81.4381%" y="437" width="0.0657%" height="15" fill="rgb(235,138,41)" fg:x="39640" fg:w="32"/><text x="81.6881%" y="447.50"></text></g><g><title>__copy_skb_header (14 samples, 0.03%)</title><rect x="81.4751%" y="421" width="0.0288%" height="15" fill="rgb(246,0,9)" fg:x="39658" fg:w="14"/><text x="81.7251%" y="431.50"></text></g><g><title>__tcp_select_window (20 samples, 0.04%)</title><rect x="81.5039%" y="437" width="0.0411%" height="15" fill="rgb(210,74,4)" fg:x="39672" fg:w="20"/><text x="81.7539%" y="447.50"></text></g><g><title>bpf_skops_write_hdr_opt.isra.0 (10 samples, 0.02%)</title><rect x="81.5470%" y="437" width="0.0205%" height="15" fill="rgb(250,60,41)" fg:x="39693" fg:w="10"/><text x="81.7970%" y="447.50"></text></g><g><title>cubictcp_cwnd_event (18 samples, 0.04%)</title><rect x="81.5675%" y="437" width="0.0370%" height="15" fill="rgb(220,115,12)" fg:x="39703" fg:w="18"/><text x="81.8175%" y="447.50"></text></g><g><title>skb_clone (16 samples, 0.03%)</title><rect x="81.6066%" y="437" width="0.0329%" height="15" fill="rgb(237,100,13)" fg:x="39722" fg:w="16"/><text x="81.8566%" y="447.50"></text></g><g><title>tcp_established_options (6 samples, 0.01%)</title><rect x="81.6415%" y="437" width="0.0123%" height="15" fill="rgb(213,55,26)" fg:x="39739" fg:w="6"/><text x="81.8915%" y="447.50"></text></g><g><title>tcp_options_write (16 samples, 0.03%)</title><rect x="81.6538%" y="437" width="0.0329%" height="15" fill="rgb(216,17,4)" fg:x="39745" fg:w="16"/><text x="81.9038%" y="447.50"></text></g><g><title>tcp_rate_skb_sent (8 samples, 0.02%)</title><rect x="81.6867%" y="437" width="0.0164%" height="15" fill="rgb(220,153,47)" fg:x="39761" fg:w="8"/><text x="81.9367%" y="447.50"></text></g><g><title>tcp_update_skb_after_send (14 samples, 0.03%)</title><rect x="81.7031%" y="437" width="0.0288%" height="15" fill="rgb(215,131,9)" fg:x="39769" fg:w="14"/><text x="81.9531%" y="447.50"></text></g><g><title>__list_del_entry_valid (9 samples, 0.02%)</title><rect x="81.7134%" y="421" width="0.0185%" height="15" fill="rgb(233,46,42)" fg:x="39774" fg:w="9"/><text x="81.9634%" y="431.50"></text></g><g><title>__tcp_transmit_skb (4,092 samples, 8.41%)</title><rect x="73.3395%" y="453" width="8.4068%" height="15" fill="rgb(226,86,7)" fg:x="35698" fg:w="4092"/><text x="73.5895%" y="463.50">__tcp_transm..</text></g><g><title>tcp_v4_send_check (7 samples, 0.01%)</title><rect x="81.7319%" y="437" width="0.0144%" height="15" fill="rgb(239,226,21)" fg:x="39783" fg:w="7"/><text x="81.9819%" y="447.50"></text></g><g><title>ktime_get (25 samples, 0.05%)</title><rect x="81.7463%" y="453" width="0.0514%" height="15" fill="rgb(244,137,22)" fg:x="39790" fg:w="25"/><text x="81.9963%" y="463.50"></text></g><g><title>read_tsc (14 samples, 0.03%)</title><rect x="81.7689%" y="437" width="0.0288%" height="15" fill="rgb(211,139,35)" fg:x="39801" fg:w="14"/><text x="82.0189%" y="447.50"></text></g><g><title>tcp_check_space (8 samples, 0.02%)</title><rect x="81.7976%" y="453" width="0.0164%" height="15" fill="rgb(214,62,50)" fg:x="39815" fg:w="8"/><text x="82.0476%" y="463.50"></text></g><g><title>_raw_spin_lock (16 samples, 0.03%)</title><rect x="81.9271%" y="405" width="0.0329%" height="15" fill="rgb(212,113,44)" fg:x="39878" fg:w="16"/><text x="82.1771%" y="415.50"></text></g><g><title>enqueue_timer (12 samples, 0.02%)</title><rect x="81.9640%" y="405" width="0.0247%" height="15" fill="rgb(226,150,43)" fg:x="39896" fg:w="12"/><text x="82.2140%" y="415.50"></text></g><g><title>get_nohz_timer_target (9 samples, 0.02%)</title><rect x="81.9887%" y="405" width="0.0185%" height="15" fill="rgb(250,71,37)" fg:x="39908" fg:w="9"/><text x="82.2387%" y="415.50"></text></g><g><title>__mod_timer (88 samples, 0.18%)</title><rect x="81.8839%" y="421" width="0.1808%" height="15" fill="rgb(219,76,19)" fg:x="39857" fg:w="88"/><text x="82.1339%" y="431.50"></text></g><g><title>lock_timer_base (28 samples, 0.06%)</title><rect x="82.0072%" y="405" width="0.0575%" height="15" fill="rgb(250,39,11)" fg:x="39917" fg:w="28"/><text x="82.2572%" y="415.50"></text></g><g><title>_raw_spin_lock_irqsave (18 samples, 0.04%)</title><rect x="82.0277%" y="389" width="0.0370%" height="15" fill="rgb(230,64,31)" fg:x="39927" fg:w="18"/><text x="82.2777%" y="399.50"></text></g><g><title>sk_reset_timer (101 samples, 0.21%)</title><rect x="81.8613%" y="437" width="0.2075%" height="15" fill="rgb(208,222,23)" fg:x="39846" fg:w="101"/><text x="82.1113%" y="447.50"></text></g><g><title>tcp_event_new_data_sent (134 samples, 0.28%)</title><rect x="81.8202%" y="453" width="0.2753%" height="15" fill="rgb(227,125,18)" fg:x="39826" fg:w="134"/><text x="82.0702%" y="463.50"></text></g><g><title>tcp_rearm_rto (12 samples, 0.02%)</title><rect x="82.0709%" y="437" width="0.0247%" height="15" fill="rgb(234,210,9)" fg:x="39948" fg:w="12"/><text x="82.3209%" y="447.50"></text></g><g><title>__usecs_to_jiffies (8 samples, 0.02%)</title><rect x="82.1592%" y="437" width="0.0164%" height="15" fill="rgb(217,127,24)" fg:x="39991" fg:w="8"/><text x="82.4092%" y="447.50"></text></g><g><title>__mod_timer (5 samples, 0.01%)</title><rect x="82.1859%" y="421" width="0.0103%" height="15" fill="rgb(239,141,48)" fg:x="40004" fg:w="5"/><text x="82.4359%" y="431.50"></text></g><g><title>tcp_schedule_loss_probe (51 samples, 0.10%)</title><rect x="82.0955%" y="453" width="0.1048%" height="15" fill="rgb(227,109,8)" fg:x="39960" fg:w="51"/><text x="82.3455%" y="463.50"></text></g><g><title>sk_reset_timer (7 samples, 0.01%)</title><rect x="82.1859%" y="437" width="0.0144%" height="15" fill="rgb(235,184,23)" fg:x="40004" fg:w="7"/><text x="82.4359%" y="447.50"></text></g><g><title>tcp_small_queue_check.isra.0 (7 samples, 0.01%)</title><rect x="82.2003%" y="453" width="0.0144%" height="15" fill="rgb(227,226,48)" fg:x="40011" fg:w="7"/><text x="82.4503%" y="463.50"></text></g><g><title>__tcp_push_pending_frames (4,400 samples, 9.04%)</title><rect x="73.1916%" y="485" width="9.0395%" height="15" fill="rgb(206,150,11)" fg:x="35626" fg:w="4400"/><text x="73.4416%" y="495.50">__tcp_push_pe..</text></g><g><title>tcp_write_xmit (4,390 samples, 9.02%)</title><rect x="73.2121%" y="469" width="9.0190%" height="15" fill="rgb(254,2,33)" fg:x="35636" fg:w="4390"/><text x="73.4621%" y="479.50">tcp_write_xmit</text></g><g><title>tcp_tso_segs (8 samples, 0.02%)</title><rect x="82.2147%" y="453" width="0.0164%" height="15" fill="rgb(243,160,20)" fg:x="40018" fg:w="8"/><text x="82.4647%" y="463.50"></text></g><g><title>_copy_from_iter (49 samples, 0.10%)</title><rect x="82.2311%" y="485" width="0.1007%" height="15" fill="rgb(218,208,30)" fg:x="40026" fg:w="49"/><text x="82.4811%" y="495.50"></text></g><g><title>copy_user_enhanced_fast_string (24 samples, 0.05%)</title><rect x="82.2825%" y="469" width="0.0493%" height="15" fill="rgb(224,120,49)" fg:x="40051" fg:w="24"/><text x="82.5325%" y="479.50"></text></g><g><title>sk_page_frag_refill (40 samples, 0.08%)</title><rect x="82.3338%" y="485" width="0.0822%" height="15" fill="rgb(246,12,2)" fg:x="40076" fg:w="40"/><text x="82.5838%" y="495.50"></text></g><g><title>skb_page_frag_refill (37 samples, 0.08%)</title><rect x="82.3400%" y="469" width="0.0760%" height="15" fill="rgb(236,117,3)" fg:x="40079" fg:w="37"/><text x="82.5900%" y="479.50"></text></g><g><title>tcp_push (10 samples, 0.02%)</title><rect x="82.4160%" y="485" width="0.0205%" height="15" fill="rgb(216,128,52)" fg:x="40116" fg:w="10"/><text x="82.6660%" y="495.50"></text></g><g><title>tcp_rate_check_app_limited (8 samples, 0.02%)</title><rect x="82.4366%" y="485" width="0.0164%" height="15" fill="rgb(246,145,19)" fg:x="40126" fg:w="8"/><text x="82.6866%" y="495.50"></text></g><g><title>tcp_send_mss (60 samples, 0.12%)</title><rect x="82.4530%" y="485" width="0.1233%" height="15" fill="rgb(222,11,46)" fg:x="40134" fg:w="60"/><text x="82.7030%" y="495.50"></text></g><g><title>tcp_current_mss (41 samples, 0.08%)</title><rect x="82.4920%" y="469" width="0.0842%" height="15" fill="rgb(245,82,36)" fg:x="40153" fg:w="41"/><text x="82.7420%" y="479.50"></text></g><g><title>ipv4_mtu (13 samples, 0.03%)</title><rect x="82.5496%" y="453" width="0.0267%" height="15" fill="rgb(250,73,51)" fg:x="40181" fg:w="13"/><text x="82.7996%" y="463.50"></text></g><g><title>tcp_skb_entail (30 samples, 0.06%)</title><rect x="82.5763%" y="485" width="0.0616%" height="15" fill="rgb(221,189,23)" fg:x="40194" fg:w="30"/><text x="82.8263%" y="495.50"></text></g><g><title>tcp_chrono_start (12 samples, 0.02%)</title><rect x="82.6133%" y="469" width="0.0247%" height="15" fill="rgb(210,33,7)" fg:x="40212" fg:w="12"/><text x="82.8633%" y="479.50"></text></g><g><title>__build_skb_around (11 samples, 0.02%)</title><rect x="82.7283%" y="453" width="0.0226%" height="15" fill="rgb(210,107,22)" fg:x="40268" fg:w="11"/><text x="82.9783%" y="463.50"></text></g><g><title>___slab_alloc (6 samples, 0.01%)</title><rect x="82.8475%" y="405" width="0.0123%" height="15" fill="rgb(222,116,37)" fg:x="40326" fg:w="6"/><text x="83.0975%" y="415.50"></text></g><g><title>__cond_resched (8 samples, 0.02%)</title><rect x="82.8598%" y="405" width="0.0164%" height="15" fill="rgb(254,17,48)" fg:x="40332" fg:w="8"/><text x="83.1098%" y="415.50"></text></g><g><title>__kmalloc_node_track_caller (73 samples, 0.15%)</title><rect x="82.7653%" y="437" width="0.1500%" height="15" fill="rgb(224,36,32)" fg:x="40286" fg:w="73"/><text x="83.0153%" y="447.50"></text></g><g><title>__kmem_cache_alloc_node (68 samples, 0.14%)</title><rect x="82.7756%" y="421" width="0.1397%" height="15" fill="rgb(232,90,46)" fg:x="40291" fg:w="68"/><text x="83.0256%" y="431.50"></text></g><g><title>memset_erms (15 samples, 0.03%)</title><rect x="82.8844%" y="405" width="0.0308%" height="15" fill="rgb(241,66,40)" fg:x="40344" fg:w="15"/><text x="83.1344%" y="415.50"></text></g><g><title>kmalloc_reserve (103 samples, 0.21%)</title><rect x="82.7509%" y="453" width="0.2116%" height="15" fill="rgb(249,184,29)" fg:x="40279" fg:w="103"/><text x="83.0009%" y="463.50"></text></g><g><title>kmalloc_size_roundup (23 samples, 0.05%)</title><rect x="82.9153%" y="437" width="0.0473%" height="15" fill="rgb(231,181,1)" fg:x="40359" fg:w="23"/><text x="83.1653%" y="447.50"></text></g><g><title>kmalloc_slab (12 samples, 0.02%)</title><rect x="82.9379%" y="421" width="0.0247%" height="15" fill="rgb(224,94,2)" fg:x="40370" fg:w="12"/><text x="83.1879%" y="431.50"></text></g><g><title>memcg_slab_post_alloc_hook (7 samples, 0.01%)</title><rect x="83.0529%" y="437" width="0.0144%" height="15" fill="rgb(229,170,15)" fg:x="40426" fg:w="7"/><text x="83.3029%" y="447.50"></text></g><g><title>memset_erms (8 samples, 0.02%)</title><rect x="83.0673%" y="437" width="0.0164%" height="15" fill="rgb(240,127,35)" fg:x="40433" fg:w="8"/><text x="83.3173%" y="447.50"></text></g><g><title>__alloc_skb (206 samples, 0.42%)</title><rect x="82.6626%" y="469" width="0.4232%" height="15" fill="rgb(248,196,34)" fg:x="40236" fg:w="206"/><text x="82.9126%" y="479.50"></text></g><g><title>kmem_cache_alloc_node (60 samples, 0.12%)</title><rect x="82.9625%" y="453" width="0.1233%" height="15" fill="rgb(236,137,7)" fg:x="40382" fg:w="60"/><text x="83.2125%" y="463.50"></text></g><g><title>mod_memcg_state (27 samples, 0.06%)</title><rect x="83.1043%" y="453" width="0.0555%" height="15" fill="rgb(235,127,16)" fg:x="40451" fg:w="27"/><text x="83.3543%" y="463.50"></text></g><g><title>__mod_memcg_state (19 samples, 0.04%)</title><rect x="83.1207%" y="437" width="0.0390%" height="15" fill="rgb(250,192,54)" fg:x="40459" fg:w="19"/><text x="83.3707%" y="447.50"></text></g><g><title>cgroup_rstat_updated (9 samples, 0.02%)</title><rect x="83.1412%" y="421" width="0.0185%" height="15" fill="rgb(218,98,20)" fg:x="40469" fg:w="9"/><text x="83.3912%" y="431.50"></text></g><g><title>mem_cgroup_charge_skmem (41 samples, 0.08%)</title><rect x="83.0858%" y="469" width="0.0842%" height="15" fill="rgb(230,176,47)" fg:x="40442" fg:w="41"/><text x="83.3358%" y="479.50"></text></g><g><title>try_charge_memcg (5 samples, 0.01%)</title><rect x="83.1597%" y="453" width="0.0103%" height="15" fill="rgb(244,2,33)" fg:x="40478" fg:w="5"/><text x="83.4097%" y="463.50"></text></g><g><title>tcp_stream_alloc_skb (268 samples, 0.55%)</title><rect x="82.6379%" y="485" width="0.5506%" height="15" fill="rgb(231,100,17)" fg:x="40224" fg:w="268"/><text x="82.8879%" y="495.50"></text></g><g><title>sk_forced_mem_schedule (9 samples, 0.02%)</title><rect x="83.1700%" y="469" width="0.0185%" height="15" fill="rgb(245,23,12)" fg:x="40483" fg:w="9"/><text x="83.4200%" y="479.50"></text></g><g><title>tcp_stream_memory_free (8 samples, 0.02%)</title><rect x="83.1885%" y="485" width="0.0164%" height="15" fill="rgb(249,55,22)" fg:x="40492" fg:w="8"/><text x="83.4385%" y="495.50"></text></g><g><title>__sock_sendmsg (5,795 samples, 11.91%)</title><rect x="71.3138%" y="533" width="11.9055%" height="15" fill="rgb(207,134,9)" fg:x="34712" fg:w="5795"/><text x="71.5638%" y="543.50">__sock_sendmsg</text></g><g><title>tcp_sendmsg (5,677 samples, 11.66%)</title><rect x="71.5562%" y="517" width="11.6631%" height="15" fill="rgb(218,134,0)" fg:x="34830" fg:w="5677"/><text x="71.8062%" y="527.50">tcp_sendmsg</text></g><g><title>tcp_sendmsg_locked (5,011 samples, 10.29%)</title><rect x="72.9245%" y="501" width="10.2948%" height="15" fill="rgb(213,212,33)" fg:x="35496" fg:w="5011"/><text x="73.1745%" y="511.50">tcp_sendmsg_loc..</text></g><g><title>fput (11 samples, 0.02%)</title><rect x="83.2193%" y="533" width="0.0226%" height="15" fill="rgb(252,106,18)" fg:x="40507" fg:w="11"/><text x="83.4693%" y="543.50"></text></g><g><title>__x64_sys_sendto (5,883 samples, 12.09%)</title><rect x="71.2008%" y="565" width="12.0863%" height="15" fill="rgb(208,126,42)" fg:x="34657" fg:w="5883"/><text x="71.4508%" y="575.50">__x64_sys_sendto</text></g><g><title>__sys_sendto (5,870 samples, 12.06%)</title><rect x="71.2275%" y="549" width="12.0596%" height="15" fill="rgb(246,175,29)" fg:x="34670" fg:w="5870"/><text x="71.4775%" y="559.50">__sys_sendto</text></g><g><title>sockfd_lookup_light (19 samples, 0.04%)</title><rect x="83.2481%" y="533" width="0.0390%" height="15" fill="rgb(215,13,50)" fg:x="40521" fg:w="19"/><text x="83.4981%" y="543.50"></text></g><g><title>__fget_light (18 samples, 0.04%)</title><rect x="83.2501%" y="517" width="0.0370%" height="15" fill="rgb(216,172,15)" fg:x="40522" fg:w="18"/><text x="83.5001%" y="527.50"></text></g><g><title>syscall_enter_from_user_mode (9 samples, 0.02%)</title><rect x="83.2871%" y="565" width="0.0185%" height="15" fill="rgb(212,103,13)" fg:x="40540" fg:w="9"/><text x="83.5371%" y="575.50"></text></g><g><title>exit_to_user_mode_prepare (11 samples, 0.02%)</title><rect x="83.3344%" y="549" width="0.0226%" height="15" fill="rgb(231,171,36)" fg:x="40563" fg:w="11"/><text x="83.5844%" y="559.50"></text></g><g><title>fpregs_assert_state_consistent (6 samples, 0.01%)</title><rect x="83.3446%" y="533" width="0.0123%" height="15" fill="rgb(250,123,20)" fg:x="40568" fg:w="6"/><text x="83.5946%" y="543.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (6,014 samples, 12.36%)</title><rect x="71.0118%" y="597" width="12.3554%" height="15" fill="rgb(212,53,50)" fg:x="34565" fg:w="6014"/><text x="71.2618%" y="607.50">entry_SYSCALL_64_a..</text></g><g><title>do_syscall_64 (5,937 samples, 12.20%)</title><rect x="71.1700%" y="581" width="12.1972%" height="15" fill="rgb(243,54,12)" fg:x="34642" fg:w="5937"/><text x="71.4200%" y="591.50">do_syscall_64</text></g><g><title>syscall_exit_to_user_mode (30 samples, 0.06%)</title><rect x="83.3056%" y="565" width="0.0616%" height="15" fill="rgb(234,101,34)" fg:x="40549" fg:w="30"/><text x="83.5556%" y="575.50"></text></g><g><title>syscall_exit_to_user_mode_prepare (5 samples, 0.01%)</title><rect x="83.3570%" y="549" width="0.0103%" height="15" fill="rgb(254,67,22)" fg:x="40574" fg:w="5"/><text x="83.6070%" y="559.50"></text></g><g><title>__libc_send (6,245 samples, 12.83%)</title><rect x="70.8639%" y="629" width="12.8300%" height="15" fill="rgb(250,35,47)" fg:x="34493" fg:w="6245"/><text x="71.1139%" y="639.50">__libc_send</text></g><g><title>__libc_send (6,229 samples, 12.80%)</title><rect x="70.8968%" y="613" width="12.7971%" height="15" fill="rgb(226,126,38)" fg:x="34509" fg:w="6229"/><text x="71.1468%" y="623.50">__libc_send</text></g><g><title>syscall_return_via_sysret (156 samples, 0.32%)</title><rect x="83.3734%" y="597" width="0.3205%" height="15" fill="rgb(216,138,53)" fg:x="40582" fg:w="156"/><text x="83.6234%" y="607.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (6,263 samples, 12.87%)</title><rect x="70.8372%" y="725" width="12.8670%" height="15" fill="rgb(246,199,43)" fg:x="34480" fg:w="6263"/><text x="71.0872%" y="735.50">&lt;&amp;mio::net::tcp::st..</text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (6,257 samples, 12.85%)</title><rect x="70.8495%" y="709" width="12.8546%" height="15" fill="rgb(232,125,11)" fg:x="34486" fg:w="6257"/><text x="71.0995%" y="719.50">mio::io_source::IoS..</text></g><g><title>mio::sys::unix::stateless_io_source::IoSourceState::do_io (6,257 samples, 12.85%)</title><rect x="70.8495%" y="693" width="12.8546%" height="15" fill="rgb(218,219,45)" fg:x="34486" fg:w="6257"/><text x="71.0995%" y="703.50">mio::sys::unix::sta..</text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write::{{closure}} (6,257 samples, 12.85%)</title><rect x="70.8495%" y="677" width="12.8546%" height="15" fill="rgb(216,102,54)" fg:x="34486" fg:w="6257"/><text x="71.0995%" y="687.50">&lt;&amp;mio::net::tcp::st..</text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (6,257 samples, 12.85%)</title><rect x="70.8495%" y="661" width="12.8546%" height="15" fill="rgb(250,228,7)" fg:x="34486" fg:w="6257"/><text x="71.0995%" y="671.50">&lt;&amp;std::net::tcp::Tc..</text></g><g><title>std::sys_common::net::TcpStream::write (6,253 samples, 12.85%)</title><rect x="70.8577%" y="645" width="12.8464%" height="15" fill="rgb(226,125,25)" fg:x="34490" fg:w="6253"/><text x="71.1077%" y="655.50">std::sys_common::ne..</text></g><g><title>tokio::runtime::coop::poll_proceed (6 samples, 0.01%)</title><rect x="83.7370%" y="693" width="0.0123%" height="15" fill="rgb(224,165,27)" fg:x="40759" fg:w="6"/><text x="83.9870%" y="703.50"></text></g><g><title>tokio::runtime::context::budget (6 samples, 0.01%)</title><rect x="83.7370%" y="677" width="0.0123%" height="15" fill="rgb(233,86,3)" fg:x="40759" fg:w="6"/><text x="83.9870%" y="687.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (6 samples, 0.01%)</title><rect x="83.7370%" y="661" width="0.0123%" height="15" fill="rgb(228,116,20)" fg:x="40759" fg:w="6"/><text x="83.9870%" y="671.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_write::AsyncWrite&gt;::poll_write (6,304 samples, 12.95%)</title><rect x="70.8043%" y="789" width="12.9512%" height="15" fill="rgb(209,192,17)" fg:x="34464" fg:w="6304"/><text x="71.0543%" y="799.50">&lt;&amp;mut T as tokio::i..</text></g><g><title>&lt;tokio::net::tcp::split::WriteHalf as tokio::io::async_write::AsyncWrite&gt;::poll_write (6,303 samples, 12.95%)</title><rect x="70.8064%" y="773" width="12.9492%" height="15" fill="rgb(224,88,34)" fg:x="34465" fg:w="6303"/><text x="71.0564%" y="783.50">&lt;tokio::net::tcp::s..</text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_priv (6,299 samples, 12.94%)</title><rect x="70.8146%" y="757" width="12.9409%" height="15" fill="rgb(233,38,6)" fg:x="34469" fg:w="6299"/><text x="71.0646%" y="767.50">tokio::net::tcp::st..</text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write (6,297 samples, 12.94%)</title><rect x="70.8187%" y="741" width="12.9368%" height="15" fill="rgb(212,59,30)" fg:x="34471" fg:w="6297"/><text x="71.0687%" y="751.50">tokio::io::poll_eve..</text></g><g><title>tokio::runtime::io::registration::Registration::poll_write_ready (24 samples, 0.05%)</title><rect x="83.7062%" y="725" width="0.0493%" height="15" fill="rgb(213,80,3)" fg:x="40744" fg:w="24"/><text x="83.9562%" y="735.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (24 samples, 0.05%)</title><rect x="83.7062%" y="709" width="0.0493%" height="15" fill="rgb(251,178,7)" fg:x="40744" fg:w="24"/><text x="83.9562%" y="719.50"></text></g><g><title>&lt;tokio::io::util::write_all::WriteAll&lt;W&gt; as core::future::future::Future&gt;::poll (6,319 samples, 12.98%)</title><rect x="70.7940%" y="805" width="12.9820%" height="15" fill="rgb(213,154,26)" fg:x="34459" fg:w="6319"/><text x="71.0440%" y="815.50">&lt;tokio::io::util::wr..</text></g><g><title>core::mem::take (9 samples, 0.02%)</title><rect x="83.7576%" y="789" width="0.0185%" height="15" fill="rgb(238,165,49)" fg:x="40769" fg:w="9"/><text x="84.0076%" y="799.50"></text></g><g><title>core::mem::replace (9 samples, 0.02%)</title><rect x="83.7576%" y="773" width="0.0185%" height="15" fill="rgb(248,91,46)" fg:x="40769" fg:w="9"/><text x="84.0076%" y="783.50"></text></g><g><title>core::ptr::read (9 samples, 0.02%)</title><rect x="83.7576%" y="757" width="0.0185%" height="15" fill="rgb(244,21,52)" fg:x="40769" fg:w="9"/><text x="84.0076%" y="767.50"></text></g><g><title>__memset_avx2_unaligned_erms (31 samples, 0.06%)</title><rect x="83.7761%" y="805" width="0.0637%" height="15" fill="rgb(247,122,20)" fg:x="40778" fg:w="31"/><text x="84.0261%" y="815.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (5 samples, 0.01%)</title><rect x="83.8398%" y="773" width="0.0103%" height="15" fill="rgb(218,27,9)" fg:x="40809" fg:w="5"/><text x="84.0898%" y="783.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (5 samples, 0.01%)</title><rect x="83.8398%" y="757" width="0.0103%" height="15" fill="rgb(246,7,6)" fg:x="40809" fg:w="5"/><text x="84.0898%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::sync::mutex::Mutex&lt;common::message::MarketDataFullSnapshot&gt;&gt;&gt; (28 samples, 0.06%)</title><rect x="83.8398%" y="805" width="0.0575%" height="15" fill="rgb(227,135,54)" fg:x="40809" fg:w="28"/><text x="84.0898%" y="815.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (28 samples, 0.06%)</title><rect x="83.8398%" y="789" width="0.0575%" height="15" fill="rgb(247,14,11)" fg:x="40809" fg:w="28"/><text x="84.0898%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (23 samples, 0.05%)</title><rect x="83.8500%" y="773" width="0.0473%" height="15" fill="rgb(206,149,34)" fg:x="40814" fg:w="23"/><text x="84.1000%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_sub (23 samples, 0.05%)</title><rect x="83.8500%" y="757" width="0.0473%" height="15" fill="rgb(227,228,4)" fg:x="40814" fg:w="23"/><text x="84.1000%" y="767.50"></text></g><g><title>_int_free (42 samples, 0.09%)</title><rect x="83.9425%" y="709" width="0.0863%" height="15" fill="rgb(238,218,28)" fg:x="40859" fg:w="42"/><text x="84.1925%" y="719.50"></text></g><g><title>tcache_put (8 samples, 0.02%)</title><rect x="84.0123%" y="693" width="0.0164%" height="15" fill="rgb(252,86,40)" fg:x="40893" fg:w="8"/><text x="84.2623%" y="703.50"></text></g><g><title>arena_for_chunk (11 samples, 0.02%)</title><rect x="84.0288%" y="709" width="0.0226%" height="15" fill="rgb(251,225,11)" fg:x="40901" fg:w="11"/><text x="84.2788%" y="719.50"></text></g><g><title>arena_for_chunk (11 samples, 0.02%)</title><rect x="84.0288%" y="693" width="0.0226%" height="15" fill="rgb(206,46,49)" fg:x="40901" fg:w="11"/><text x="84.2788%" y="703.50"></text></g><g><title>__GI___libc_free (71 samples, 0.15%)</title><rect x="83.9076%" y="725" width="0.1459%" height="15" fill="rgb(245,128,24)" fg:x="40842" fg:w="71"/><text x="84.1576%" y="735.50"></text></g><g><title>__rdl_dealloc (11 samples, 0.02%)</title><rect x="84.0534%" y="725" width="0.0226%" height="15" fill="rgb(219,177,34)" fg:x="40913" fg:w="11"/><text x="84.3034%" y="735.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (11 samples, 0.02%)</title><rect x="84.0534%" y="709" width="0.0226%" height="15" fill="rgb(218,60,48)" fg:x="40913" fg:w="11"/><text x="84.3034%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (96 samples, 0.20%)</title><rect x="83.8973%" y="805" width="0.1972%" height="15" fill="rgb(221,11,5)" fg:x="40837" fg:w="96"/><text x="84.1473%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (96 samples, 0.20%)</title><rect x="83.8973%" y="789" width="0.1972%" height="15" fill="rgb(220,148,13)" fg:x="40837" fg:w="96"/><text x="84.1473%" y="799.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (96 samples, 0.20%)</title><rect x="83.8973%" y="773" width="0.1972%" height="15" fill="rgb(210,16,3)" fg:x="40837" fg:w="96"/><text x="84.1473%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (91 samples, 0.19%)</title><rect x="83.9076%" y="757" width="0.1870%" height="15" fill="rgb(236,80,2)" fg:x="40842" fg:w="91"/><text x="84.1576%" y="767.50"></text></g><g><title>alloc::alloc::dealloc (91 samples, 0.19%)</title><rect x="83.9076%" y="741" width="0.1870%" height="15" fill="rgb(239,129,19)" fg:x="40842" fg:w="91"/><text x="84.1576%" y="751.50"></text></g><g><title>__rust_dealloc (9 samples, 0.02%)</title><rect x="84.0760%" y="725" width="0.0185%" height="15" fill="rgb(220,106,35)" fg:x="40924" fg:w="9"/><text x="84.3260%" y="735.50"></text></g><g><title>__GI___pthread_disable_asynccancel (8 samples, 0.02%)</title><rect x="84.1685%" y="613" width="0.0164%" height="15" fill="rgb(252,139,45)" fg:x="40969" fg:w="8"/><text x="84.4185%" y="623.50"></text></g><g><title>__GI___pthread_disable_asynccancel (8 samples, 0.02%)</title><rect x="84.1685%" y="597" width="0.0164%" height="15" fill="rgb(229,8,36)" fg:x="40969" fg:w="8"/><text x="84.4185%" y="607.50"></text></g><g><title>__GI___pthread_enable_asynccancel (15 samples, 0.03%)</title><rect x="84.1849%" y="613" width="0.0308%" height="15" fill="rgb(230,126,33)" fg:x="40977" fg:w="15"/><text x="84.4349%" y="623.50"></text></g><g><title>entry_SYSCALL_64 (9 samples, 0.02%)</title><rect x="84.2219%" y="613" width="0.0185%" height="15" fill="rgb(239,140,21)" fg:x="40995" fg:w="9"/><text x="84.4719%" y="623.50"></text></g><g><title>_raw_spin_lock (18 samples, 0.04%)</title><rect x="84.5013%" y="549" width="0.0370%" height="15" fill="rgb(254,104,9)" fg:x="41131" fg:w="18"/><text x="84.7513%" y="559.50"></text></g><g><title>_raw_spin_unlock (5 samples, 0.01%)</title><rect x="84.5383%" y="549" width="0.0103%" height="15" fill="rgb(239,52,14)" fg:x="41149" fg:w="5"/><text x="84.7883%" y="559.50"></text></g><g><title>close_fd (42 samples, 0.09%)</title><rect x="84.4787%" y="565" width="0.0863%" height="15" fill="rgb(208,227,44)" fg:x="41120" fg:w="42"/><text x="84.7287%" y="575.50"></text></g><g><title>pick_file (8 samples, 0.02%)</title><rect x="84.5485%" y="549" width="0.0164%" height="15" fill="rgb(246,18,19)" fg:x="41154" fg:w="8"/><text x="84.7985%" y="559.50"></text></g><g><title>dnotify_flush (6 samples, 0.01%)</title><rect x="84.6061%" y="549" width="0.0123%" height="15" fill="rgb(235,228,25)" fg:x="41182" fg:w="6"/><text x="84.8561%" y="559.50"></text></g><g><title>fput (28 samples, 0.06%)</title><rect x="84.6184%" y="549" width="0.0575%" height="15" fill="rgb(240,156,20)" fg:x="41188" fg:w="28"/><text x="84.8684%" y="559.50"></text></g><g><title>task_work_add (19 samples, 0.04%)</title><rect x="84.6369%" y="533" width="0.0390%" height="15" fill="rgb(224,8,20)" fg:x="41197" fg:w="19"/><text x="84.8869%" y="543.50"></text></g><g><title>__x64_sys_close (144 samples, 0.30%)</title><rect x="84.4520%" y="581" width="0.2958%" height="15" fill="rgb(214,12,52)" fg:x="41107" fg:w="144"/><text x="84.7020%" y="591.50"></text></g><g><title>filp_close (89 samples, 0.18%)</title><rect x="84.5650%" y="565" width="0.1828%" height="15" fill="rgb(211,220,47)" fg:x="41162" fg:w="89"/><text x="84.8150%" y="575.50"></text></g><g><title>locks_remove_posix (35 samples, 0.07%)</title><rect x="84.6759%" y="549" width="0.0719%" height="15" fill="rgb(250,173,5)" fg:x="41216" fg:w="35"/><text x="84.9259%" y="559.50"></text></g><g><title>amd_clear_divider (7 samples, 0.01%)</title><rect x="84.7910%" y="565" width="0.0144%" height="15" fill="rgb(250,125,52)" fg:x="41272" fg:w="7"/><text x="85.0410%" y="575.50"></text></g><g><title>__get_user_8 (18 samples, 0.04%)</title><rect x="84.9122%" y="533" width="0.0370%" height="15" fill="rgb(209,133,18)" fg:x="41331" fg:w="18"/><text x="85.1622%" y="543.50"></text></g><g><title>__rseq_handle_notify_resume (53 samples, 0.11%)</title><rect x="84.8526%" y="549" width="0.1089%" height="15" fill="rgb(216,173,22)" fg:x="41302" fg:w="53"/><text x="85.1026%" y="559.50"></text></g><g><title>__put_user_nocheck_8 (6 samples, 0.01%)</title><rect x="84.9492%" y="533" width="0.0123%" height="15" fill="rgb(205,3,22)" fg:x="41349" fg:w="6"/><text x="85.1992%" y="543.50"></text></g><g><title>blkcg_maybe_throttle_current (7 samples, 0.01%)</title><rect x="84.9635%" y="549" width="0.0144%" height="15" fill="rgb(248,22,20)" fg:x="41356" fg:w="7"/><text x="85.2135%" y="559.50"></text></g><g><title>mem_cgroup_handle_over_high (15 samples, 0.03%)</title><rect x="84.9861%" y="549" width="0.0308%" height="15" fill="rgb(233,6,29)" fg:x="41367" fg:w="15"/><text x="85.2361%" y="559.50"></text></g><g><title>____fput (8 samples, 0.02%)</title><rect x="85.0601%" y="533" width="0.0164%" height="15" fill="rgb(240,22,54)" fg:x="41403" fg:w="8"/><text x="85.3101%" y="543.50"></text></g><g><title>__cond_resched (5 samples, 0.01%)</title><rect x="85.0765%" y="533" width="0.0103%" height="15" fill="rgb(231,133,32)" fg:x="41411" fg:w="5"/><text x="85.3265%" y="543.50"></text></g><g><title>__slab_free (22 samples, 0.05%)</title><rect x="85.2676%" y="501" width="0.0452%" height="15" fill="rgb(248,193,4)" fg:x="41504" fg:w="22"/><text x="85.5176%" y="511.50"></text></g><g><title>cmpxchg_double_slab.constprop.0.isra.0 (9 samples, 0.02%)</title><rect x="85.2943%" y="485" width="0.0185%" height="15" fill="rgb(211,178,46)" fg:x="41517" fg:w="9"/><text x="85.5443%" y="495.50"></text></g><g><title>rcu_segcblist_enqueue (8 samples, 0.02%)</title><rect x="85.3251%" y="485" width="0.0164%" height="15" fill="rgb(224,5,42)" fg:x="41532" fg:w="8"/><text x="85.5751%" y="495.50"></text></g><g><title>call_rcu (13 samples, 0.03%)</title><rect x="85.3210%" y="501" width="0.0267%" height="15" fill="rgb(239,176,25)" fg:x="41530" fg:w="13"/><text x="85.5710%" y="511.50"></text></g><g><title>dentry_free (14 samples, 0.03%)</title><rect x="85.3477%" y="501" width="0.0288%" height="15" fill="rgb(245,187,50)" fg:x="41543" fg:w="14"/><text x="85.5977%" y="511.50"></text></g><g><title>dentry_unlink_inode (21 samples, 0.04%)</title><rect x="85.3765%" y="501" width="0.0431%" height="15" fill="rgb(248,24,15)" fg:x="41557" fg:w="21"/><text x="85.6265%" y="511.50"></text></g><g><title>call_rcu (21 samples, 0.04%)</title><rect x="85.4648%" y="469" width="0.0431%" height="15" fill="rgb(205,166,13)" fg:x="41600" fg:w="21"/><text x="85.7148%" y="479.50"></text></g><g><title>__srcu_read_lock (22 samples, 0.05%)</title><rect x="85.5306%" y="437" width="0.0452%" height="15" fill="rgb(208,114,23)" fg:x="41632" fg:w="22"/><text x="85.7806%" y="447.50"></text></g><g><title>fsnotify_destroy_marks (37 samples, 0.08%)</title><rect x="85.5080%" y="469" width="0.0760%" height="15" fill="rgb(239,127,18)" fg:x="41621" fg:w="37"/><text x="85.7580%" y="479.50"></text></g><g><title>fsnotify_grab_connector (33 samples, 0.07%)</title><rect x="85.5162%" y="453" width="0.0678%" height="15" fill="rgb(219,154,28)" fg:x="41625" fg:w="33"/><text x="85.7662%" y="463.50"></text></g><g><title>inode_has_buffers (6 samples, 0.01%)</title><rect x="85.5840%" y="469" width="0.0123%" height="15" fill="rgb(225,157,23)" fg:x="41658" fg:w="6"/><text x="85.8340%" y="479.50"></text></g><g><title>bpf_inode_storage_free (22 samples, 0.05%)</title><rect x="85.6436%" y="453" width="0.0452%" height="15" fill="rgb(219,8,6)" fg:x="41687" fg:w="22"/><text x="85.8936%" y="463.50"></text></g><g><title>hook_inode_free_security (28 samples, 0.06%)</title><rect x="85.6970%" y="453" width="0.0575%" height="15" fill="rgb(212,47,6)" fg:x="41713" fg:w="28"/><text x="85.9470%" y="463.50"></text></g><g><title>destroy_inode (170 samples, 0.35%)</title><rect x="85.4196%" y="501" width="0.3493%" height="15" fill="rgb(224,190,4)" fg:x="41578" fg:w="170"/><text x="85.6696%" y="511.50"></text></g><g><title>__destroy_inode (161 samples, 0.33%)</title><rect x="85.4381%" y="485" width="0.3308%" height="15" fill="rgb(239,183,29)" fg:x="41587" fg:w="161"/><text x="85.6881%" y="495.50"></text></g><g><title>security_inode_free (83 samples, 0.17%)</title><rect x="85.5984%" y="469" width="0.1705%" height="15" fill="rgb(213,57,7)" fg:x="41665" fg:w="83"/><text x="85.8484%" y="479.50"></text></g><g><title>integrity_inode_free (7 samples, 0.01%)</title><rect x="85.7545%" y="453" width="0.0144%" height="15" fill="rgb(216,148,1)" fg:x="41741" fg:w="7"/><text x="86.0045%" y="463.50"></text></g><g><title>_raw_spin_lock (5 samples, 0.01%)</title><rect x="85.8079%" y="485" width="0.0103%" height="15" fill="rgb(236,182,29)" fg:x="41767" fg:w="5"/><text x="86.0579%" y="495.50"></text></g><g><title>clear_inode (15 samples, 0.03%)</title><rect x="85.8264%" y="485" width="0.0308%" height="15" fill="rgb(244,120,48)" fg:x="41776" fg:w="15"/><text x="86.0764%" y="495.50"></text></g><g><title>_raw_spin_lock_irq (7 samples, 0.01%)</title><rect x="85.8428%" y="469" width="0.0144%" height="15" fill="rgb(206,71,34)" fg:x="41784" fg:w="7"/><text x="86.0928%" y="479.50"></text></g><g><title>__inode_wait_for_writeback (19 samples, 0.04%)</title><rect x="85.8778%" y="469" width="0.0390%" height="15" fill="rgb(242,32,6)" fg:x="41801" fg:w="19"/><text x="86.1278%" y="479.50"></text></g><g><title>inode_wait_for_writeback (39 samples, 0.08%)</title><rect x="85.8572%" y="485" width="0.0801%" height="15" fill="rgb(241,35,3)" fg:x="41791" fg:w="39"/><text x="86.1072%" y="495.50"></text></g><g><title>_raw_spin_lock (10 samples, 0.02%)</title><rect x="85.9168%" y="469" width="0.0205%" height="15" fill="rgb(222,62,19)" fg:x="41820" fg:w="10"/><text x="86.1668%" y="479.50"></text></g><g><title>truncate_inode_pages_final (14 samples, 0.03%)</title><rect x="85.9373%" y="485" width="0.0288%" height="15" fill="rgb(223,110,41)" fg:x="41830" fg:w="14"/><text x="86.1873%" y="495.50"></text></g><g><title>truncate_inode_pages_range (11 samples, 0.02%)</title><rect x="85.9661%" y="485" width="0.0226%" height="15" fill="rgb(208,224,4)" fg:x="41844" fg:w="11"/><text x="86.2161%" y="495.50"></text></g><g><title>evict (137 samples, 0.28%)</title><rect x="85.7689%" y="501" width="0.2815%" height="15" fill="rgb(241,137,19)" fg:x="41748" fg:w="137"/><text x="86.0189%" y="511.50"></text></g><g><title>wake_up_bit (30 samples, 0.06%)</title><rect x="85.9887%" y="485" width="0.0616%" height="15" fill="rgb(244,24,17)" fg:x="41855" fg:w="30"/><text x="86.2387%" y="495.50"></text></g><g><title>_atomic_dec_and_lock (19 samples, 0.04%)</title><rect x="86.1222%" y="485" width="0.0390%" height="15" fill="rgb(245,178,49)" fg:x="41920" fg:w="19"/><text x="86.3722%" y="495.50"></text></g><g><title>_raw_spin_lock (8 samples, 0.02%)</title><rect x="86.1448%" y="469" width="0.0164%" height="15" fill="rgb(219,160,38)" fg:x="41931" fg:w="8"/><text x="86.3948%" y="479.50"></text></g><g><title>iput (58 samples, 0.12%)</title><rect x="86.0503%" y="501" width="0.1192%" height="15" fill="rgb(228,137,14)" fg:x="41885" fg:w="58"/><text x="86.3003%" y="511.50"></text></g><g><title>cache_from_obj (20 samples, 0.04%)</title><rect x="86.2743%" y="485" width="0.0411%" height="15" fill="rgb(237,134,11)" fg:x="41994" fg:w="20"/><text x="86.5243%" y="495.50"></text></g><g><title>mod_objcg_state (7 samples, 0.01%)</title><rect x="86.3154%" y="485" width="0.0144%" height="15" fill="rgb(211,126,44)" fg:x="42014" fg:w="7"/><text x="86.5654%" y="495.50"></text></g><g><title>kmem_cache_free (87 samples, 0.18%)</title><rect x="86.1695%" y="501" width="0.1787%" height="15" fill="rgb(226,171,33)" fg:x="41943" fg:w="87"/><text x="86.4195%" y="511.50"></text></g><g><title>refill_obj_stock (5 samples, 0.01%)</title><rect x="86.3380%" y="485" width="0.0103%" height="15" fill="rgb(253,99,13)" fg:x="42025" fg:w="5"/><text x="86.5880%" y="495.50"></text></g><g><title>__dentry_kill (553 samples, 1.14%)</title><rect x="85.2203%" y="517" width="1.1361%" height="15" fill="rgb(244,48,7)" fg:x="41481" fg:w="553"/><text x="85.4703%" y="527.50"></text></g><g><title>__slab_free (27 samples, 0.06%)</title><rect x="86.3564%" y="517" width="0.0555%" height="15" fill="rgb(244,217,54)" fg:x="42034" fg:w="27"/><text x="86.6064%" y="527.50"></text></g><g><title>cmpxchg_double_slab.constprop.0.isra.0 (13 samples, 0.03%)</title><rect x="86.3852%" y="501" width="0.0267%" height="15" fill="rgb(224,15,18)" fg:x="42048" fg:w="13"/><text x="86.6352%" y="511.50"></text></g><g><title>__cond_resched (8 samples, 0.02%)</title><rect x="86.4325%" y="501" width="0.0164%" height="15" fill="rgb(244,99,12)" fg:x="42071" fg:w="8"/><text x="86.6825%" y="511.50"></text></g><g><title>preempt_schedule_common (6 samples, 0.01%)</title><rect x="86.4366%" y="485" width="0.0123%" height="15" fill="rgb(233,226,8)" fg:x="42073" fg:w="6"/><text x="86.6866%" y="495.50"></text></g><g><title>__schedule (6 samples, 0.01%)</title><rect x="86.4366%" y="469" width="0.0123%" height="15" fill="rgb(229,211,3)" fg:x="42073" fg:w="6"/><text x="86.6866%" y="479.50"></text></g><g><title>__rcu_read_lock (6 samples, 0.01%)</title><rect x="86.4489%" y="501" width="0.0123%" height="15" fill="rgb(216,140,21)" fg:x="42079" fg:w="6"/><text x="86.6989%" y="511.50"></text></g><g><title>_raw_spin_lock (6 samples, 0.01%)</title><rect x="86.4612%" y="501" width="0.0123%" height="15" fill="rgb(234,122,30)" fg:x="42085" fg:w="6"/><text x="86.7112%" y="511.50"></text></g><g><title>_raw_spin_trylock (5 samples, 0.01%)</title><rect x="86.4735%" y="501" width="0.0103%" height="15" fill="rgb(236,25,46)" fg:x="42091" fg:w="5"/><text x="86.7235%" y="511.50"></text></g><g><title>dput (70 samples, 0.14%)</title><rect x="86.4140%" y="517" width="0.1438%" height="15" fill="rgb(217,52,54)" fg:x="42062" fg:w="70"/><text x="86.6640%" y="527.50"></text></g><g><title>lockref_put_return (36 samples, 0.07%)</title><rect x="86.4838%" y="501" width="0.0740%" height="15" fill="rgb(222,29,26)" fg:x="42096" fg:w="36"/><text x="86.7338%" y="511.50"></text></g><g><title>ima_file_free (6 samples, 0.01%)</title><rect x="86.5578%" y="517" width="0.0123%" height="15" fill="rgb(216,177,29)" fg:x="42132" fg:w="6"/><text x="86.8078%" y="527.50"></text></g><g><title>kmem_cache_free (15 samples, 0.03%)</title><rect x="86.5701%" y="517" width="0.0308%" height="15" fill="rgb(247,136,51)" fg:x="42138" fg:w="15"/><text x="86.8201%" y="527.50"></text></g><g><title>mntput (9 samples, 0.02%)</title><rect x="86.6050%" y="517" width="0.0185%" height="15" fill="rgb(231,47,47)" fg:x="42155" fg:w="9"/><text x="86.8550%" y="527.50"></text></g><g><title>mntput_no_expire (20 samples, 0.04%)</title><rect x="86.6235%" y="517" width="0.0411%" height="15" fill="rgb(211,192,36)" fg:x="42164" fg:w="20"/><text x="86.8735%" y="527.50"></text></g><g><title>percpu_counter_add_batch (11 samples, 0.02%)</title><rect x="86.6646%" y="517" width="0.0226%" height="15" fill="rgb(229,156,32)" fg:x="42184" fg:w="11"/><text x="86.9146%" y="527.50"></text></g><g><title>security_file_free (67 samples, 0.14%)</title><rect x="86.6913%" y="517" width="0.1376%" height="15" fill="rgb(248,213,20)" fg:x="42197" fg:w="67"/><text x="86.9413%" y="527.50"></text></g><g><title>apparmor_file_free_security (52 samples, 0.11%)</title><rect x="86.7221%" y="501" width="0.1068%" height="15" fill="rgb(217,64,7)" fg:x="42212" fg:w="52"/><text x="86.9721%" y="511.50"></text></g><g><title>down_write (17 samples, 0.03%)</title><rect x="86.8762%" y="485" width="0.0349%" height="15" fill="rgb(232,142,8)" fg:x="42287" fg:w="17"/><text x="87.1262%" y="495.50"></text></g><g><title>ip_mc_drop_socket (7 samples, 0.01%)</title><rect x="86.9605%" y="469" width="0.0144%" height="15" fill="rgb(224,92,44)" fg:x="42328" fg:w="7"/><text x="87.2105%" y="479.50"></text></g><g><title>__local_bh_enable_ip (13 samples, 0.03%)</title><rect x="86.9913%" y="453" width="0.0267%" height="15" fill="rgb(214,169,17)" fg:x="42343" fg:w="13"/><text x="87.2413%" y="463.50"></text></g><g><title>tcp_ack (5 samples, 0.01%)</title><rect x="87.1700%" y="389" width="0.0103%" height="15" fill="rgb(210,59,37)" fg:x="42430" fg:w="5"/><text x="87.4200%" y="399.50"></text></g><g><title>__release_sock (20 samples, 0.04%)</title><rect x="87.1536%" y="437" width="0.0411%" height="15" fill="rgb(214,116,48)" fg:x="42422" fg:w="20"/><text x="87.4036%" y="447.50"></text></g><g><title>tcp_v4_do_rcv (16 samples, 0.03%)</title><rect x="87.1618%" y="421" width="0.0329%" height="15" fill="rgb(244,191,6)" fg:x="42426" fg:w="16"/><text x="87.4118%" y="431.50"></text></g><g><title>tcp_rcv_state_process (15 samples, 0.03%)</title><rect x="87.1638%" y="405" width="0.0308%" height="15" fill="rgb(241,50,52)" fg:x="42427" fg:w="15"/><text x="87.4138%" y="415.50"></text></g><g><title>__ip_finish_output (21 samples, 0.04%)</title><rect x="87.5110%" y="373" width="0.0431%" height="15" fill="rgb(236,75,39)" fg:x="42596" fg:w="21"/><text x="87.7610%" y="383.50"></text></g><g><title>ip_skb_dst_mtu (10 samples, 0.02%)</title><rect x="87.5336%" y="357" width="0.0205%" height="15" fill="rgb(236,99,0)" fg:x="42607" fg:w="10"/><text x="87.7836%" y="367.50"></text></g><g><title>__sk_dst_check (6 samples, 0.01%)</title><rect x="87.5665%" y="373" width="0.0123%" height="15" fill="rgb(207,202,15)" fg:x="42623" fg:w="6"/><text x="87.8165%" y="383.50"></text></g><g><title>ipv4_dst_check (5 samples, 0.01%)</title><rect x="87.5686%" y="357" width="0.0103%" height="15" fill="rgb(233,207,14)" fg:x="42624" fg:w="5"/><text x="87.8186%" y="367.50"></text></g><g><title>ip_finish_output (12 samples, 0.02%)</title><rect x="87.5809%" y="373" width="0.0247%" height="15" fill="rgb(226,27,51)" fg:x="42630" fg:w="12"/><text x="87.8309%" y="383.50"></text></g><g><title>__netif_receive_skb_core.constprop.0 (42 samples, 0.09%)</title><rect x="88.0123%" y="229" width="0.0863%" height="15" fill="rgb(206,104,42)" fg:x="42840" fg:w="42"/><text x="88.2623%" y="239.50"></text></g><g><title>ipv4_confirm (8 samples, 0.02%)</title><rect x="88.1685%" y="197" width="0.0164%" height="15" fill="rgb(212,225,4)" fg:x="42916" fg:w="8"/><text x="88.4185%" y="207.50"></text></g><g><title>ip_local_deliver (61 samples, 0.13%)</title><rect x="88.0986%" y="229" width="0.1253%" height="15" fill="rgb(233,96,42)" fg:x="42882" fg:w="61"/><text x="88.3486%" y="239.50"></text></g><g><title>nf_hook_slow (36 samples, 0.07%)</title><rect x="88.1500%" y="213" width="0.0740%" height="15" fill="rgb(229,21,32)" fg:x="42907" fg:w="36"/><text x="88.4000%" y="223.50"></text></g><g><title>nf_nat_ipv4_local_in (17 samples, 0.03%)</title><rect x="88.1890%" y="197" width="0.0349%" height="15" fill="rgb(226,216,24)" fg:x="42926" fg:w="17"/><text x="88.4390%" y="207.50"></text></g><g><title>nf_nat_inet_fn (7 samples, 0.01%)</title><rect x="88.2096%" y="181" width="0.0144%" height="15" fill="rgb(221,163,17)" fg:x="42936" fg:w="7"/><text x="88.4596%" y="191.50"></text></g><g><title>raw_local_deliver (23 samples, 0.05%)</title><rect x="88.2630%" y="197" width="0.0473%" height="15" fill="rgb(216,216,42)" fg:x="42962" fg:w="23"/><text x="88.5130%" y="207.50"></text></g><g><title>__inet_lookup_established (36 samples, 0.07%)</title><rect x="88.4027%" y="181" width="0.0740%" height="15" fill="rgb(240,118,7)" fg:x="43030" fg:w="36"/><text x="88.6527%" y="191.50"></text></g><g><title>inet_ehashfn (5 samples, 0.01%)</title><rect x="88.4664%" y="165" width="0.0103%" height="15" fill="rgb(221,67,37)" fg:x="43061" fg:w="5"/><text x="88.7164%" y="175.50"></text></g><g><title>_raw_spin_lock (6 samples, 0.01%)</title><rect x="88.4807%" y="181" width="0.0123%" height="15" fill="rgb(241,32,44)" fg:x="43068" fg:w="6"/><text x="88.7307%" y="191.50"></text></g><g><title>__rcu_read_lock (6 samples, 0.01%)</title><rect x="88.5177%" y="165" width="0.0123%" height="15" fill="rgb(235,204,43)" fg:x="43086" fg:w="6"/><text x="88.7677%" y="175.50"></text></g><g><title>apparmor_socket_sock_rcv_skb (5 samples, 0.01%)</title><rect x="88.5814%" y="149" width="0.0103%" height="15" fill="rgb(213,116,10)" fg:x="43117" fg:w="5"/><text x="88.8314%" y="159.50"></text></g><g><title>sk_filter_trim_cap (46 samples, 0.09%)</title><rect x="88.5013%" y="181" width="0.0945%" height="15" fill="rgb(239,15,48)" fg:x="43078" fg:w="46"/><text x="88.7513%" y="191.50"></text></g><g><title>security_sock_rcv_skb (31 samples, 0.06%)</title><rect x="88.5321%" y="165" width="0.0637%" height="15" fill="rgb(207,123,36)" fg:x="43093" fg:w="31"/><text x="88.7821%" y="175.50"></text></g><g><title>sock_put (9 samples, 0.02%)</title><rect x="88.5958%" y="181" width="0.0185%" height="15" fill="rgb(209,103,30)" fg:x="43124" fg:w="9"/><text x="88.8458%" y="191.50"></text></g><g><title>tcp_inbound_md5_hash (5 samples, 0.01%)</title><rect x="88.6225%" y="181" width="0.0103%" height="15" fill="rgb(238,100,19)" fg:x="43137" fg:w="5"/><text x="88.8725%" y="191.50"></text></g><g><title>_raw_spin_lock (16 samples, 0.03%)</title><rect x="88.7519%" y="133" width="0.0329%" height="15" fill="rgb(244,30,14)" fg:x="43200" fg:w="16"/><text x="89.0019%" y="143.50"></text></g><g><title>enqueue_timer (10 samples, 0.02%)</title><rect x="88.7889%" y="133" width="0.0205%" height="15" fill="rgb(249,174,6)" fg:x="43218" fg:w="10"/><text x="89.0389%" y="143.50"></text></g><g><title>sk_reset_timer (97 samples, 0.20%)</title><rect x="88.6615%" y="165" width="0.1993%" height="15" fill="rgb(235,213,41)" fg:x="43156" fg:w="97"/><text x="88.9115%" y="175.50"></text></g><g><title>__mod_timer (74 samples, 0.15%)</title><rect x="88.7088%" y="149" width="0.1520%" height="15" fill="rgb(213,118,6)" fg:x="43179" fg:w="74"/><text x="88.9588%" y="159.50"></text></g><g><title>lock_timer_base (21 samples, 0.04%)</title><rect x="88.8177%" y="133" width="0.0431%" height="15" fill="rgb(235,44,51)" fg:x="43232" fg:w="21"/><text x="89.0677%" y="143.50"></text></g><g><title>_raw_spin_lock_irqsave (16 samples, 0.03%)</title><rect x="88.8279%" y="117" width="0.0329%" height="15" fill="rgb(217,9,53)" fg:x="43237" fg:w="16"/><text x="89.0779%" y="127.50"></text></g><g><title>tcp_ack (38 samples, 0.08%)</title><rect x="88.9142%" y="149" width="0.0781%" height="15" fill="rgb(237,172,34)" fg:x="43279" fg:w="38"/><text x="89.1642%" y="159.50"></text></g><g><title>tcp_check_space (8 samples, 0.02%)</title><rect x="88.9923%" y="149" width="0.0164%" height="15" fill="rgb(206,206,11)" fg:x="43317" fg:w="8"/><text x="89.2423%" y="159.50"></text></g><g><title>dst_release (12 samples, 0.02%)</title><rect x="89.0621%" y="133" width="0.0247%" height="15" fill="rgb(214,149,29)" fg:x="43351" fg:w="12"/><text x="89.3121%" y="143.50"></text></g><g><title>skb_release_data (7 samples, 0.01%)</title><rect x="89.0909%" y="117" width="0.0144%" height="15" fill="rgb(208,123,3)" fg:x="43365" fg:w="7"/><text x="89.3409%" y="127.50"></text></g><g><title>kfree_skb_partial (15 samples, 0.03%)</title><rect x="89.0868%" y="133" width="0.0308%" height="15" fill="rgb(229,126,4)" fg:x="43363" fg:w="15"/><text x="89.3368%" y="143.50"></text></g><g><title>skb_release_head_state (6 samples, 0.01%)</title><rect x="89.1053%" y="117" width="0.0123%" height="15" fill="rgb(222,92,36)" fg:x="43372" fg:w="6"/><text x="89.3553%" y="127.50"></text></g><g><title>__wake_up_common (16 samples, 0.03%)</title><rect x="89.1772%" y="101" width="0.0329%" height="15" fill="rgb(216,39,41)" fg:x="43407" fg:w="16"/><text x="89.4272%" y="111.50"></text></g><g><title>ep_poll_callback (13 samples, 0.03%)</title><rect x="89.1834%" y="85" width="0.0267%" height="15" fill="rgb(253,127,28)" fg:x="43410" fg:w="13"/><text x="89.4334%" y="95.50"></text></g><g><title>_raw_spin_lock_irqsave (9 samples, 0.02%)</title><rect x="89.2101%" y="101" width="0.0185%" height="15" fill="rgb(249,152,51)" fg:x="43423" fg:w="9"/><text x="89.4601%" y="111.50"></text></g><g><title>__wake_up_common_lock (32 samples, 0.07%)</title><rect x="89.1669%" y="117" width="0.0657%" height="15" fill="rgb(209,123,42)" fg:x="43402" fg:w="32"/><text x="89.4169%" y="127.50"></text></g><g><title>sock_def_readable (52 samples, 0.11%)</title><rect x="89.1279%" y="133" width="0.1068%" height="15" fill="rgb(241,118,22)" fg:x="43383" fg:w="52"/><text x="89.3779%" y="143.50"></text></g><g><title>skb_rbtree_purge (10 samples, 0.02%)</title><rect x="89.2696%" y="117" width="0.0205%" height="15" fill="rgb(208,25,7)" fg:x="43452" fg:w="10"/><text x="89.5196%" y="127.50"></text></g><g><title>__rcu_read_lock (6 samples, 0.01%)</title><rect x="89.3251%" y="101" width="0.0123%" height="15" fill="rgb(243,144,39)" fg:x="43479" fg:w="6"/><text x="89.5751%" y="111.50"></text></g><g><title>_raw_read_lock_irqsave (21 samples, 0.04%)</title><rect x="89.4319%" y="53" width="0.0431%" height="15" fill="rgb(250,50,5)" fg:x="43531" fg:w="21"/><text x="89.6819%" y="63.50"></text></g><g><title>__wake_up_common (62 samples, 0.13%)</title><rect x="89.3580%" y="85" width="0.1274%" height="15" fill="rgb(207,67,11)" fg:x="43495" fg:w="62"/><text x="89.6080%" y="95.50"></text></g><g><title>ep_poll_callback (53 samples, 0.11%)</title><rect x="89.3765%" y="69" width="0.1089%" height="15" fill="rgb(245,204,40)" fg:x="43504" fg:w="53"/><text x="89.6265%" y="79.50"></text></g><g><title>_raw_read_unlock_irqrestore (5 samples, 0.01%)</title><rect x="89.4751%" y="53" width="0.0103%" height="15" fill="rgb(238,228,24)" fg:x="43552" fg:w="5"/><text x="89.7251%" y="63.50"></text></g><g><title>sock_def_wakeup (101 samples, 0.21%)</title><rect x="89.2902%" y="117" width="0.2075%" height="15" fill="rgb(217,116,22)" fg:x="43462" fg:w="101"/><text x="89.5402%" y="127.50"></text></g><g><title>__wake_up_common_lock (76 samples, 0.16%)</title><rect x="89.3416%" y="101" width="0.1561%" height="15" fill="rgb(234,98,12)" fg:x="43487" fg:w="76"/><text x="89.5916%" y="111.50"></text></g><g><title>_raw_spin_lock_irqsave (6 samples, 0.01%)</title><rect x="89.4854%" y="85" width="0.0123%" height="15" fill="rgb(242,170,50)" fg:x="43557" fg:w="6"/><text x="89.7354%" y="95.50"></text></g><g><title>tcp_fin (131 samples, 0.27%)</title><rect x="89.2368%" y="133" width="0.2691%" height="15" fill="rgb(235,7,5)" fg:x="43436" fg:w="131"/><text x="89.4868%" y="143.50"></text></g><g><title>tcp_queue_rcv (50 samples, 0.10%)</title><rect x="89.5059%" y="133" width="0.1027%" height="15" fill="rgb(241,114,28)" fg:x="43567" fg:w="50"/><text x="89.7559%" y="143.50"></text></g><g><title>tcp_try_coalesce (43 samples, 0.09%)</title><rect x="89.5203%" y="117" width="0.0883%" height="15" fill="rgb(246,112,42)" fg:x="43574" fg:w="43"/><text x="89.7703%" y="127.50"></text></g><g><title>skb_try_coalesce (15 samples, 0.03%)</title><rect x="89.5778%" y="101" width="0.0308%" height="15" fill="rgb(248,228,14)" fg:x="43602" fg:w="15"/><text x="89.8278%" y="111.50"></text></g><g><title>tcp_data_queue (300 samples, 0.62%)</title><rect x="89.0087%" y="149" width="0.6163%" height="15" fill="rgb(208,133,18)" fg:x="43325" fg:w="300"/><text x="89.2587%" y="159.50"></text></g><g><title>tcp_try_rmem_schedule (8 samples, 0.02%)</title><rect x="89.6086%" y="133" width="0.0164%" height="15" fill="rgb(207,35,49)" fg:x="43617" fg:w="8"/><text x="89.8586%" y="143.50"></text></g><g><title>tcp_mstamp_refresh (17 samples, 0.03%)</title><rect x="89.6251%" y="149" width="0.0349%" height="15" fill="rgb(205,68,36)" fg:x="43625" fg:w="17"/><text x="89.8751%" y="159.50"></text></g><g><title>ktime_get (16 samples, 0.03%)</title><rect x="89.6271%" y="133" width="0.0329%" height="15" fill="rgb(245,62,40)" fg:x="43626" fg:w="16"/><text x="89.8771%" y="143.50"></text></g><g><title>read_tsc (11 samples, 0.02%)</title><rect x="89.6374%" y="117" width="0.0226%" height="15" fill="rgb(228,27,24)" fg:x="43631" fg:w="11"/><text x="89.8874%" y="127.50"></text></g><g><title>tcp_urg (9 samples, 0.02%)</title><rect x="89.6600%" y="149" width="0.0185%" height="15" fill="rgb(253,19,12)" fg:x="43642" fg:w="9"/><text x="89.9100%" y="159.50"></text></g><g><title>tcp_rcv_established (426 samples, 0.88%)</title><rect x="88.8608%" y="165" width="0.8752%" height="15" fill="rgb(232,28,20)" fg:x="43253" fg:w="426"/><text x="89.1108%" y="175.50"></text></g><g><title>tcp_validate_incoming (28 samples, 0.06%)</title><rect x="89.6785%" y="149" width="0.0575%" height="15" fill="rgb(218,35,51)" fg:x="43651" fg:w="28"/><text x="89.9285%" y="159.50"></text></g><g><title>tcp_ack (7 samples, 0.01%)</title><rect x="89.7422%" y="149" width="0.0144%" height="15" fill="rgb(212,90,40)" fg:x="43682" fg:w="7"/><text x="89.9922%" y="159.50"></text></g><g><title>__tcp_transmit_skb (10 samples, 0.02%)</title><rect x="89.7607%" y="117" width="0.0205%" height="15" fill="rgb(220,172,12)" fg:x="43691" fg:w="10"/><text x="90.0107%" y="127.50"></text></g><g><title>__ip_queue_xmit (10 samples, 0.02%)</title><rect x="89.7607%" y="101" width="0.0205%" height="15" fill="rgb(226,159,20)" fg:x="43691" fg:w="10"/><text x="90.0107%" y="111.50"></text></g><g><title>ip_local_out (8 samples, 0.02%)</title><rect x="89.7648%" y="85" width="0.0164%" height="15" fill="rgb(234,205,16)" fg:x="43693" fg:w="8"/><text x="90.0148%" y="95.50"></text></g><g><title>__ip_local_out (8 samples, 0.02%)</title><rect x="89.7648%" y="69" width="0.0164%" height="15" fill="rgb(207,9,39)" fg:x="43693" fg:w="8"/><text x="90.0148%" y="79.50"></text></g><g><title>nf_hook_slow (8 samples, 0.02%)</title><rect x="89.7648%" y="53" width="0.0164%" height="15" fill="rgb(249,143,15)" fg:x="43693" fg:w="8"/><text x="90.0148%" y="63.50"></text></g><g><title>nf_conntrack_in (7 samples, 0.01%)</title><rect x="89.7668%" y="37" width="0.0144%" height="15" fill="rgb(253,133,29)" fg:x="43694" fg:w="7"/><text x="90.0168%" y="47.50"></text></g><g><title>tcp_rcv_state_process (29 samples, 0.06%)</title><rect x="89.7360%" y="165" width="0.0596%" height="15" fill="rgb(221,187,0)" fg:x="43679" fg:w="29"/><text x="89.9860%" y="175.50"></text></g><g><title>tcp_data_queue (19 samples, 0.04%)</title><rect x="89.7565%" y="149" width="0.0390%" height="15" fill="rgb(205,204,26)" fg:x="43689" fg:w="19"/><text x="90.0065%" y="159.50"></text></g><g><title>tcp_fin (18 samples, 0.04%)</title><rect x="89.7586%" y="133" width="0.0370%" height="15" fill="rgb(224,68,54)" fg:x="43690" fg:w="18"/><text x="90.0086%" y="143.50"></text></g><g><title>tcp_time_wait (5 samples, 0.01%)</title><rect x="89.7853%" y="117" width="0.0103%" height="15" fill="rgb(209,67,4)" fg:x="43703" fg:w="5"/><text x="90.0353%" y="127.50"></text></g><g><title>tcp_v4_do_rcv (573 samples, 1.18%)</title><rect x="88.6328%" y="181" width="1.1772%" height="15" fill="rgb(228,229,18)" fg:x="43142" fg:w="573"/><text x="88.8828%" y="191.50"></text></g><g><title>tcp_send_delayed_ack (7 samples, 0.01%)</title><rect x="89.7956%" y="165" width="0.0144%" height="15" fill="rgb(231,89,13)" fg:x="43708" fg:w="7"/><text x="90.0456%" y="175.50"></text></g><g><title>ip_protocol_deliver_rcu (767 samples, 1.58%)</title><rect x="88.2404%" y="213" width="1.5758%" height="15" fill="rgb(210,182,18)" fg:x="42951" fg:w="767"/><text x="88.4904%" y="223.50"></text></g><g><title>tcp_v4_rcv (733 samples, 1.51%)</title><rect x="88.3102%" y="197" width="1.5059%" height="15" fill="rgb(240,105,2)" fg:x="42985" fg:w="733"/><text x="88.5602%" y="207.50"></text></g><g><title>ip_local_deliver_finish (801 samples, 1.65%)</title><rect x="88.2239%" y="229" width="1.6456%" height="15" fill="rgb(207,170,50)" fg:x="42943" fg:w="801"/><text x="88.4739%" y="239.50"></text></g><g><title>ktime_get_with_offset (26 samples, 0.05%)</title><rect x="89.8161%" y="213" width="0.0534%" height="15" fill="rgb(232,133,24)" fg:x="43718" fg:w="26"/><text x="90.0661%" y="223.50"></text></g><g><title>read_tsc (12 samples, 0.02%)</title><rect x="89.8449%" y="197" width="0.0247%" height="15" fill="rgb(235,166,27)" fg:x="43732" fg:w="12"/><text x="90.0949%" y="207.50"></text></g><g><title>ip_rcv_core (12 samples, 0.02%)</title><rect x="89.8983%" y="213" width="0.0247%" height="15" fill="rgb(209,19,13)" fg:x="43758" fg:w="12"/><text x="90.1483%" y="223.50"></text></g><g><title>ip_rcv_finish_core.constprop.0 (25 samples, 0.05%)</title><rect x="89.9230%" y="213" width="0.0514%" height="15" fill="rgb(226,79,39)" fg:x="43770" fg:w="25"/><text x="90.1730%" y="223.50"></text></g><g><title>ip_sabotage_in (7 samples, 0.01%)</title><rect x="89.9969%" y="197" width="0.0144%" height="15" fill="rgb(222,163,10)" fg:x="43806" fg:w="7"/><text x="90.2469%" y="207.50"></text></g><g><title>ipv4_conntrack_defrag (15 samples, 0.03%)</title><rect x="90.0113%" y="197" width="0.0308%" height="15" fill="rgb(214,44,19)" fg:x="43813" fg:w="15"/><text x="90.2613%" y="207.50"></text></g><g><title>ipv4_conntrack_in (6 samples, 0.01%)</title><rect x="90.0421%" y="197" width="0.0123%" height="15" fill="rgb(210,217,13)" fg:x="43828" fg:w="6"/><text x="90.2921%" y="207.50"></text></g><g><title>nf_conntrack_in (9 samples, 0.02%)</title><rect x="90.0544%" y="197" width="0.0185%" height="15" fill="rgb(237,61,54)" fg:x="43834" fg:w="9"/><text x="90.3044%" y="207.50"></text></g><g><title>__netif_receive_skb_one_core (1,029 samples, 2.11%)</title><rect x="87.9918%" y="245" width="2.1140%" height="15" fill="rgb(226,184,24)" fg:x="42830" fg:w="1029"/><text x="88.2418%" y="255.50">_..</text></g><g><title>ip_rcv (115 samples, 0.24%)</title><rect x="89.8695%" y="229" width="0.2363%" height="15" fill="rgb(223,226,4)" fg:x="43744" fg:w="115"/><text x="90.1195%" y="239.50"></text></g><g><title>nf_hook_slow (64 samples, 0.13%)</title><rect x="89.9743%" y="213" width="0.1315%" height="15" fill="rgb(210,26,41)" fg:x="43795" fg:w="64"/><text x="90.2243%" y="223.50"></text></g><g><title>nf_nat_ipv4_pre_routing (16 samples, 0.03%)</title><rect x="90.0729%" y="197" width="0.0329%" height="15" fill="rgb(220,221,6)" fg:x="43843" fg:w="16"/><text x="90.3229%" y="207.50"></text></g><g><title>_raw_spin_lock_irq (12 samples, 0.02%)</title><rect x="90.1181%" y="245" width="0.0247%" height="15" fill="rgb(225,89,49)" fg:x="43865" fg:w="12"/><text x="90.3681%" y="255.50"></text></g><g><title>__napi_poll (1,075 samples, 2.21%)</title><rect x="87.9404%" y="277" width="2.2085%" height="15" fill="rgb(218,70,45)" fg:x="42805" fg:w="1075"/><text x="88.1904%" y="287.50">_..</text></g><g><title>process_backlog (1,066 samples, 2.19%)</title><rect x="87.9589%" y="261" width="2.1900%" height="15" fill="rgb(238,166,21)" fg:x="42814" fg:w="1066"/><text x="88.2089%" y="271.50">p..</text></g><g><title>kfree_skbmem (6 samples, 0.01%)</title><rect x="90.1592%" y="277" width="0.0123%" height="15" fill="rgb(224,141,44)" fg:x="43885" fg:w="6"/><text x="90.4092%" y="287.50"></text></g><g><title>kmem_cache_free (7 samples, 0.01%)</title><rect x="90.1715%" y="277" width="0.0144%" height="15" fill="rgb(230,12,49)" fg:x="43891" fg:w="7"/><text x="90.4215%" y="287.50"></text></g><g><title>__local_bh_enable_ip (1,172 samples, 2.41%)</title><rect x="87.8028%" y="341" width="2.4078%" height="15" fill="rgb(212,174,12)" fg:x="42738" fg:w="1172"/><text x="88.0528%" y="351.50">__..</text></g><g><title>do_softirq.part.0 (1,162 samples, 2.39%)</title><rect x="87.8233%" y="325" width="2.3873%" height="15" fill="rgb(246,67,9)" fg:x="42748" fg:w="1162"/><text x="88.0733%" y="335.50">do..</text></g><g><title>__softirqentry_text_start (1,144 samples, 2.35%)</title><rect x="87.8603%" y="309" width="2.3503%" height="15" fill="rgb(239,35,23)" fg:x="42766" fg:w="1144"/><text x="88.1103%" y="319.50">_..</text></g><g><title>net_rx_action (1,126 samples, 2.31%)</title><rect x="87.8973%" y="293" width="2.3133%" height="15" fill="rgb(211,167,0)" fg:x="42784" fg:w="1126"/><text x="88.1473%" y="303.50">n..</text></g><g><title>napi_consume_skb (12 samples, 0.02%)</title><rect x="90.1859%" y="277" width="0.0247%" height="15" fill="rgb(225,119,45)" fg:x="43898" fg:w="12"/><text x="90.4359%" y="287.50"></text></g><g><title>skb_release_data (12 samples, 0.02%)</title><rect x="90.1859%" y="261" width="0.0247%" height="15" fill="rgb(210,162,6)" fg:x="43898" fg:w="12"/><text x="90.4359%" y="271.50"></text></g><g><title>_raw_spin_lock_irqsave (20 samples, 0.04%)</title><rect x="90.3297%" y="261" width="0.0411%" height="15" fill="rgb(208,118,35)" fg:x="43968" fg:w="20"/><text x="90.5797%" y="271.50"></text></g><g><title>__netif_rx (56 samples, 0.12%)</title><rect x="90.2599%" y="309" width="0.1150%" height="15" fill="rgb(239,4,53)" fg:x="43934" fg:w="56"/><text x="90.5099%" y="319.50"></text></g><g><title>netif_rx_internal (52 samples, 0.11%)</title><rect x="90.2681%" y="293" width="0.1068%" height="15" fill="rgb(213,130,21)" fg:x="43938" fg:w="52"/><text x="90.5181%" y="303.50"></text></g><g><title>enqueue_to_backlog (40 samples, 0.08%)</title><rect x="90.2928%" y="277" width="0.0822%" height="15" fill="rgb(235,148,0)" fg:x="43950" fg:w="40"/><text x="90.5428%" y="287.50"></text></g><g><title>eth_type_trans (5 samples, 0.01%)</title><rect x="90.3749%" y="309" width="0.0103%" height="15" fill="rgb(244,224,18)" fg:x="43990" fg:w="5"/><text x="90.6249%" y="319.50"></text></g><g><title>sk_free (5 samples, 0.01%)</title><rect x="90.3852%" y="309" width="0.0103%" height="15" fill="rgb(211,214,4)" fg:x="43995" fg:w="5"/><text x="90.6352%" y="319.50"></text></g><g><title>dev_hard_start_xmit (113 samples, 0.23%)</title><rect x="90.2106%" y="341" width="0.2322%" height="15" fill="rgb(206,119,25)" fg:x="43910" fg:w="113"/><text x="90.4606%" y="351.50"></text></g><g><title>loopback_xmit (106 samples, 0.22%)</title><rect x="90.2250%" y="325" width="0.2178%" height="15" fill="rgb(243,93,47)" fg:x="43917" fg:w="106"/><text x="90.4750%" y="335.50"></text></g><g><title>tcp_wfree (19 samples, 0.04%)</title><rect x="90.4037%" y="309" width="0.0390%" height="15" fill="rgb(224,194,6)" fg:x="44004" fg:w="19"/><text x="90.6537%" y="319.50"></text></g><g><title>netif_skb_features (13 samples, 0.03%)</title><rect x="90.4797%" y="325" width="0.0267%" height="15" fill="rgb(243,229,6)" fg:x="44041" fg:w="13"/><text x="90.7297%" y="335.50"></text></g><g><title>skb_network_protocol (5 samples, 0.01%)</title><rect x="90.4961%" y="309" width="0.0103%" height="15" fill="rgb(207,23,50)" fg:x="44049" fg:w="5"/><text x="90.7461%" y="319.50"></text></g><g><title>validate_xmit_skb (31 samples, 0.06%)</title><rect x="90.4448%" y="341" width="0.0637%" height="15" fill="rgb(253,192,32)" fg:x="44024" fg:w="31"/><text x="90.6948%" y="351.50"></text></g><g><title>__dev_queue_xmit (1,369 samples, 2.81%)</title><rect x="87.7062%" y="357" width="2.8125%" height="15" fill="rgb(213,21,6)" fg:x="42691" fg:w="1369"/><text x="87.9562%" y="367.50">__..</text></g><g><title>validate_xmit_xfrm (5 samples, 0.01%)</title><rect x="90.5085%" y="341" width="0.0103%" height="15" fill="rgb(243,151,13)" fg:x="44055" fg:w="5"/><text x="90.7585%" y="351.50"></text></g><g><title>ip_finish_output2 (1,424 samples, 2.93%)</title><rect x="87.6055%" y="373" width="2.9255%" height="15" fill="rgb(233,165,41)" fg:x="42642" fg:w="1424"/><text x="87.8555%" y="383.50">ip..</text></g><g><title>__rcu_read_unlock (10 samples, 0.02%)</title><rect x="90.5948%" y="341" width="0.0205%" height="15" fill="rgb(246,176,45)" fg:x="44097" fg:w="10"/><text x="90.8448%" y="351.50"></text></g><g><title>ip_send_check (5 samples, 0.01%)</title><rect x="90.6153%" y="341" width="0.0103%" height="15" fill="rgb(217,170,52)" fg:x="44107" fg:w="5"/><text x="90.8653%" y="351.50"></text></g><g><title>ipv4_conntrack_defrag (17 samples, 0.03%)</title><rect x="90.6482%" y="325" width="0.0349%" height="15" fill="rgb(214,203,54)" fg:x="44123" fg:w="17"/><text x="90.8982%" y="335.50"></text></g><g><title>ipv4_conntrack_local (13 samples, 0.03%)</title><rect x="90.6831%" y="325" width="0.0267%" height="15" fill="rgb(248,215,49)" fg:x="44140" fg:w="13"/><text x="90.9331%" y="335.50"></text></g><g><title>__nf_conntrack_find_get (39 samples, 0.08%)</title><rect x="90.7879%" y="309" width="0.0801%" height="15" fill="rgb(208,46,10)" fg:x="44191" fg:w="39"/><text x="91.0379%" y="319.50"></text></g><g><title>get_l4proto (7 samples, 0.01%)</title><rect x="90.8680%" y="309" width="0.0144%" height="15" fill="rgb(254,5,31)" fg:x="44230" fg:w="7"/><text x="91.1180%" y="319.50"></text></g><g><title>hash_conntrack_raw (48 samples, 0.10%)</title><rect x="90.8824%" y="309" width="0.0986%" height="15" fill="rgb(222,104,33)" fg:x="44237" fg:w="48"/><text x="91.1324%" y="319.50"></text></g><g><title>__siphash_unaligned (32 samples, 0.07%)</title><rect x="90.9153%" y="293" width="0.0657%" height="15" fill="rgb(248,49,16)" fg:x="44253" fg:w="32"/><text x="91.1653%" y="303.50"></text></g><g><title>_raw_spin_lock_bh (5 samples, 0.01%)</title><rect x="91.1145%" y="293" width="0.0103%" height="15" fill="rgb(232,198,41)" fg:x="44350" fg:w="5"/><text x="91.3645%" y="303.50"></text></g><g><title>nf_conntrack_tcp_packet (74 samples, 0.15%)</title><rect x="90.9810%" y="309" width="0.1520%" height="15" fill="rgb(214,125,3)" fg:x="44285" fg:w="74"/><text x="91.2310%" y="319.50"></text></g><g><title>nf_conntrack_in (222 samples, 0.46%)</title><rect x="90.7098%" y="325" width="0.4561%" height="15" fill="rgb(229,220,28)" fg:x="44153" fg:w="222"/><text x="90.9598%" y="335.50"></text></g><g><title>nf_ct_get_tuple (16 samples, 0.03%)</title><rect x="91.1330%" y="309" width="0.0329%" height="15" fill="rgb(222,64,37)" fg:x="44359" fg:w="16"/><text x="91.3830%" y="319.50"></text></g><g><title>ip_local_out (327 samples, 0.67%)</title><rect x="90.5311%" y="373" width="0.6718%" height="15" fill="rgb(249,184,13)" fg:x="44066" fg:w="327"/><text x="90.7811%" y="383.50"></text></g><g><title>__ip_local_out (319 samples, 0.66%)</title><rect x="90.5475%" y="357" width="0.6554%" height="15" fill="rgb(252,176,6)" fg:x="44074" fg:w="319"/><text x="90.7975%" y="367.50"></text></g><g><title>nf_hook_slow (281 samples, 0.58%)</title><rect x="90.6256%" y="341" width="0.5773%" height="15" fill="rgb(228,153,7)" fg:x="44112" fg:w="281"/><text x="90.8756%" y="351.50"></text></g><g><title>nf_nat_ipv4_local_fn (18 samples, 0.04%)</title><rect x="91.1659%" y="325" width="0.0370%" height="15" fill="rgb(242,193,5)" fg:x="44375" fg:w="18"/><text x="91.4159%" y="335.50"></text></g><g><title>__rcu_read_unlock (9 samples, 0.02%)</title><rect x="91.2625%" y="357" width="0.0185%" height="15" fill="rgb(232,140,9)" fg:x="44422" fg:w="9"/><text x="91.5125%" y="367.50"></text></g><g><title>apparmor_ip_postroute (8 samples, 0.02%)</title><rect x="91.3077%" y="341" width="0.0164%" height="15" fill="rgb(213,222,16)" fg:x="44444" fg:w="8"/><text x="91.5577%" y="351.50"></text></g><g><title>ipv4_confirm (10 samples, 0.02%)</title><rect x="91.3241%" y="341" width="0.0205%" height="15" fill="rgb(222,75,50)" fg:x="44452" fg:w="10"/><text x="91.5741%" y="351.50"></text></g><g><title>ip_output (94 samples, 0.19%)</title><rect x="91.2029%" y="373" width="0.1931%" height="15" fill="rgb(205,180,2)" fg:x="44393" fg:w="94"/><text x="91.4529%" y="383.50"></text></g><g><title>nf_hook_slow (56 samples, 0.12%)</title><rect x="91.2809%" y="357" width="0.1150%" height="15" fill="rgb(216,34,7)" fg:x="44431" fg:w="56"/><text x="91.5309%" y="367.50"></text></g><g><title>nf_nat_ipv4_out (25 samples, 0.05%)</title><rect x="91.3446%" y="341" width="0.0514%" height="15" fill="rgb(253,16,32)" fg:x="44462" fg:w="25"/><text x="91.5946%" y="351.50"></text></g><g><title>nf_nat_inet_fn (8 samples, 0.02%)</title><rect x="91.3796%" y="325" width="0.0164%" height="15" fill="rgb(208,97,28)" fg:x="44479" fg:w="8"/><text x="91.6296%" y="335.50"></text></g><g><title>__ip_queue_xmit (1,930 samples, 3.97%)</title><rect x="87.4350%" y="389" width="3.9651%" height="15" fill="rgb(225,92,11)" fg:x="42559" fg:w="1930"/><text x="87.6850%" y="399.50">__ip..</text></g><g><title>__skb_clone (22 samples, 0.05%)</title><rect x="91.4001%" y="389" width="0.0452%" height="15" fill="rgb(243,38,12)" fg:x="44489" fg:w="22"/><text x="91.6501%" y="399.50"></text></g><g><title>__copy_skb_header (11 samples, 0.02%)</title><rect x="91.4227%" y="373" width="0.0226%" height="15" fill="rgb(208,139,16)" fg:x="44500" fg:w="11"/><text x="91.6727%" y="383.50"></text></g><g><title>__tcp_select_window (14 samples, 0.03%)</title><rect x="91.4453%" y="389" width="0.0288%" height="15" fill="rgb(227,24,9)" fg:x="44511" fg:w="14"/><text x="91.6953%" y="399.50"></text></g><g><title>tcp_established_options (7 samples, 0.01%)</title><rect x="91.4967%" y="389" width="0.0144%" height="15" fill="rgb(206,62,11)" fg:x="44536" fg:w="7"/><text x="91.7467%" y="399.50"></text></g><g><title>tcp_options_write (7 samples, 0.01%)</title><rect x="91.5110%" y="389" width="0.0144%" height="15" fill="rgb(228,134,27)" fg:x="44543" fg:w="7"/><text x="91.7610%" y="399.50"></text></g><g><title>tcp_update_skb_after_send (24 samples, 0.05%)</title><rect x="91.5336%" y="389" width="0.0493%" height="15" fill="rgb(205,55,33)" fg:x="44554" fg:w="24"/><text x="91.7836%" y="399.50"></text></g><g><title>__list_del_entry_valid (5 samples, 0.01%)</title><rect x="91.5727%" y="373" width="0.0103%" height="15" fill="rgb(243,75,43)" fg:x="44573" fg:w="5"/><text x="91.8227%" y="383.50"></text></g><g><title>__tcp_transmit_skb (2,084 samples, 4.28%)</title><rect x="87.3056%" y="405" width="4.2815%" height="15" fill="rgb(223,27,42)" fg:x="42496" fg:w="2084"/><text x="87.5556%" y="415.50">__tcp..</text></g><g><title>ktime_get (33 samples, 0.07%)</title><rect x="91.5871%" y="405" width="0.0678%" height="15" fill="rgb(232,189,33)" fg:x="44580" fg:w="33"/><text x="91.8371%" y="415.50"></text></g><g><title>read_tsc (14 samples, 0.03%)</title><rect x="91.6261%" y="389" width="0.0288%" height="15" fill="rgb(210,9,39)" fg:x="44599" fg:w="14"/><text x="91.8761%" y="399.50"></text></g><g><title>tcp_check_space (5 samples, 0.01%)</title><rect x="91.6549%" y="405" width="0.0103%" height="15" fill="rgb(242,85,26)" fg:x="44613" fg:w="5"/><text x="91.9049%" y="415.50"></text></g><g><title>detach_if_pending (11 samples, 0.02%)</title><rect x="91.7473%" y="357" width="0.0226%" height="15" fill="rgb(248,44,4)" fg:x="44658" fg:w="11"/><text x="91.9973%" y="367.50"></text></g><g><title>enqueue_timer (7 samples, 0.01%)</title><rect x="91.7699%" y="357" width="0.0144%" height="15" fill="rgb(250,96,46)" fg:x="44669" fg:w="7"/><text x="92.0199%" y="367.50"></text></g><g><title>get_nohz_timer_target (9 samples, 0.02%)</title><rect x="91.7843%" y="357" width="0.0185%" height="15" fill="rgb(229,116,26)" fg:x="44676" fg:w="9"/><text x="92.0343%" y="367.50"></text></g><g><title>sk_reset_timer (59 samples, 0.12%)</title><rect x="91.7021%" y="389" width="0.1212%" height="15" fill="rgb(246,94,34)" fg:x="44636" fg:w="59"/><text x="91.9521%" y="399.50"></text></g><g><title>__mod_timer (59 samples, 0.12%)</title><rect x="91.7021%" y="373" width="0.1212%" height="15" fill="rgb(251,73,21)" fg:x="44636" fg:w="59"/><text x="91.9521%" y="383.50"></text></g><g><title>lock_timer_base (10 samples, 0.02%)</title><rect x="91.8028%" y="357" width="0.0205%" height="15" fill="rgb(254,121,25)" fg:x="44685" fg:w="10"/><text x="92.0528%" y="367.50"></text></g><g><title>_raw_spin_lock_irqsave (7 samples, 0.01%)</title><rect x="91.8089%" y="341" width="0.0144%" height="15" fill="rgb(215,161,49)" fg:x="44688" fg:w="7"/><text x="92.0589%" y="351.50"></text></g><g><title>tcp_rbtree_insert (6 samples, 0.01%)</title><rect x="91.8233%" y="389" width="0.0123%" height="15" fill="rgb(221,43,13)" fg:x="44695" fg:w="6"/><text x="92.0733%" y="399.50"></text></g><g><title>tcp_event_new_data_sent (88 samples, 0.18%)</title><rect x="91.6692%" y="405" width="0.1808%" height="15" fill="rgb(249,5,37)" fg:x="44620" fg:w="88"/><text x="91.9192%" y="415.50"></text></g><g><title>tcp_rearm_rto (7 samples, 0.01%)</title><rect x="91.8356%" y="389" width="0.0144%" height="15" fill="rgb(226,25,44)" fg:x="44701" fg:w="7"/><text x="92.0856%" y="399.50"></text></g><g><title>__mod_timer (7 samples, 0.01%)</title><rect x="91.9219%" y="373" width="0.0144%" height="15" fill="rgb(238,189,16)" fg:x="44743" fg:w="7"/><text x="92.1719%" y="383.50"></text></g><g><title>tcp_schedule_loss_probe (43 samples, 0.09%)</title><rect x="91.8500%" y="405" width="0.0883%" height="15" fill="rgb(251,186,8)" fg:x="44708" fg:w="43"/><text x="92.1000%" y="415.50"></text></g><g><title>sk_reset_timer (9 samples, 0.02%)</title><rect x="91.9199%" y="389" width="0.0185%" height="15" fill="rgb(254,34,31)" fg:x="44742" fg:w="9"/><text x="92.1699%" y="399.50"></text></g><g><title>__tcp_push_pending_frames (2,327 samples, 4.78%)</title><rect x="87.1947%" y="437" width="4.7807%" height="15" fill="rgb(225,215,27)" fg:x="42442" fg:w="2327"/><text x="87.4447%" y="447.50">__tcp_..</text></g><g><title>tcp_write_xmit (2,318 samples, 4.76%)</title><rect x="87.2131%" y="421" width="4.7622%" height="15" fill="rgb(221,192,48)" fg:x="42451" fg:w="2318"/><text x="87.4631%" y="431.50">tcp_wr..</text></g><g><title>tcp_tso_segs (14 samples, 0.03%)</title><rect x="91.9466%" y="405" width="0.0288%" height="15" fill="rgb(219,137,20)" fg:x="44755" fg:w="14"/><text x="92.1966%" y="415.50"></text></g><g><title>_raw_spin_lock (5 samples, 0.01%)</title><rect x="91.9753%" y="437" width="0.0103%" height="15" fill="rgb(219,84,11)" fg:x="44769" fg:w="5"/><text x="92.2253%" y="447.50"></text></g><g><title>_raw_write_lock_bh (12 samples, 0.02%)</title><rect x="91.9856%" y="437" width="0.0247%" height="15" fill="rgb(224,10,23)" fg:x="44774" fg:w="12"/><text x="92.2356%" y="447.50"></text></g><g><title>sk_stream_wait_close (9 samples, 0.02%)</title><rect x="92.0144%" y="437" width="0.0185%" height="15" fill="rgb(248,22,39)" fg:x="44788" fg:w="9"/><text x="92.2644%" y="447.50"></text></g><g><title>tcp_check_oom (16 samples, 0.03%)</title><rect x="92.0329%" y="437" width="0.0329%" height="15" fill="rgb(212,154,20)" fg:x="44797" fg:w="16"/><text x="92.2829%" y="447.50"></text></g><g><title>__build_skb_around (7 samples, 0.01%)</title><rect x="92.3369%" y="405" width="0.0144%" height="15" fill="rgb(236,199,50)" fg:x="44945" fg:w="7"/><text x="92.5869%" y="415.50"></text></g><g><title>memset_erms (21 samples, 0.04%)</title><rect x="92.4438%" y="357" width="0.0431%" height="15" fill="rgb(211,9,17)" fg:x="44997" fg:w="21"/><text x="92.6938%" y="367.50"></text></g><g><title>__kmem_cache_alloc_node (56 samples, 0.12%)</title><rect x="92.3739%" y="373" width="0.1150%" height="15" fill="rgb(243,216,36)" fg:x="44963" fg:w="56"/><text x="92.6239%" y="383.50"></text></g><g><title>__kmalloc_node_track_caller (59 samples, 0.12%)</title><rect x="92.3698%" y="389" width="0.1212%" height="15" fill="rgb(250,2,10)" fg:x="44961" fg:w="59"/><text x="92.6198%" y="399.50"></text></g><g><title>kmalloc_reserve (80 samples, 0.16%)</title><rect x="92.3513%" y="405" width="0.1644%" height="15" fill="rgb(226,50,48)" fg:x="44952" fg:w="80"/><text x="92.6013%" y="415.50"></text></g><g><title>kmalloc_size_roundup (12 samples, 0.02%)</title><rect x="92.4910%" y="389" width="0.0247%" height="15" fill="rgb(243,81,16)" fg:x="45020" fg:w="12"/><text x="92.7410%" y="399.50"></text></g><g><title>kmalloc_slab (7 samples, 0.01%)</title><rect x="92.5013%" y="373" width="0.0144%" height="15" fill="rgb(250,14,2)" fg:x="45025" fg:w="7"/><text x="92.7513%" y="383.50"></text></g><g><title>__alloc_skb (140 samples, 0.29%)</title><rect x="92.2856%" y="421" width="0.2876%" height="15" fill="rgb(233,135,29)" fg:x="44920" fg:w="140"/><text x="92.5356%" y="431.50"></text></g><g><title>kmem_cache_alloc_node (28 samples, 0.06%)</title><rect x="92.5157%" y="405" width="0.0575%" height="15" fill="rgb(224,64,43)" fg:x="45032" fg:w="28"/><text x="92.7657%" y="415.50"></text></g><g><title>memset_erms (14 samples, 0.03%)</title><rect x="92.5444%" y="389" width="0.0288%" height="15" fill="rgb(238,84,13)" fg:x="45046" fg:w="14"/><text x="92.7944%" y="399.50"></text></g><g><title>__mod_memcg_state (16 samples, 0.03%)</title><rect x="92.5876%" y="389" width="0.0329%" height="15" fill="rgb(253,48,26)" fg:x="45067" fg:w="16"/><text x="92.8376%" y="399.50"></text></g><g><title>cgroup_rstat_updated (7 samples, 0.01%)</title><rect x="92.6061%" y="373" width="0.0144%" height="15" fill="rgb(205,223,31)" fg:x="45076" fg:w="7"/><text x="92.8561%" y="383.50"></text></g><g><title>mod_memcg_state (20 samples, 0.04%)</title><rect x="92.5814%" y="405" width="0.0411%" height="15" fill="rgb(221,41,32)" fg:x="45064" fg:w="20"/><text x="92.8314%" y="415.50"></text></g><g><title>mem_cgroup_charge_skmem (27 samples, 0.06%)</title><rect x="92.5752%" y="421" width="0.0555%" height="15" fill="rgb(213,158,31)" fg:x="45061" fg:w="27"/><text x="92.8252%" y="431.50"></text></g><g><title>sk_forced_mem_schedule (11 samples, 0.02%)</title><rect x="92.6307%" y="421" width="0.0226%" height="15" fill="rgb(245,126,43)" fg:x="45088" fg:w="11"/><text x="92.8807%" y="431.50"></text></g><g><title>ipv4_mtu (10 samples, 0.02%)</title><rect x="92.6985%" y="405" width="0.0205%" height="15" fill="rgb(227,7,22)" fg:x="45121" fg:w="10"/><text x="92.9485%" y="415.50"></text></g><g><title>tcp_send_fin (323 samples, 0.66%)</title><rect x="92.0657%" y="437" width="0.6636%" height="15" fill="rgb(252,90,44)" fg:x="44813" fg:w="323"/><text x="92.3157%" y="447.50"></text></g><g><title>tcp_current_mss (37 samples, 0.08%)</title><rect x="92.6533%" y="421" width="0.0760%" height="15" fill="rgb(253,91,0)" fg:x="45099" fg:w="37"/><text x="92.9033%" y="431.50"></text></g><g><title>tcp_established_options (5 samples, 0.01%)</title><rect x="92.7191%" y="405" width="0.0103%" height="15" fill="rgb(252,175,49)" fg:x="45131" fg:w="5"/><text x="92.9691%" y="415.50"></text></g><g><title>__tcp_close (2,787 samples, 5.73%)</title><rect x="87.0180%" y="453" width="5.7257%" height="15" fill="rgb(246,150,1)" fg:x="42356" fg:w="2787"/><text x="87.2680%" y="463.50">__tcp_c..</text></g><g><title>tcp_set_state (7 samples, 0.01%)</title><rect x="92.7293%" y="437" width="0.0144%" height="15" fill="rgb(241,192,25)" fg:x="45136" fg:w="7"/><text x="92.9793%" y="447.50"></text></g><g><title>lock_sock_nested (17 samples, 0.03%)</title><rect x="92.7437%" y="453" width="0.0349%" height="15" fill="rgb(239,187,11)" fg:x="45143" fg:w="17"/><text x="92.9937%" y="463.50"></text></g><g><title>_raw_spin_lock_bh (11 samples, 0.02%)</title><rect x="92.7560%" y="437" width="0.0226%" height="15" fill="rgb(218,202,51)" fg:x="45149" fg:w="11"/><text x="93.0060%" y="447.50"></text></g><g><title>_raw_spin_lock_bh (13 samples, 0.03%)</title><rect x="92.7971%" y="437" width="0.0267%" height="15" fill="rgb(225,176,8)" fg:x="45169" fg:w="13"/><text x="93.0471%" y="447.50"></text></g><g><title>inet_release (2,885 samples, 5.93%)</title><rect x="86.9111%" y="485" width="5.9271%" height="15" fill="rgb(219,122,41)" fg:x="42304" fg:w="2885"/><text x="87.1611%" y="495.50">inet_rel..</text></g><g><title>tcp_close (2,854 samples, 5.86%)</title><rect x="86.9748%" y="469" width="5.8634%" height="15" fill="rgb(248,140,20)" fg:x="42335" fg:w="2854"/><text x="87.2248%" y="479.50">tcp_clo..</text></g><g><title>release_sock (29 samples, 0.06%)</title><rect x="92.7786%" y="453" width="0.0596%" height="15" fill="rgb(245,41,37)" fg:x="45160" fg:w="29"/><text x="93.0286%" y="463.50"></text></g><g><title>tcp_release_cb (7 samples, 0.01%)</title><rect x="92.8238%" y="437" width="0.0144%" height="15" fill="rgb(235,82,39)" fg:x="45182" fg:w="7"/><text x="93.0738%" y="447.50"></text></g><g><title>__fput (3,785 samples, 7.78%)</title><rect x="85.0868%" y="533" width="7.7761%" height="15" fill="rgb(230,108,42)" fg:x="41416" fg:w="3785"/><text x="85.3368%" y="543.50">__fput</text></g><g><title>sock_close (2,937 samples, 6.03%)</title><rect x="86.8290%" y="517" width="6.0339%" height="15" fill="rgb(215,150,50)" fg:x="42264" fg:w="2937"/><text x="87.0790%" y="527.50">sock_clo..</text></g><g><title>__sock_release (2,932 samples, 6.02%)</title><rect x="86.8392%" y="501" width="6.0236%" height="15" fill="rgb(233,212,5)" fg:x="42269" fg:w="2932"/><text x="87.0892%" y="511.50">__sock_r..</text></g><g><title>up_write (11 samples, 0.02%)</title><rect x="92.8403%" y="485" width="0.0226%" height="15" fill="rgb(245,80,22)" fg:x="45190" fg:w="11"/><text x="93.0903%" y="495.50"></text></g><g><title>_raw_spin_lock_irq (9 samples, 0.02%)</title><rect x="92.8629%" y="533" width="0.0185%" height="15" fill="rgb(238,129,16)" fg:x="45201" fg:w="9"/><text x="93.1129%" y="543.50"></text></g><g><title>rcu_segcblist_enqueue (5 samples, 0.01%)</title><rect x="92.8916%" y="517" width="0.0103%" height="15" fill="rgb(240,19,0)" fg:x="45215" fg:w="5"/><text x="93.1416%" y="527.50"></text></g><g><title>exit_to_user_mode_prepare (3,942 samples, 8.10%)</title><rect x="84.8053%" y="565" width="8.0986%" height="15" fill="rgb(232,42,35)" fg:x="41279" fg:w="3942"/><text x="85.0553%" y="575.50">exit_to_use..</text></g><g><title>task_work_run (3,839 samples, 7.89%)</title><rect x="85.0169%" y="549" width="7.8870%" height="15" fill="rgb(223,130,24)" fg:x="41382" fg:w="3839"/><text x="85.2669%" y="559.50">task_work_r..</text></g><g><title>call_rcu (11 samples, 0.02%)</title><rect x="92.8814%" y="533" width="0.0226%" height="15" fill="rgb(237,16,22)" fg:x="45210" fg:w="11"/><text x="93.1314%" y="543.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (4,220 samples, 8.67%)</title><rect x="84.2404%" y="613" width="8.6697%" height="15" fill="rgb(248,192,20)" fg:x="41004" fg:w="4220"/><text x="84.4904%" y="623.50">entry_SYSCAL..</text></g><g><title>do_syscall_64 (4,140 samples, 8.51%)</title><rect x="84.4047%" y="597" width="8.5054%" height="15" fill="rgb(233,167,2)" fg:x="41084" fg:w="4140"/><text x="84.6547%" y="607.50">do_syscall_64</text></g><g><title>syscall_exit_to_user_mode (3,969 samples, 8.15%)</title><rect x="84.7560%" y="581" width="8.1541%" height="15" fill="rgb(252,71,44)" fg:x="41255" fg:w="3969"/><text x="85.0060%" y="591.50">syscall_exi..</text></g><g><title>core::ptr::drop_in_place&lt;mio::net::tcp::stream::TcpStream&gt; (4,412 samples, 9.06%)</title><rect x="84.1212%" y="757" width="9.0642%" height="15" fill="rgb(238,37,47)" fg:x="40946" fg:w="4412"/><text x="84.3712%" y="767.50">core::ptr::dr..</text></g><g><title>core::ptr::drop_in_place&lt;mio::io_source::IoSource&lt;std::net::tcp::TcpStream&gt;&gt; (4,412 samples, 9.06%)</title><rect x="84.1212%" y="741" width="9.0642%" height="15" fill="rgb(214,202,54)" fg:x="40946" fg:w="4412"/><text x="84.3712%" y="751.50">core::ptr::dr..</text></g><g><title>core::ptr::drop_in_place&lt;std::net::tcp::TcpStream&gt; (4,412 samples, 9.06%)</title><rect x="84.1212%" y="725" width="9.0642%" height="15" fill="rgb(254,165,40)" fg:x="40946" fg:w="4412"/><text x="84.3712%" y="735.50">core::ptr::dr..</text></g><g><title>core::ptr::drop_in_place&lt;std::sys_common::net::TcpStream&gt; (4,412 samples, 9.06%)</title><rect x="84.1212%" y="709" width="9.0642%" height="15" fill="rgb(246,173,38)" fg:x="40946" fg:w="4412"/><text x="84.3712%" y="719.50">core::ptr::dr..</text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::net::Socket&gt; (4,412 samples, 9.06%)</title><rect x="84.1212%" y="693" width="9.0642%" height="15" fill="rgb(215,3,27)" fg:x="40946" fg:w="4412"/><text x="84.3712%" y="703.50">core::ptr::dr..</text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::fd::FileDesc&gt; (4,412 samples, 9.06%)</title><rect x="84.1212%" y="677" width="9.0642%" height="15" fill="rgb(239,169,51)" fg:x="40946" fg:w="4412"/><text x="84.3712%" y="687.50">core::ptr::dr..</text></g><g><title>core::ptr::drop_in_place&lt;std::os::fd::owned::OwnedFd&gt; (4,412 samples, 9.06%)</title><rect x="84.1212%" y="661" width="9.0642%" height="15" fill="rgb(212,5,25)" fg:x="40946" fg:w="4412"/><text x="84.3712%" y="671.50">core::ptr::dr..</text></g><g><title>&lt;std::os::fd::owned::OwnedFd as core::ops::drop::Drop&gt;::drop (4,412 samples, 9.06%)</title><rect x="84.1212%" y="645" width="9.0642%" height="15" fill="rgb(243,45,17)" fg:x="40946" fg:w="4412"/><text x="84.3712%" y="655.50">&lt;std::os::fd:..</text></g><g><title>__GI___close (4,412 samples, 9.06%)</title><rect x="84.1212%" y="629" width="9.0642%" height="15" fill="rgb(242,97,9)" fg:x="40946" fg:w="4412"/><text x="84.3712%" y="639.50">__GI___close</text></g><g><title>syscall_return_via_sysret (131 samples, 0.27%)</title><rect x="92.9163%" y="613" width="0.2691%" height="15" fill="rgb(228,71,31)" fg:x="45227" fg:w="131"/><text x="93.1663%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (8 samples, 0.02%)</title><rect x="93.1936%" y="661" width="0.0164%" height="15" fill="rgb(252,184,16)" fg:x="45362" fg:w="8"/><text x="93.4436%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (8 samples, 0.02%)</title><rect x="93.1936%" y="645" width="0.0164%" height="15" fill="rgb(236,169,46)" fg:x="45362" fg:w="8"/><text x="93.4436%" y="655.50"></text></g><g><title>__x64_sys_futex (5 samples, 0.01%)</title><rect x="93.2121%" y="613" width="0.0103%" height="15" fill="rgb(207,17,47)" fg:x="45371" fg:w="5"/><text x="93.4621%" y="623.50"></text></g><g><title>do_futex (5 samples, 0.01%)</title><rect x="93.2121%" y="597" width="0.0103%" height="15" fill="rgb(206,201,28)" fg:x="45371" fg:w="5"/><text x="93.4621%" y="607.50"></text></g><g><title>futex_wake (5 samples, 0.01%)</title><rect x="93.2121%" y="581" width="0.0103%" height="15" fill="rgb(224,184,23)" fg:x="45371" fg:w="5"/><text x="93.4621%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::io::registration_set::Synced&gt;&gt; (15 samples, 0.03%)</title><rect x="93.1936%" y="725" width="0.0308%" height="15" fill="rgb(208,139,48)" fg:x="45362" fg:w="15"/><text x="93.4436%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::io::registration_set::Synced&gt;&gt; (15 samples, 0.03%)</title><rect x="93.1936%" y="709" width="0.0308%" height="15" fill="rgb(208,130,10)" fg:x="45362" fg:w="15"/><text x="93.4436%" y="719.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.03%)</title><rect x="93.1936%" y="693" width="0.0308%" height="15" fill="rgb(211,213,45)" fg:x="45362" fg:w="15"/><text x="93.4436%" y="703.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (15 samples, 0.03%)</title><rect x="93.1936%" y="677" width="0.0308%" height="15" fill="rgb(235,100,30)" fg:x="45362" fg:w="15"/><text x="93.4436%" y="687.50"></text></g><g><title>syscall (7 samples, 0.01%)</title><rect x="93.2101%" y="661" width="0.0144%" height="15" fill="rgb(206,144,31)" fg:x="45370" fg:w="7"/><text x="93.4601%" y="671.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (7 samples, 0.01%)</title><rect x="93.2101%" y="645" width="0.0144%" height="15" fill="rgb(224,200,26)" fg:x="45370" fg:w="7"/><text x="93.4601%" y="655.50"></text></g><g><title>do_syscall_64 (6 samples, 0.01%)</title><rect x="93.2121%" y="629" width="0.0123%" height="15" fill="rgb(247,104,53)" fg:x="45371" fg:w="6"/><text x="93.4621%" y="639.50"></text></g><g><title>__fget_light (56 samples, 0.12%)</title><rect x="93.7072%" y="565" width="0.1150%" height="15" fill="rgb(220,14,17)" fg:x="45612" fg:w="56"/><text x="93.9572%" y="575.50"></text></g><g><title>mutex_spin_on_owner (37 samples, 0.08%)</title><rect x="93.8387%" y="549" width="0.0760%" height="15" fill="rgb(230,140,40)" fg:x="45676" fg:w="37"/><text x="94.0887%" y="559.50"></text></g><g><title>__mutex_lock.constprop.0 (57 samples, 0.12%)</title><rect x="93.8223%" y="565" width="0.1171%" height="15" fill="rgb(229,2,41)" fg:x="45668" fg:w="57"/><text x="94.0723%" y="575.50"></text></g><g><title>schedule_preempt_disabled (8 samples, 0.02%)</title><rect x="93.9230%" y="549" width="0.0164%" height="15" fill="rgb(232,89,16)" fg:x="45717" fg:w="8"/><text x="94.1730%" y="559.50"></text></g><g><title>schedule (8 samples, 0.02%)</title><rect x="93.9230%" y="533" width="0.0164%" height="15" fill="rgb(247,59,52)" fg:x="45717" fg:w="8"/><text x="94.1730%" y="543.50"></text></g><g><title>__schedule (8 samples, 0.02%)</title><rect x="93.9230%" y="517" width="0.0164%" height="15" fill="rgb(226,110,21)" fg:x="45717" fg:w="8"/><text x="94.1730%" y="527.50"></text></g><g><title>__mutex_unlock_slowpath.constprop.0 (6 samples, 0.01%)</title><rect x="93.9394%" y="565" width="0.0123%" height="15" fill="rgb(224,176,43)" fg:x="45725" fg:w="6"/><text x="94.1894%" y="575.50"></text></g><g><title>wake_up_q (5 samples, 0.01%)</title><rect x="93.9414%" y="549" width="0.0103%" height="15" fill="rgb(221,73,6)" fg:x="45726" fg:w="5"/><text x="94.1914%" y="559.50"></text></g><g><title>try_to_wake_up (5 samples, 0.01%)</title><rect x="93.9414%" y="533" width="0.0103%" height="15" fill="rgb(232,78,19)" fg:x="45726" fg:w="5"/><text x="94.1914%" y="543.50"></text></g><g><title>__slab_free (33 samples, 0.07%)</title><rect x="94.0503%" y="549" width="0.0678%" height="15" fill="rgb(233,112,48)" fg:x="45779" fg:w="33"/><text x="94.3003%" y="559.50"></text></g><g><title>cmpxchg_double_slab.constprop.0.isra.0 (17 samples, 0.03%)</title><rect x="94.0832%" y="533" width="0.0349%" height="15" fill="rgb(243,131,47)" fg:x="45795" fg:w="17"/><text x="94.3332%" y="543.50"></text></g><g><title>_raw_write_lock_irq (13 samples, 0.03%)</title><rect x="94.1305%" y="549" width="0.0267%" height="15" fill="rgb(226,51,1)" fg:x="45818" fg:w="13"/><text x="94.3805%" y="559.50"></text></g><g><title>call_rcu (40 samples, 0.08%)</title><rect x="94.1633%" y="549" width="0.0822%" height="15" fill="rgb(247,58,7)" fg:x="45834" fg:w="40"/><text x="94.4133%" y="559.50"></text></g><g><title>__rcu_read_lock (6 samples, 0.01%)</title><rect x="94.4735%" y="533" width="0.0123%" height="15" fill="rgb(209,7,32)" fg:x="45985" fg:w="6"/><text x="94.7235%" y="543.50"></text></g><g><title>__rcu_read_unlock (5 samples, 0.01%)</title><rect x="94.4859%" y="533" width="0.0103%" height="15" fill="rgb(209,39,41)" fg:x="45991" fg:w="5"/><text x="94.7359%" y="543.50"></text></g><g><title>cache_from_obj (24 samples, 0.05%)</title><rect x="94.4961%" y="533" width="0.0493%" height="15" fill="rgb(226,182,46)" fg:x="45996" fg:w="24"/><text x="94.7461%" y="543.50"></text></g><g><title>mod_objcg_state (18 samples, 0.04%)</title><rect x="94.5455%" y="533" width="0.0370%" height="15" fill="rgb(230,219,10)" fg:x="46020" fg:w="18"/><text x="94.7955%" y="543.50"></text></g><g><title>kmem_cache_free (178 samples, 0.37%)</title><rect x="94.2455%" y="549" width="0.3657%" height="15" fill="rgb(227,175,30)" fg:x="45874" fg:w="178"/><text x="94.4955%" y="559.50"></text></g><g><title>refill_obj_stock (11 samples, 0.02%)</title><rect x="94.5886%" y="533" width="0.0226%" height="15" fill="rgb(217,2,50)" fg:x="46041" fg:w="11"/><text x="94.8386%" y="543.50"></text></g><g><title>percpu_counter_add_batch (15 samples, 0.03%)</title><rect x="94.6112%" y="549" width="0.0308%" height="15" fill="rgb(229,160,0)" fg:x="46052" fg:w="15"/><text x="94.8612%" y="559.50"></text></g><g><title>queued_write_lock_slowpath (13 samples, 0.03%)</title><rect x="94.6441%" y="549" width="0.0267%" height="15" fill="rgb(207,78,37)" fg:x="46068" fg:w="13"/><text x="94.8941%" y="559.50"></text></g><g><title>rb_erase (38 samples, 0.08%)</title><rect x="94.6708%" y="549" width="0.0781%" height="15" fill="rgb(225,57,0)" fg:x="46081" fg:w="38"/><text x="94.9208%" y="559.50"></text></g><g><title>ep_remove (413 samples, 0.85%)</title><rect x="93.9538%" y="565" width="0.8485%" height="15" fill="rgb(232,154,2)" fg:x="45732" fg:w="413"/><text x="94.2038%" y="575.50"></text></g><g><title>remove_wait_queue (24 samples, 0.05%)</title><rect x="94.7530%" y="549" width="0.0493%" height="15" fill="rgb(241,212,25)" fg:x="46121" fg:w="24"/><text x="95.0030%" y="559.50"></text></g><g><title>_raw_spin_lock_irqsave (18 samples, 0.04%)</title><rect x="94.7653%" y="533" width="0.0370%" height="15" fill="rgb(226,69,20)" fg:x="46127" fg:w="18"/><text x="95.0153%" y="543.50"></text></g><g><title>fput (14 samples, 0.03%)</title><rect x="94.8023%" y="565" width="0.0288%" height="15" fill="rgb(247,184,54)" fg:x="46145" fg:w="14"/><text x="95.0523%" y="575.50"></text></g><g><title>mutex_lock (18 samples, 0.04%)</title><rect x="94.8310%" y="565" width="0.0370%" height="15" fill="rgb(210,145,0)" fg:x="46159" fg:w="18"/><text x="95.0810%" y="575.50"></text></g><g><title>__x64_sys_epoll_ctl (670 samples, 1.38%)</title><rect x="93.5100%" y="597" width="1.3765%" height="15" fill="rgb(253,82,12)" fg:x="45516" fg:w="670"/><text x="93.7600%" y="607.50"></text></g><g><title>do_epoll_ctl (647 samples, 1.33%)</title><rect x="93.5573%" y="581" width="1.3292%" height="15" fill="rgb(245,42,11)" fg:x="45539" fg:w="647"/><text x="93.8073%" y="591.50"></text></g><g><title>mutex_unlock (9 samples, 0.02%)</title><rect x="94.8680%" y="565" width="0.0185%" height="15" fill="rgb(219,147,32)" fg:x="46177" fg:w="9"/><text x="95.1180%" y="575.50"></text></g><g><title>exit_to_user_mode_prepare (10 samples, 0.02%)</title><rect x="94.9153%" y="581" width="0.0205%" height="15" fill="rgb(246,12,7)" fg:x="46200" fg:w="10"/><text x="95.1653%" y="591.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (792 samples, 1.63%)</title><rect x="93.3128%" y="629" width="1.6271%" height="15" fill="rgb(243,50,9)" fg:x="45420" fg:w="792"/><text x="93.5628%" y="639.50"></text></g><g><title>do_syscall_64 (709 samples, 1.46%)</title><rect x="93.4833%" y="613" width="1.4566%" height="15" fill="rgb(219,149,6)" fg:x="45503" fg:w="709"/><text x="93.7333%" y="623.50"></text></g><g><title>syscall_exit_to_user_mode (23 samples, 0.05%)</title><rect x="94.8927%" y="597" width="0.0473%" height="15" fill="rgb(241,51,42)" fg:x="46189" fg:w="23"/><text x="95.1427%" y="607.50"></text></g><g><title>mio::poll::Registry::deregister (995 samples, 2.04%)</title><rect x="93.2244%" y="725" width="2.0442%" height="15" fill="rgb(226,128,27)" fg:x="45377" fg:w="995"/><text x="93.4744%" y="735.50">m..</text></g><g><title>&lt;mio::net::tcp::stream::TcpStream as mio::event::source::Source&gt;::deregister (995 samples, 2.04%)</title><rect x="93.2244%" y="709" width="2.0442%" height="15" fill="rgb(244,144,4)" fg:x="45377" fg:w="995"/><text x="93.4744%" y="719.50">&lt;..</text></g><g><title>&lt;mio::io_source::IoSource&lt;T&gt; as mio::event::source::Source&gt;::deregister (995 samples, 2.04%)</title><rect x="93.2244%" y="693" width="2.0442%" height="15" fill="rgb(221,4,13)" fg:x="45377" fg:w="995"/><text x="93.4744%" y="703.50">&lt;..</text></g><g><title>mio::sys::unix::stateless_io_source::IoSourceState::deregister (995 samples, 2.04%)</title><rect x="93.2244%" y="677" width="2.0442%" height="15" fill="rgb(208,170,28)" fg:x="45377" fg:w="995"/><text x="93.4744%" y="687.50">m..</text></g><g><title>mio::sys::unix::selector::epoll::Selector::deregister (995 samples, 2.04%)</title><rect x="93.2244%" y="661" width="2.0442%" height="15" fill="rgb(226,131,13)" fg:x="45377" fg:w="995"/><text x="93.4744%" y="671.50">m..</text></g><g><title>__GI_epoll_ctl (993 samples, 2.04%)</title><rect x="93.2286%" y="645" width="2.0401%" height="15" fill="rgb(215,72,41)" fg:x="45379" fg:w="993"/><text x="93.4786%" y="655.50">_..</text></g><g><title>syscall_return_via_sysret (157 samples, 0.32%)</title><rect x="94.9461%" y="629" width="0.3225%" height="15" fill="rgb(243,108,20)" fg:x="46215" fg:w="157"/><text x="95.1961%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (21 samples, 0.04%)</title><rect x="95.2707%" y="677" width="0.0431%" height="15" fill="rgb(230,189,17)" fg:x="46373" fg:w="21"/><text x="95.5207%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (21 samples, 0.04%)</title><rect x="95.2707%" y="661" width="0.0431%" height="15" fill="rgb(220,50,17)" fg:x="46373" fg:w="21"/><text x="95.5207%" y="671.50"></text></g><g><title>__x64_sys_futex (9 samples, 0.02%)</title><rect x="95.3220%" y="533" width="0.0185%" height="15" fill="rgb(248,152,48)" fg:x="46398" fg:w="9"/><text x="95.5720%" y="543.50"></text></g><g><title>do_futex (9 samples, 0.02%)</title><rect x="95.3220%" y="517" width="0.0185%" height="15" fill="rgb(244,91,11)" fg:x="46398" fg:w="9"/><text x="95.5720%" y="527.50"></text></g><g><title>futex_wait (9 samples, 0.02%)</title><rect x="95.3220%" y="501" width="0.0185%" height="15" fill="rgb(220,157,5)" fg:x="46398" fg:w="9"/><text x="95.5720%" y="511.50"></text></g><g><title>futex_wait_queue (8 samples, 0.02%)</title><rect x="95.3241%" y="485" width="0.0164%" height="15" fill="rgb(253,137,8)" fg:x="46399" fg:w="8"/><text x="95.5741%" y="495.50"></text></g><g><title>schedule (8 samples, 0.02%)</title><rect x="95.3241%" y="469" width="0.0164%" height="15" fill="rgb(217,137,51)" fg:x="46399" fg:w="8"/><text x="95.5741%" y="479.50"></text></g><g><title>__schedule (8 samples, 0.02%)</title><rect x="95.3241%" y="453" width="0.0164%" height="15" fill="rgb(218,209,53)" fg:x="46399" fg:w="8"/><text x="95.5741%" y="463.50"></text></g><g><title>parking_lot_core::parking_lot::park (12 samples, 0.02%)</title><rect x="95.3200%" y="661" width="0.0247%" height="15" fill="rgb(249,137,25)" fg:x="46397" fg:w="12"/><text x="95.5700%" y="671.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (12 samples, 0.02%)</title><rect x="95.3200%" y="645" width="0.0247%" height="15" fill="rgb(239,155,26)" fg:x="46397" fg:w="12"/><text x="95.5700%" y="655.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (12 samples, 0.02%)</title><rect x="95.3200%" y="629" width="0.0247%" height="15" fill="rgb(227,85,46)" fg:x="46397" fg:w="12"/><text x="95.5700%" y="639.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (12 samples, 0.02%)</title><rect x="95.3200%" y="613" width="0.0247%" height="15" fill="rgb(251,107,43)" fg:x="46397" fg:w="12"/><text x="95.5700%" y="623.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (12 samples, 0.02%)</title><rect x="95.3200%" y="597" width="0.0247%" height="15" fill="rgb(234,170,33)" fg:x="46397" fg:w="12"/><text x="95.5700%" y="607.50"></text></g><g><title>syscall (12 samples, 0.02%)</title><rect x="95.3200%" y="581" width="0.0247%" height="15" fill="rgb(206,29,35)" fg:x="46397" fg:w="12"/><text x="95.5700%" y="591.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (12 samples, 0.02%)</title><rect x="95.3200%" y="565" width="0.0247%" height="15" fill="rgb(227,138,25)" fg:x="46397" fg:w="12"/><text x="95.5700%" y="575.50"></text></g><g><title>do_syscall_64 (11 samples, 0.02%)</title><rect x="95.3220%" y="549" width="0.0226%" height="15" fill="rgb(249,131,35)" fg:x="46398" fg:w="11"/><text x="95.5720%" y="559.50"></text></g><g><title>core::hint::spin_loop (7 samples, 0.01%)</title><rect x="95.3446%" y="629" width="0.0144%" height="15" fill="rgb(239,6,40)" fg:x="46409" fg:w="7"/><text x="95.5946%" y="639.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (7 samples, 0.01%)</title><rect x="95.3446%" y="613" width="0.0144%" height="15" fill="rgb(246,136,47)" fg:x="46409" fg:w="7"/><text x="95.5946%" y="623.50"></text></g><g><title>parking_lot_core::spinwait::cpu_relax (8 samples, 0.02%)</title><rect x="95.3446%" y="645" width="0.0164%" height="15" fill="rgb(253,58,26)" fg:x="46409" fg:w="8"/><text x="95.5946%" y="655.50"></text></g><g><title>__x64_sys_sched_yield (10 samples, 0.02%)</title><rect x="95.3672%" y="581" width="0.0205%" height="15" fill="rgb(237,141,10)" fg:x="46420" fg:w="10"/><text x="95.6172%" y="591.50"></text></g><g><title>schedule (6 samples, 0.01%)</title><rect x="95.3754%" y="565" width="0.0123%" height="15" fill="rgb(234,156,12)" fg:x="46424" fg:w="6"/><text x="95.6254%" y="575.50"></text></g><g><title>__schedule (6 samples, 0.01%)</title><rect x="95.3754%" y="549" width="0.0123%" height="15" fill="rgb(243,224,36)" fg:x="46424" fg:w="6"/><text x="95.6254%" y="559.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (14 samples, 0.03%)</title><rect x="95.3652%" y="613" width="0.0288%" height="15" fill="rgb(205,229,51)" fg:x="46419" fg:w="14"/><text x="95.6152%" y="623.50"></text></g><g><title>do_syscall_64 (13 samples, 0.03%)</title><rect x="95.3672%" y="597" width="0.0267%" height="15" fill="rgb(223,189,4)" fg:x="46420" fg:w="13"/><text x="95.6172%" y="607.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (62 samples, 0.13%)</title><rect x="95.2686%" y="725" width="0.1274%" height="15" fill="rgb(249,167,54)" fg:x="46372" fg:w="62"/><text x="95.5186%" y="735.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (62 samples, 0.13%)</title><rect x="95.2686%" y="709" width="0.1274%" height="15" fill="rgb(218,34,28)" fg:x="46372" fg:w="62"/><text x="95.5186%" y="719.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (62 samples, 0.13%)</title><rect x="95.2686%" y="693" width="0.1274%" height="15" fill="rgb(232,109,42)" fg:x="46372" fg:w="62"/><text x="95.5186%" y="703.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (40 samples, 0.08%)</title><rect x="95.3138%" y="677" width="0.0822%" height="15" fill="rgb(248,214,46)" fg:x="46394" fg:w="40"/><text x="95.5638%" y="687.50"></text></g><g><title>parking_lot_core::spinwait::SpinWait::spin (25 samples, 0.05%)</title><rect x="95.3446%" y="661" width="0.0514%" height="15" fill="rgb(244,216,40)" fg:x="46409" fg:w="25"/><text x="95.5946%" y="671.50"></text></g><g><title>parking_lot_core::thread_parker::imp::thread_yield (17 samples, 0.03%)</title><rect x="95.3611%" y="645" width="0.0349%" height="15" fill="rgb(231,226,31)" fg:x="46417" fg:w="17"/><text x="95.6111%" y="655.50"></text></g><g><title>__GI_sched_yield (17 samples, 0.03%)</title><rect x="95.3611%" y="629" width="0.0349%" height="15" fill="rgb(238,38,43)" fg:x="46417" fg:w="17"/><text x="95.6111%" y="639.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (13 samples, 0.03%)</title><rect x="95.3960%" y="709" width="0.0267%" height="15" fill="rgb(208,88,43)" fg:x="46434" fg:w="13"/><text x="95.6460%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (12 samples, 0.02%)</title><rect x="95.3980%" y="693" width="0.0247%" height="15" fill="rgb(205,136,37)" fg:x="46435" fg:w="12"/><text x="95.6480%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_add (12 samples, 0.02%)</title><rect x="95.3980%" y="677" width="0.0247%" height="15" fill="rgb(237,34,14)" fg:x="46435" fg:w="12"/><text x="95.6480%" y="687.50"></text></g><g><title>tokio::runtime::io::driver::Handle::deregister_source (1,091 samples, 2.24%)</title><rect x="93.1854%" y="741" width="2.2414%" height="15" fill="rgb(236,193,44)" fg:x="45358" fg:w="1091"/><text x="93.4354%" y="751.50">t..</text></g><g><title>tokio::runtime::io::registration_set::RegistrationSet::deregister (15 samples, 0.03%)</title><rect x="95.3960%" y="725" width="0.0308%" height="15" fill="rgb(231,48,10)" fg:x="46434" fg:w="15"/><text x="95.6460%" y="735.50"></text></g><g><title>tokio::runtime::driver::Handle::io (13 samples, 0.03%)</title><rect x="95.4453%" y="725" width="0.0267%" height="15" fill="rgb(213,141,34)" fg:x="46458" fg:w="13"/><text x="95.6953%" y="735.50"></text></g><g><title>tokio::runtime::driver::IoHandle::as_ref (12 samples, 0.02%)</title><rect x="95.4474%" y="709" width="0.0247%" height="15" fill="rgb(249,130,34)" fg:x="46459" fg:w="12"/><text x="95.6974%" y="719.50"></text></g><g><title>&lt;tokio::io::poll_evented::PollEvented&lt;E&gt; as core::ops::drop::Drop&gt;::drop (5,526 samples, 11.35%)</title><rect x="84.1212%" y="773" width="11.3529%" height="15" fill="rgb(219,42,41)" fg:x="40946" fg:w="5526"/><text x="84.3712%" y="783.50">&lt;tokio::io::poll_..</text></g><g><title>tokio::runtime::io::registration::Registration::deregister (1,114 samples, 2.29%)</title><rect x="93.1854%" y="757" width="2.2886%" height="15" fill="rgb(224,100,54)" fg:x="45358" fg:w="1114"/><text x="93.4354%" y="767.50">t..</text></g><g><title>tokio::runtime::io::registration::Registration::handle (23 samples, 0.05%)</title><rect x="95.4268%" y="741" width="0.0473%" height="15" fill="rgb(229,200,27)" fg:x="46449" fg:w="23"/><text x="95.6768%" y="751.50"></text></g><g><title>__GI___lll_lock_wake_private (5 samples, 0.01%)</title><rect x="95.4761%" y="757" width="0.0103%" height="15" fill="rgb(217,118,10)" fg:x="46473" fg:w="5"/><text x="95.7261%" y="767.50"></text></g><g><title>__GI___libc_free (20 samples, 0.04%)</title><rect x="95.4741%" y="773" width="0.0411%" height="15" fill="rgb(206,22,3)" fg:x="46472" fg:w="20"/><text x="95.7241%" y="783.50"></text></g><g><title>_int_free (14 samples, 0.03%)</title><rect x="95.4864%" y="757" width="0.0288%" height="15" fill="rgb(232,163,46)" fg:x="46478" fg:w="14"/><text x="95.7364%" y="767.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (5 samples, 0.01%)</title><rect x="95.5152%" y="773" width="0.0103%" height="15" fill="rgb(206,95,13)" fg:x="46492" fg:w="5"/><text x="95.7652%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::io::scheduled_io::ScheduledIo&gt; (5 samples, 0.01%)</title><rect x="95.5152%" y="757" width="0.0103%" height="15" fill="rgb(253,154,18)" fg:x="46492" fg:w="5"/><text x="95.7652%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::io::scheduled_io::Waiters&gt;&gt; (6 samples, 0.01%)</title><rect x="95.5316%" y="725" width="0.0123%" height="15" fill="rgb(219,32,23)" fg:x="46500" fg:w="6"/><text x="95.7816%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::io::scheduled_io::Waiters&gt;&gt; (6 samples, 0.01%)</title><rect x="95.5316%" y="709" width="0.0123%" height="15" fill="rgb(230,191,45)" fg:x="46500" fg:w="6"/><text x="95.7816%" y="719.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.01%)</title><rect x="95.5316%" y="693" width="0.0123%" height="15" fill="rgb(229,64,36)" fg:x="46500" fg:w="6"/><text x="95.7816%" y="703.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (6 samples, 0.01%)</title><rect x="95.5316%" y="677" width="0.0123%" height="15" fill="rgb(205,129,25)" fg:x="46500" fg:w="6"/><text x="95.7816%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (6 samples, 0.01%)</title><rect x="95.5316%" y="661" width="0.0123%" height="15" fill="rgb(254,112,7)" fg:x="46500" fg:w="6"/><text x="95.7816%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (6 samples, 0.01%)</title><rect x="95.5316%" y="645" width="0.0123%" height="15" fill="rgb(226,53,48)" fg:x="46500" fg:w="6"/><text x="95.7816%" y="655.50"></text></g><g><title>&lt;tokio::runtime::io::registration::Registration as core::ops::drop::Drop&gt;::drop (21 samples, 0.04%)</title><rect x="95.5275%" y="757" width="0.0431%" height="15" fill="rgb(214,153,38)" fg:x="46498" fg:w="21"/><text x="95.7775%" y="767.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::clear_wakers (19 samples, 0.04%)</title><rect x="95.5316%" y="741" width="0.0390%" height="15" fill="rgb(243,101,7)" fg:x="46500" fg:w="19"/><text x="95.7816%" y="751.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (13 samples, 0.03%)</title><rect x="95.5439%" y="725" width="0.0267%" height="15" fill="rgb(240,140,22)" fg:x="46506" fg:w="13"/><text x="95.7939%" y="735.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (12 samples, 0.02%)</title><rect x="95.5460%" y="709" width="0.0247%" height="15" fill="rgb(235,114,2)" fg:x="46507" fg:w="12"/><text x="95.7960%" y="719.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (12 samples, 0.02%)</title><rect x="95.5460%" y="693" width="0.0247%" height="15" fill="rgb(242,59,12)" fg:x="46507" fg:w="12"/><text x="95.7960%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (11 samples, 0.02%)</title><rect x="95.5480%" y="677" width="0.0226%" height="15" fill="rgb(252,134,9)" fg:x="46508" fg:w="11"/><text x="95.7980%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (11 samples, 0.02%)</title><rect x="95.5480%" y="661" width="0.0226%" height="15" fill="rgb(236,4,44)" fg:x="46508" fg:w="11"/><text x="95.7980%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::net::tcp::stream::TcpStream&gt; (5,592 samples, 11.49%)</title><rect x="84.1027%" y="805" width="11.4884%" height="15" fill="rgb(254,172,41)" fg:x="40937" fg:w="5592"/><text x="84.3527%" y="815.50">core::ptr::drop_i..</text></g><g><title>core::ptr::drop_in_place&lt;tokio::io::poll_evented::PollEvented&lt;mio::net::tcp::stream::TcpStream&gt;&gt; (5,592 samples, 11.49%)</title><rect x="84.1027%" y="789" width="11.4884%" height="15" fill="rgb(244,63,20)" fg:x="40937" fg:w="5592"/><text x="84.3527%" y="799.50">core::ptr::drop_i..</text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::io::registration::Registration&gt; (31 samples, 0.06%)</title><rect x="95.5275%" y="773" width="0.0637%" height="15" fill="rgb(250,73,31)" fg:x="46498" fg:w="31"/><text x="95.7775%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::scheduler::Handle&gt; (6 samples, 0.01%)</title><rect x="95.5788%" y="757" width="0.0123%" height="15" fill="rgb(241,38,36)" fg:x="46523" fg:w="6"/><text x="95.8288%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt; (6 samples, 0.01%)</title><rect x="95.5788%" y="741" width="0.0123%" height="15" fill="rgb(245,211,2)" fg:x="46523" fg:w="6"/><text x="95.8288%" y="751.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.01%)</title><rect x="95.5788%" y="725" width="0.0123%" height="15" fill="rgb(206,120,28)" fg:x="46523" fg:w="6"/><text x="95.8288%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (5 samples, 0.01%)</title><rect x="95.5809%" y="709" width="0.0103%" height="15" fill="rgb(211,59,34)" fg:x="46524" fg:w="5"/><text x="95.8309%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_sub (5 samples, 0.01%)</title><rect x="95.5809%" y="693" width="0.0103%" height="15" fill="rgb(233,168,5)" fg:x="46524" fg:w="5"/><text x="95.8309%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mpsc::Sender&lt;engine::domain::order::Order&gt;&gt; (17 samples, 0.03%)</title><rect x="95.5973%" y="789" width="0.0349%" height="15" fill="rgb(234,33,13)" fg:x="46532" fg:w="17"/><text x="95.8473%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mpmc::Sender&lt;engine::domain::order::Order&gt;&gt; (17 samples, 0.03%)</title><rect x="95.5973%" y="773" width="0.0349%" height="15" fill="rgb(231,150,26)" fg:x="46532" fg:w="17"/><text x="95.8473%" y="783.50"></text></g><g><title>&lt;std::sync::mpmc::Sender&lt;T&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.03%)</title><rect x="95.5973%" y="757" width="0.0349%" height="15" fill="rgb(217,191,4)" fg:x="46532" fg:w="17"/><text x="95.8473%" y="767.50"></text></g><g><title>std::sync::mpmc::counter::Sender&lt;C&gt;::release (17 samples, 0.03%)</title><rect x="95.5973%" y="741" width="0.0349%" height="15" fill="rgb(246,198,38)" fg:x="46532" fg:w="17"/><text x="95.8473%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (16 samples, 0.03%)</title><rect x="95.5994%" y="725" width="0.0329%" height="15" fill="rgb(245,64,37)" fg:x="46533" fg:w="16"/><text x="95.8494%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_sub (16 samples, 0.03%)</title><rect x="95.5994%" y="709" width="0.0329%" height="15" fill="rgb(250,30,36)" fg:x="46533" fg:w="16"/><text x="95.8494%" y="719.50"></text></g><g><title>__GI___clock_gettime (43 samples, 0.09%)</title><rect x="95.6425%" y="757" width="0.0883%" height="15" fill="rgb(217,86,53)" fg:x="46554" fg:w="43"/><text x="95.8925%" y="767.50"></text></g><g><title>__vdso_clock_gettime (21 samples, 0.04%)</title><rect x="95.6877%" y="741" width="0.0431%" height="15" fill="rgb(228,157,16)" fg:x="46576" fg:w="21"/><text x="95.9377%" y="751.50"></text></g><g><title>[[vdso]] (12 samples, 0.02%)</title><rect x="95.7062%" y="725" width="0.0247%" height="15" fill="rgb(217,59,31)" fg:x="46585" fg:w="12"/><text x="95.9562%" y="735.50"></text></g><g><title>std::sys::unix::time::Timespec::now (45 samples, 0.09%)</title><rect x="95.6405%" y="773" width="0.0924%" height="15" fill="rgb(237,138,41)" fg:x="46553" fg:w="45"/><text x="95.8905%" y="783.50"></text></g><g><title>std::time::SystemTime::duration_since (7 samples, 0.01%)</title><rect x="95.7329%" y="773" width="0.0144%" height="15" fill="rgb(227,91,49)" fg:x="46598" fg:w="7"/><text x="95.9829%" y="783.50"></text></g><g><title>engine::domain::order::Order::new (57 samples, 0.12%)</title><rect x="95.6364%" y="789" width="0.1171%" height="15" fill="rgb(247,21,44)" fg:x="46551" fg:w="57"/><text x="95.8864%" y="799.50"></text></g><g><title>rand::rng::Rng::gen (17 samples, 0.03%)</title><rect x="95.7555%" y="773" width="0.0349%" height="15" fill="rgb(219,210,51)" fg:x="46609" fg:w="17"/><text x="96.0055%" y="783.50"></text></g><g><title>rand::distributions::integer::&lt;impl rand::distributions::distribution::Distribution&lt;u32&gt; for rand::distributions::Standard&gt;::sample (17 samples, 0.03%)</title><rect x="95.7555%" y="757" width="0.0349%" height="15" fill="rgb(209,140,6)" fg:x="46609" fg:w="17"/><text x="96.0055%" y="767.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u32 (17 samples, 0.03%)</title><rect x="95.7555%" y="741" width="0.0349%" height="15" fill="rgb(221,188,24)" fg:x="46609" fg:w="17"/><text x="96.0055%" y="751.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u32 (17 samples, 0.03%)</title><rect x="95.7555%" y="725" width="0.0349%" height="15" fill="rgb(232,154,20)" fg:x="46609" fg:w="17"/><text x="96.0055%" y="735.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u32 (17 samples, 0.03%)</title><rect x="95.7555%" y="709" width="0.0349%" height="15" fill="rgb(244,137,50)" fg:x="46609" fg:w="17"/><text x="96.0055%" y="719.50"></text></g><g><title>rand::rngs::thread::THREAD_RNG_KEY::__getit (9 samples, 0.02%)</title><rect x="95.7904%" y="725" width="0.0185%" height="15" fill="rgb(225,185,43)" fg:x="46626" fg:w="9"/><text x="96.0404%" y="735.50"></text></g><g><title>std::sys::common::thread_local::fast_local::Key&lt;T&gt;::get (9 samples, 0.02%)</title><rect x="95.7904%" y="709" width="0.0185%" height="15" fill="rgb(213,205,38)" fg:x="46626" fg:w="9"/><text x="96.0404%" y="719.50"></text></g><g><title>std::sys::common::thread_local::lazy::LazyKeyInner&lt;T&gt;::get (6 samples, 0.01%)</title><rect x="95.7966%" y="693" width="0.0123%" height="15" fill="rgb(236,73,12)" fg:x="46629" fg:w="6"/><text x="96.0466%" y="703.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (6 samples, 0.01%)</title><rect x="95.7966%" y="677" width="0.0123%" height="15" fill="rgb(235,219,13)" fg:x="46629" fg:w="6"/><text x="96.0466%" y="687.50"></text></g><g><title>rand::random (45 samples, 0.09%)</title><rect x="95.7535%" y="789" width="0.0924%" height="15" fill="rgb(218,59,36)" fg:x="46608" fg:w="45"/><text x="96.0035%" y="799.50"></text></g><g><title>rand::rngs::thread::thread_rng (27 samples, 0.06%)</title><rect x="95.7904%" y="773" width="0.0555%" height="15" fill="rgb(205,110,39)" fg:x="46626" fg:w="27"/><text x="96.0404%" y="783.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (27 samples, 0.06%)</title><rect x="95.7904%" y="757" width="0.0555%" height="15" fill="rgb(218,206,42)" fg:x="46626" fg:w="27"/><text x="96.0404%" y="767.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (27 samples, 0.06%)</title><rect x="95.7904%" y="741" width="0.0555%" height="15" fill="rgb(248,125,24)" fg:x="46626" fg:w="27"/><text x="96.0404%" y="751.50"></text></g><g><title>rand::rngs::thread::thread_rng::{{closure}} (18 samples, 0.04%)</title><rect x="95.8089%" y="725" width="0.0370%" height="15" fill="rgb(242,28,27)" fg:x="46635" fg:w="18"/><text x="96.0589%" y="735.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::clone::Clone&gt;::clone (18 samples, 0.04%)</title><rect x="95.8089%" y="709" width="0.0370%" height="15" fill="rgb(216,228,15)" fg:x="46635" fg:w="18"/><text x="96.0589%" y="719.50"></text></g><g><title>alloc::rc::RcInnerPtr::inc_strong (18 samples, 0.04%)</title><rect x="95.8089%" y="693" width="0.0370%" height="15" fill="rgb(235,116,46)" fg:x="46635" fg:w="18"/><text x="96.0589%" y="703.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (17 samples, 0.03%)</title><rect x="95.8110%" y="677" width="0.0349%" height="15" fill="rgb(224,18,32)" fg:x="46636" fg:w="17"/><text x="96.0610%" y="687.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (17 samples, 0.03%)</title><rect x="95.8110%" y="661" width="0.0349%" height="15" fill="rgb(252,5,12)" fg:x="46636" fg:w="17"/><text x="96.0610%" y="671.50"></text></g><g><title>core::mem::replace (17 samples, 0.03%)</title><rect x="95.8110%" y="645" width="0.0349%" height="15" fill="rgb(251,36,5)" fg:x="46636" fg:w="17"/><text x="96.0610%" y="655.50"></text></g><g><title>core::ptr::write (17 samples, 0.03%)</title><rect x="95.8110%" y="629" width="0.0349%" height="15" fill="rgb(217,53,14)" fg:x="46636" fg:w="17"/><text x="96.0610%" y="639.50"></text></g><g><title>mprotect_fixup (9 samples, 0.02%)</title><rect x="95.8788%" y="501" width="0.0185%" height="15" fill="rgb(215,86,45)" fg:x="46669" fg:w="9"/><text x="96.1288%" y="511.50"></text></g><g><title>vma_merge (5 samples, 0.01%)</title><rect x="95.8870%" y="485" width="0.0103%" height="15" fill="rgb(242,169,11)" fg:x="46673" fg:w="5"/><text x="96.1370%" y="495.50"></text></g><g><title>__vma_adjust (5 samples, 0.01%)</title><rect x="95.8870%" y="469" width="0.0103%" height="15" fill="rgb(211,213,45)" fg:x="46673" fg:w="5"/><text x="96.1370%" y="479.50"></text></g><g><title>__GI___libc_malloc (15 samples, 0.03%)</title><rect x="95.8685%" y="645" width="0.0308%" height="15" fill="rgb(205,88,11)" fg:x="46664" fg:w="15"/><text x="96.1185%" y="655.50"></text></g><g><title>_int_malloc (14 samples, 0.03%)</title><rect x="95.8706%" y="629" width="0.0288%" height="15" fill="rgb(252,69,26)" fg:x="46665" fg:w="14"/><text x="96.1206%" y="639.50"></text></g><g><title>sysmalloc (11 samples, 0.02%)</title><rect x="95.8767%" y="613" width="0.0226%" height="15" fill="rgb(246,123,37)" fg:x="46668" fg:w="11"/><text x="96.1267%" y="623.50"></text></g><g><title>grow_heap (10 samples, 0.02%)</title><rect x="95.8788%" y="597" width="0.0205%" height="15" fill="rgb(212,205,5)" fg:x="46669" fg:w="10"/><text x="96.1288%" y="607.50"></text></g><g><title>__GI_mprotect (10 samples, 0.02%)</title><rect x="95.8788%" y="581" width="0.0205%" height="15" fill="rgb(253,148,0)" fg:x="46669" fg:w="10"/><text x="96.1288%" y="591.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (10 samples, 0.02%)</title><rect x="95.8788%" y="565" width="0.0205%" height="15" fill="rgb(239,22,4)" fg:x="46669" fg:w="10"/><text x="96.1288%" y="575.50"></text></g><g><title>do_syscall_64 (10 samples, 0.02%)</title><rect x="95.8788%" y="549" width="0.0205%" height="15" fill="rgb(226,26,53)" fg:x="46669" fg:w="10"/><text x="96.1288%" y="559.50"></text></g><g><title>__x64_sys_mprotect (10 samples, 0.02%)</title><rect x="95.8788%" y="533" width="0.0205%" height="15" fill="rgb(225,229,45)" fg:x="46669" fg:w="10"/><text x="96.1288%" y="543.50"></text></g><g><title>do_mprotect_pkey (10 samples, 0.02%)</title><rect x="95.8788%" y="517" width="0.0205%" height="15" fill="rgb(220,60,37)" fg:x="46669" fg:w="10"/><text x="96.1288%" y="527.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (17 samples, 0.03%)</title><rect x="95.8665%" y="725" width="0.0349%" height="15" fill="rgb(217,180,35)" fg:x="46663" fg:w="17"/><text x="96.1165%" y="735.50"></text></g><g><title>alloc::alloc::exchange_malloc (16 samples, 0.03%)</title><rect x="95.8685%" y="709" width="0.0329%" height="15" fill="rgb(229,7,53)" fg:x="46664" fg:w="16"/><text x="96.1185%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (16 samples, 0.03%)</title><rect x="95.8685%" y="693" width="0.0329%" height="15" fill="rgb(254,137,3)" fg:x="46664" fg:w="16"/><text x="96.1185%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (16 samples, 0.03%)</title><rect x="95.8685%" y="677" width="0.0329%" height="15" fill="rgb(215,140,41)" fg:x="46664" fg:w="16"/><text x="96.1185%" y="687.50"></text></g><g><title>alloc::alloc::alloc (16 samples, 0.03%)</title><rect x="95.8685%" y="661" width="0.0329%" height="15" fill="rgb(250,80,15)" fg:x="46664" fg:w="16"/><text x="96.1185%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (9 samples, 0.02%)</title><rect x="95.9014%" y="725" width="0.0185%" height="15" fill="rgb(252,191,6)" fg:x="46680" fg:w="9"/><text x="96.1514%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (9 samples, 0.02%)</title><rect x="95.9014%" y="709" width="0.0185%" height="15" fill="rgb(246,217,18)" fg:x="46680" fg:w="9"/><text x="96.1514%" y="719.50"></text></g><g><title>std::sync::mpmc::list::Channel&lt;T&gt;::start_send (34 samples, 0.07%)</title><rect x="95.8665%" y="741" width="0.0699%" height="15" fill="rgb(223,93,7)" fg:x="46663" fg:w="34"/><text x="96.1165%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (8 samples, 0.02%)</title><rect x="95.9199%" y="725" width="0.0164%" height="15" fill="rgb(225,55,52)" fg:x="46689" fg:w="8"/><text x="96.1699%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_load (8 samples, 0.02%)</title><rect x="95.9199%" y="709" width="0.0164%" height="15" fill="rgb(240,31,24)" fg:x="46689" fg:w="8"/><text x="96.1699%" y="719.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (5 samples, 0.01%)</title><rect x="95.9363%" y="725" width="0.0103%" height="15" fill="rgb(205,56,52)" fg:x="46697" fg:w="5"/><text x="96.1863%" y="735.50"></text></g><g><title>core::ptr::write (5 samples, 0.01%)</title><rect x="95.9363%" y="709" width="0.0103%" height="15" fill="rgb(246,146,12)" fg:x="46697" fg:w="5"/><text x="96.1863%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (9 samples, 0.02%)</title><rect x="95.9466%" y="725" width="0.0185%" height="15" fill="rgb(239,84,36)" fg:x="46702" fg:w="9"/><text x="96.1966%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_or (9 samples, 0.02%)</title><rect x="95.9466%" y="709" width="0.0185%" height="15" fill="rgb(207,41,40)" fg:x="46702" fg:w="9"/><text x="96.1966%" y="719.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (9 samples, 0.02%)</title><rect x="95.9651%" y="693" width="0.0185%" height="15" fill="rgb(241,179,25)" fg:x="46711" fg:w="9"/><text x="96.2151%" y="703.50"></text></g><g><title>std::sync::mpmc::waker::Waker::try_select::{{closure}} (9 samples, 0.02%)</title><rect x="95.9651%" y="677" width="0.0185%" height="15" fill="rgb(210,0,34)" fg:x="46711" fg:w="9"/><text x="96.2151%" y="687.50"></text></g><g><title>std::sync::mpmc::context::Context::unpark (9 samples, 0.02%)</title><rect x="95.9651%" y="661" width="0.0185%" height="15" fill="rgb(225,217,29)" fg:x="46711" fg:w="9"/><text x="96.2151%" y="671.50"></text></g><g><title>std::thread::Thread::unpark (9 samples, 0.02%)</title><rect x="95.9651%" y="645" width="0.0185%" height="15" fill="rgb(216,191,38)" fg:x="46711" fg:w="9"/><text x="96.2151%" y="655.50"></text></g><g><title>std::sys_common::thread_parking::futex::Parker::unpark (9 samples, 0.02%)</title><rect x="95.9651%" y="629" width="0.0185%" height="15" fill="rgb(232,140,52)" fg:x="46711" fg:w="9"/><text x="96.2151%" y="639.50"></text></g><g><title>std::sys::unix::futex::futex_wake (9 samples, 0.02%)</title><rect x="95.9651%" y="613" width="0.0185%" height="15" fill="rgb(223,158,51)" fg:x="46711" fg:w="9"/><text x="96.2151%" y="623.50"></text></g><g><title>syscall (9 samples, 0.02%)</title><rect x="95.9651%" y="597" width="0.0185%" height="15" fill="rgb(235,29,51)" fg:x="46711" fg:w="9"/><text x="96.2151%" y="607.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (9 samples, 0.02%)</title><rect x="95.9651%" y="581" width="0.0185%" height="15" fill="rgb(215,181,18)" fg:x="46711" fg:w="9"/><text x="96.2151%" y="591.50"></text></g><g><title>do_syscall_64 (9 samples, 0.02%)</title><rect x="95.9651%" y="565" width="0.0185%" height="15" fill="rgb(227,125,34)" fg:x="46711" fg:w="9"/><text x="96.2151%" y="575.50"></text></g><g><title>__x64_sys_futex (9 samples, 0.02%)</title><rect x="95.9651%" y="549" width="0.0185%" height="15" fill="rgb(230,197,49)" fg:x="46711" fg:w="9"/><text x="96.2151%" y="559.50"></text></g><g><title>do_futex (9 samples, 0.02%)</title><rect x="95.9651%" y="533" width="0.0185%" height="15" fill="rgb(239,141,16)" fg:x="46711" fg:w="9"/><text x="96.2151%" y="543.50"></text></g><g><title>futex_wake (9 samples, 0.02%)</title><rect x="95.9651%" y="517" width="0.0185%" height="15" fill="rgb(225,105,43)" fg:x="46711" fg:w="9"/><text x="96.2151%" y="527.50"></text></g><g><title>wake_up_q (9 samples, 0.02%)</title><rect x="95.9651%" y="501" width="0.0185%" height="15" fill="rgb(214,131,14)" fg:x="46711" fg:w="9"/><text x="96.2151%" y="511.50"></text></g><g><title>try_to_wake_up (9 samples, 0.02%)</title><rect x="95.9651%" y="485" width="0.0185%" height="15" fill="rgb(229,177,11)" fg:x="46711" fg:w="9"/><text x="96.2151%" y="495.50"></text></g><g><title>std::sync::mpsc::Sender&lt;T&gt;::send (69 samples, 0.14%)</title><rect x="95.8459%" y="789" width="0.1418%" height="15" fill="rgb(231,180,14)" fg:x="46653" fg:w="69"/><text x="96.0959%" y="799.50"></text></g><g><title>std::sync::mpmc::Sender&lt;T&gt;::send (69 samples, 0.14%)</title><rect x="95.8459%" y="773" width="0.1418%" height="15" fill="rgb(232,88,2)" fg:x="46653" fg:w="69"/><text x="96.0959%" y="783.50"></text></g><g><title>std::sync::mpmc::list::Channel&lt;T&gt;::send (67 samples, 0.14%)</title><rect x="95.8500%" y="757" width="0.1376%" height="15" fill="rgb(205,220,8)" fg:x="46655" fg:w="67"/><text x="96.1000%" y="767.50"></text></g><g><title>std::sync::mpmc::list::Channel&lt;T&gt;::write (25 samples, 0.05%)</title><rect x="95.9363%" y="741" width="0.0514%" height="15" fill="rgb(225,23,53)" fg:x="46697" fg:w="25"/><text x="96.1863%" y="751.50"></text></g><g><title>std::sync::mpmc::waker::SyncWaker::notify (11 samples, 0.02%)</title><rect x="95.9651%" y="725" width="0.0226%" height="15" fill="rgb(213,62,29)" fg:x="46711" fg:w="11"/><text x="96.2151%" y="735.50"></text></g><g><title>std::sync::mpmc::waker::Waker::try_select (11 samples, 0.02%)</title><rect x="95.9651%" y="709" width="0.0226%" height="15" fill="rgb(227,75,7)" fg:x="46711" fg:w="11"/><text x="96.2151%" y="719.50"></text></g><g><title>std::sys::unix::time::Timespec::now (11 samples, 0.02%)</title><rect x="95.9877%" y="789" width="0.0226%" height="15" fill="rgb(207,105,14)" fg:x="46722" fg:w="11"/><text x="96.2377%" y="799.50"></text></g><g><title>__GI___clock_gettime (11 samples, 0.02%)</title><rect x="95.9877%" y="773" width="0.0226%" height="15" fill="rgb(245,62,29)" fg:x="46722" fg:w="11"/><text x="96.2377%" y="783.50"></text></g><g><title>__vdso_clock_gettime (9 samples, 0.02%)</title><rect x="95.9918%" y="757" width="0.0185%" height="15" fill="rgb(236,202,4)" fg:x="46724" fg:w="9"/><text x="96.2418%" y="767.50"></text></g><g><title>[[vdso]] (5 samples, 0.01%)</title><rect x="96.0000%" y="741" width="0.0103%" height="15" fill="rgb(250,67,1)" fg:x="46728" fg:w="5"/><text x="96.2500%" y="751.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (5 samples, 0.01%)</title><rect x="96.0164%" y="773" width="0.0103%" height="15" fill="rgb(253,115,44)" fg:x="46736" fg:w="5"/><text x="96.2664%" y="783.50"></text></g><g><title>engine::engine::match_server::MatchServer::handle_new_order::{{closure}} (215 samples, 0.44%)</title><rect x="95.5912%" y="805" width="0.4417%" height="15" fill="rgb(251,139,18)" fg:x="46529" fg:w="215"/><text x="95.8412%" y="815.50"></text></g><g><title>std::time::SystemTime::duration_since (11 samples, 0.02%)</title><rect x="96.0103%" y="789" width="0.0226%" height="15" fill="rgb(218,22,32)" fg:x="46733" fg:w="11"/><text x="96.2603%" y="799.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (6 samples, 0.01%)</title><rect x="96.0596%" y="725" width="0.0123%" height="15" fill="rgb(243,53,5)" fg:x="46757" fg:w="6"/><text x="96.3096%" y="735.50"></text></g><g><title>&lt;common::message::_::&lt;impl serde::de::Deserialize for common::message::GatewayMessage&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (13 samples, 0.03%)</title><rect x="96.0801%" y="629" width="0.0267%" height="15" fill="rgb(227,56,16)" fg:x="46767" fg:w="13"/><text x="96.3301%" y="639.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (8 samples, 0.02%)</title><rect x="96.0904%" y="613" width="0.0164%" height="15" fill="rgb(245,53,0)" fg:x="46772" fg:w="8"/><text x="96.3404%" y="623.50"></text></g><g><title>core::ops::function::FnOnce::call_once (31 samples, 0.06%)</title><rect x="96.1664%" y="597" width="0.0637%" height="15" fill="rgb(216,170,35)" fg:x="46809" fg:w="31"/><text x="96.4164%" y="607.50"></text></g><g><title>serde_json::read::as_str (31 samples, 0.06%)</title><rect x="96.1664%" y="581" width="0.0637%" height="15" fill="rgb(211,200,8)" fg:x="46809" fg:w="31"/><text x="96.4164%" y="591.50"></text></g><g><title>core::str::converts::from_utf8 (28 samples, 0.06%)</title><rect x="96.1726%" y="565" width="0.0575%" height="15" fill="rgb(228,204,44)" fg:x="46812" fg:w="28"/><text x="96.4226%" y="575.50"></text></g><g><title>core::str::validations::run_utf8_validation (23 samples, 0.05%)</title><rect x="96.1828%" y="549" width="0.0473%" height="15" fill="rgb(214,121,17)" fg:x="46817" fg:w="23"/><text x="96.4328%" y="559.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (78 samples, 0.16%)</title><rect x="96.0740%" y="693" width="0.1602%" height="15" fill="rgb(233,64,38)" fg:x="46764" fg:w="78"/><text x="96.3240%" y="703.50"></text></g><g><title>&lt;common::message::_::&lt;impl serde::de::Deserialize for common::message::GatewayMessage&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (78 samples, 0.16%)</title><rect x="96.0740%" y="677" width="0.1602%" height="15" fill="rgb(253,54,19)" fg:x="46764" fg:w="78"/><text x="96.3240%" y="687.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_identifier (78 samples, 0.16%)</title><rect x="96.0740%" y="661" width="0.1602%" height="15" fill="rgb(253,94,18)" fg:x="46764" fg:w="78"/><text x="96.3240%" y="671.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_str (78 samples, 0.16%)</title><rect x="96.0740%" y="645" width="0.1602%" height="15" fill="rgb(227,57,52)" fg:x="46764" fg:w="78"/><text x="96.3240%" y="655.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (62 samples, 0.13%)</title><rect x="96.1068%" y="629" width="0.1274%" height="15" fill="rgb(230,228,50)" fg:x="46780" fg:w="62"/><text x="96.3568%" y="639.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (61 samples, 0.13%)</title><rect x="96.1089%" y="613" width="0.1253%" height="15" fill="rgb(217,205,27)" fg:x="46781" fg:w="61"/><text x="96.3589%" y="623.50"></text></g><g><title>serde::de::EnumAccess::variant (91 samples, 0.19%)</title><rect x="96.0719%" y="725" width="0.1870%" height="15" fill="rgb(252,71,50)" fg:x="46763" fg:w="91"/><text x="96.3219%" y="735.50"></text></g><g><title>&lt;serde_json::de::VariantAccess&lt;R&gt; as serde::de::EnumAccess&gt;::variant_seed (91 samples, 0.19%)</title><rect x="96.0719%" y="709" width="0.1870%" height="15" fill="rgb(209,86,4)" fg:x="46763" fg:w="91"/><text x="96.3219%" y="719.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_object_colon (12 samples, 0.02%)</title><rect x="96.2342%" y="693" width="0.0247%" height="15" fill="rgb(229,94,0)" fg:x="46842" fg:w="12"/><text x="96.4842%" y="703.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::eat_char (9 samples, 0.02%)</title><rect x="96.2404%" y="677" width="0.0185%" height="15" fill="rgb(252,223,21)" fg:x="46845" fg:w="9"/><text x="96.4904%" y="687.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::discard (9 samples, 0.02%)</title><rect x="96.2404%" y="661" width="0.0185%" height="15" fill="rgb(230,210,4)" fg:x="46845" fg:w="9"/><text x="96.4904%" y="671.50"></text></g><g><title>&lt;common::message::_::&lt;impl serde::de::Deserialize for common::message::NewOrder&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (10 samples, 0.02%)</title><rect x="96.3451%" y="533" width="0.0205%" height="15" fill="rgb(240,149,38)" fg:x="46896" fg:w="10"/><text x="96.5951%" y="543.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (10 samples, 0.02%)</title><rect x="96.3451%" y="517" width="0.0205%" height="15" fill="rgb(254,105,20)" fg:x="46896" fg:w="10"/><text x="96.5951%" y="527.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (10 samples, 0.02%)</title><rect x="96.3451%" y="501" width="0.0205%" height="15" fill="rgb(253,87,46)" fg:x="46896" fg:w="10"/><text x="96.5951%" y="511.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (10 samples, 0.02%)</title><rect x="96.3451%" y="485" width="0.0205%" height="15" fill="rgb(253,116,33)" fg:x="46896" fg:w="10"/><text x="96.5951%" y="495.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (10 samples, 0.02%)</title><rect x="96.3451%" y="469" width="0.0205%" height="15" fill="rgb(229,198,5)" fg:x="46896" fg:w="10"/><text x="96.5951%" y="479.50"></text></g><g><title>core::ops::function::FnOnce::call_once (26 samples, 0.05%)</title><rect x="96.4129%" y="501" width="0.0534%" height="15" fill="rgb(242,38,37)" fg:x="46929" fg:w="26"/><text x="96.6629%" y="511.50"></text></g><g><title>serde_json::read::as_str (26 samples, 0.05%)</title><rect x="96.4129%" y="485" width="0.0534%" height="15" fill="rgb(242,69,53)" fg:x="46929" fg:w="26"/><text x="96.6629%" y="495.50"></text></g><g><title>core::str::converts::from_utf8 (23 samples, 0.05%)</title><rect x="96.4191%" y="469" width="0.0473%" height="15" fill="rgb(249,80,16)" fg:x="46932" fg:w="23"/><text x="96.6691%" y="479.50"></text></g><g><title>core::str::validations::run_utf8_validation (15 samples, 0.03%)</title><rect x="96.4355%" y="453" width="0.0308%" height="15" fill="rgb(206,128,11)" fg:x="46940" fg:w="15"/><text x="96.6855%" y="463.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (50 samples, 0.10%)</title><rect x="96.3657%" y="533" width="0.1027%" height="15" fill="rgb(212,35,20)" fg:x="46906" fg:w="50"/><text x="96.6157%" y="543.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (48 samples, 0.10%)</title><rect x="96.3698%" y="517" width="0.0986%" height="15" fill="rgb(236,79,13)" fg:x="46908" fg:w="48"/><text x="96.6198%" y="527.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (70 samples, 0.14%)</title><rect x="96.3267%" y="597" width="0.1438%" height="15" fill="rgb(233,123,3)" fg:x="46887" fg:w="70"/><text x="96.5767%" y="607.50"></text></g><g><title>&lt;common::message::_::&lt;impl serde::de::Deserialize for common::message::NewOrder&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (70 samples, 0.14%)</title><rect x="96.3267%" y="581" width="0.1438%" height="15" fill="rgb(214,93,52)" fg:x="46887" fg:w="70"/><text x="96.5767%" y="591.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_identifier (70 samples, 0.14%)</title><rect x="96.3267%" y="565" width="0.1438%" height="15" fill="rgb(251,37,40)" fg:x="46887" fg:w="70"/><text x="96.5767%" y="575.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (70 samples, 0.14%)</title><rect x="96.3267%" y="549" width="0.1438%" height="15" fill="rgb(227,80,54)" fg:x="46887" fg:w="70"/><text x="96.5767%" y="559.50"></text></g><g><title>serde::de::MapAccess::next_key (78 samples, 0.16%)</title><rect x="96.3246%" y="629" width="0.1602%" height="15" fill="rgb(254,48,11)" fg:x="46886" fg:w="78"/><text x="96.5746%" y="639.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (78 samples, 0.16%)</title><rect x="96.3246%" y="613" width="0.1602%" height="15" fill="rgb(235,193,26)" fg:x="46886" fg:w="78"/><text x="96.5746%" y="623.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_whitespace (7 samples, 0.01%)</title><rect x="96.4705%" y="597" width="0.0144%" height="15" fill="rgb(229,99,21)" fg:x="46957" fg:w="7"/><text x="96.7205%" y="607.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::peek (5 samples, 0.01%)</title><rect x="96.4746%" y="581" width="0.0103%" height="15" fill="rgb(211,140,41)" fg:x="46959" fg:w="5"/><text x="96.7246%" y="591.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::peek (5 samples, 0.01%)</title><rect x="96.4746%" y="565" width="0.0103%" height="15" fill="rgb(240,227,30)" fg:x="46959" fg:w="5"/><text x="96.7246%" y="575.50"></text></g><g><title>core::ops::function::FnOnce::call_once (10 samples, 0.02%)</title><rect x="96.5239%" y="405" width="0.0205%" height="15" fill="rgb(215,224,45)" fg:x="46983" fg:w="10"/><text x="96.7739%" y="415.50"></text></g><g><title>serde_json::read::as_str (10 samples, 0.02%)</title><rect x="96.5239%" y="389" width="0.0205%" height="15" fill="rgb(206,123,31)" fg:x="46983" fg:w="10"/><text x="96.7739%" y="399.50"></text></g><g><title>core::str::converts::from_utf8 (6 samples, 0.01%)</title><rect x="96.5321%" y="373" width="0.0123%" height="15" fill="rgb(210,138,16)" fg:x="46987" fg:w="6"/><text x="96.7821%" y="383.50"></text></g><g><title>core::str::validations::run_utf8_validation (6 samples, 0.01%)</title><rect x="96.5321%" y="357" width="0.0123%" height="15" fill="rgb(228,57,28)" fg:x="46987" fg:w="6"/><text x="96.7821%" y="367.50"></text></g><g><title>&lt;common::message::_::&lt;impl serde::de::Deserialize for common::message::TradeAction&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_enum (29 samples, 0.06%)</title><rect x="96.4869%" y="549" width="0.0596%" height="15" fill="rgb(242,170,10)" fg:x="46965" fg:w="29"/><text x="96.7369%" y="559.50"></text></g><g><title>serde::de::EnumAccess::variant (25 samples, 0.05%)</title><rect x="96.4951%" y="533" width="0.0514%" height="15" fill="rgb(228,214,39)" fg:x="46969" fg:w="25"/><text x="96.7451%" y="543.50"></text></g><g><title>&lt;serde_json::de::UnitVariantAccess&lt;R&gt; as serde::de::EnumAccess&gt;::variant_seed (25 samples, 0.05%)</title><rect x="96.4951%" y="517" width="0.0514%" height="15" fill="rgb(218,179,33)" fg:x="46969" fg:w="25"/><text x="96.7451%" y="527.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (24 samples, 0.05%)</title><rect x="96.4972%" y="501" width="0.0493%" height="15" fill="rgb(235,193,39)" fg:x="46970" fg:w="24"/><text x="96.7472%" y="511.50"></text></g><g><title>&lt;common::message::_::&lt;impl serde::de::Deserialize for common::message::TradeAction&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (24 samples, 0.05%)</title><rect x="96.4972%" y="485" width="0.0493%" height="15" fill="rgb(219,221,36)" fg:x="46970" fg:w="24"/><text x="96.7472%" y="495.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_identifier (24 samples, 0.05%)</title><rect x="96.4972%" y="469" width="0.0493%" height="15" fill="rgb(248,218,19)" fg:x="46970" fg:w="24"/><text x="96.7472%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_str (24 samples, 0.05%)</title><rect x="96.4972%" y="453" width="0.0493%" height="15" fill="rgb(205,50,9)" fg:x="46970" fg:w="24"/><text x="96.7472%" y="463.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (18 samples, 0.04%)</title><rect x="96.5095%" y="437" width="0.0370%" height="15" fill="rgb(238,81,28)" fg:x="46976" fg:w="18"/><text x="96.7595%" y="447.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (18 samples, 0.04%)</title><rect x="96.5095%" y="421" width="0.0370%" height="15" fill="rgb(235,110,19)" fg:x="46976" fg:w="18"/><text x="96.7595%" y="431.50"></text></g><g><title>common::message::_::&lt;impl serde::de::Deserialize for common::message::TradeAction&gt;::deserialize (35 samples, 0.07%)</title><rect x="96.4848%" y="581" width="0.0719%" height="15" fill="rgb(214,7,14)" fg:x="46964" fg:w="35"/><text x="96.7348%" y="591.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_enum (34 samples, 0.07%)</title><rect x="96.4869%" y="565" width="0.0699%" height="15" fill="rgb(211,77,3)" fg:x="46965" fg:w="34"/><text x="96.7369%" y="575.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_whitespace (5 samples, 0.01%)</title><rect x="96.5465%" y="549" width="0.0103%" height="15" fill="rgb(229,5,9)" fg:x="46994" fg:w="5"/><text x="96.7965%" y="559.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_number (9 samples, 0.02%)</title><rect x="96.6163%" y="517" width="0.0185%" height="15" fill="rgb(225,90,11)" fg:x="47028" fg:w="9"/><text x="96.8663%" y="527.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_integer (35 samples, 0.07%)</title><rect x="96.5752%" y="533" width="0.0719%" height="15" fill="rgb(242,56,8)" fg:x="47008" fg:w="35"/><text x="96.8252%" y="543.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::peek_or_null (6 samples, 0.01%)</title><rect x="96.6348%" y="517" width="0.0123%" height="15" fill="rgb(249,212,39)" fg:x="47037" fg:w="6"/><text x="96.8848%" y="527.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::peek (6 samples, 0.01%)</title><rect x="96.6348%" y="501" width="0.0123%" height="15" fill="rgb(236,90,9)" fg:x="47037" fg:w="6"/><text x="96.8848%" y="511.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::peek (6 samples, 0.01%)</title><rect x="96.6348%" y="485" width="0.0123%" height="15" fill="rgb(206,88,35)" fg:x="47037" fg:w="6"/><text x="96.8848%" y="495.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (83 samples, 0.17%)</title><rect x="96.4848%" y="597" width="0.1705%" height="15" fill="rgb(205,126,30)" fg:x="46964" fg:w="83"/><text x="96.7348%" y="607.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (48 samples, 0.10%)</title><rect x="96.5568%" y="581" width="0.0986%" height="15" fill="rgb(230,176,12)" fg:x="46999" fg:w="48"/><text x="96.8068%" y="591.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_u32 (48 samples, 0.10%)</title><rect x="96.5568%" y="565" width="0.0986%" height="15" fill="rgb(243,19,9)" fg:x="46999" fg:w="48"/><text x="96.8068%" y="575.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::deserialize_number (48 samples, 0.10%)</title><rect x="96.5568%" y="549" width="0.0986%" height="15" fill="rgb(245,171,17)" fg:x="46999" fg:w="48"/><text x="96.8068%" y="559.50"></text></g><g><title>&lt;common::message::_::&lt;impl serde::de::Deserialize for common::message::NewOrder&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (180 samples, 0.37%)</title><rect x="96.2897%" y="645" width="0.3698%" height="15" fill="rgb(227,52,21)" fg:x="46869" fg:w="180"/><text x="96.5397%" y="655.50"></text></g><g><title>serde::de::MapAccess::next_value (85 samples, 0.17%)</title><rect x="96.4848%" y="629" width="0.1746%" height="15" fill="rgb(238,69,14)" fg:x="46964" fg:w="85"/><text x="96.7348%" y="639.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (85 samples, 0.17%)</title><rect x="96.4848%" y="613" width="0.1746%" height="15" fill="rgb(241,156,39)" fg:x="46964" fg:w="85"/><text x="96.7348%" y="623.50"></text></g><g><title>&lt;common::message::_::&lt;impl serde::de::Deserialize for common::message::GatewayMessage&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_enum (300 samples, 0.62%)</title><rect x="96.0555%" y="741" width="0.6163%" height="15" fill="rgb(212,227,28)" fg:x="46755" fg:w="300"/><text x="96.3055%" y="751.50"></text></g><g><title>serde::de::VariantAccess::newtype_variant (201 samples, 0.41%)</title><rect x="96.2589%" y="725" width="0.4129%" height="15" fill="rgb(209,118,27)" fg:x="46854" fg:w="201"/><text x="96.5089%" y="735.50"></text></g><g><title>&lt;serde_json::de::VariantAccess&lt;R&gt; as serde::de::VariantAccess&gt;::newtype_variant_seed (201 samples, 0.41%)</title><rect x="96.2589%" y="709" width="0.4129%" height="15" fill="rgb(226,102,5)" fg:x="46854" fg:w="201"/><text x="96.5089%" y="719.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (201 samples, 0.41%)</title><rect x="96.2589%" y="693" width="0.4129%" height="15" fill="rgb(223,34,3)" fg:x="46854" fg:w="201"/><text x="96.5089%" y="703.50"></text></g><g><title>common::message::_::&lt;impl serde::de::Deserialize for common::message::NewOrder&gt;::deserialize (201 samples, 0.41%)</title><rect x="96.2589%" y="677" width="0.4129%" height="15" fill="rgb(221,81,38)" fg:x="46854" fg:w="201"/><text x="96.5089%" y="687.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (193 samples, 0.40%)</title><rect x="96.2753%" y="661" width="0.3965%" height="15" fill="rgb(236,219,28)" fg:x="46862" fg:w="193"/><text x="96.5253%" y="671.50"></text></g><g><title>common::message::_::&lt;impl serde::de::Deserialize for common::message::GatewayMessage&gt;::deserialize (313 samples, 0.64%)</title><rect x="96.0390%" y="773" width="0.6430%" height="15" fill="rgb(213,200,14)" fg:x="46747" fg:w="313"/><text x="96.2890%" y="783.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_enum (312 samples, 0.64%)</title><rect x="96.0411%" y="757" width="0.6410%" height="15" fill="rgb(240,33,19)" fg:x="46748" fg:w="312"/><text x="96.2911%" y="767.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_whitespace (5 samples, 0.01%)</title><rect x="96.6718%" y="741" width="0.0103%" height="15" fill="rgb(233,113,27)" fg:x="47055" fg:w="5"/><text x="96.9218%" y="751.50"></text></g><g><title>serde_json::de::from_slice (319 samples, 0.66%)</title><rect x="96.0329%" y="805" width="0.6554%" height="15" fill="rgb(220,221,18)" fg:x="46744" fg:w="319"/><text x="96.2829%" y="815.50"></text></g><g><title>serde_json::de::from_trait (319 samples, 0.66%)</title><rect x="96.0329%" y="789" width="0.6554%" height="15" fill="rgb(238,92,8)" fg:x="46744" fg:w="319"/><text x="96.2829%" y="799.50"></text></g><g><title>__GI___libc_malloc (32 samples, 0.07%)</title><rect x="96.6944%" y="677" width="0.0657%" height="15" fill="rgb(222,164,16)" fg:x="47066" fg:w="32"/><text x="96.9444%" y="687.50"></text></g><g><title>tcache_get (11 samples, 0.02%)</title><rect x="96.7375%" y="661" width="0.0226%" height="15" fill="rgb(241,119,3)" fg:x="47087" fg:w="11"/><text x="96.9875%" y="671.50"></text></g><g><title>__rdl_alloc (11 samples, 0.02%)</title><rect x="96.7601%" y="677" width="0.0226%" height="15" fill="rgb(241,44,8)" fg:x="47098" fg:w="11"/><text x="97.0101%" y="687.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (5 samples, 0.01%)</title><rect x="96.7725%" y="661" width="0.0103%" height="15" fill="rgb(230,36,40)" fg:x="47104" fg:w="5"/><text x="97.0225%" y="671.50"></text></g><g><title>__rust_alloc (9 samples, 0.02%)</title><rect x="96.7827%" y="677" width="0.0185%" height="15" fill="rgb(243,16,36)" fg:x="47109" fg:w="9"/><text x="97.0327%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (54 samples, 0.11%)</title><rect x="96.6944%" y="789" width="0.1109%" height="15" fill="rgb(231,4,26)" fg:x="47066" fg:w="54"/><text x="96.9444%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (54 samples, 0.11%)</title><rect x="96.6944%" y="773" width="0.1109%" height="15" fill="rgb(240,9,31)" fg:x="47066" fg:w="54"/><text x="96.9444%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (54 samples, 0.11%)</title><rect x="96.6944%" y="757" width="0.1109%" height="15" fill="rgb(207,173,15)" fg:x="47066" fg:w="54"/><text x="96.9444%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (54 samples, 0.11%)</title><rect x="96.6944%" y="741" width="0.1109%" height="15" fill="rgb(224,192,53)" fg:x="47066" fg:w="54"/><text x="96.9444%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (54 samples, 0.11%)</title><rect x="96.6944%" y="725" width="0.1109%" height="15" fill="rgb(223,67,28)" fg:x="47066" fg:w="54"/><text x="96.9444%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (54 samples, 0.11%)</title><rect x="96.6944%" y="709" width="0.1109%" height="15" fill="rgb(211,20,47)" fg:x="47066" fg:w="54"/><text x="96.9444%" y="719.50"></text></g><g><title>alloc::alloc::alloc (54 samples, 0.11%)</title><rect x="96.6944%" y="693" width="0.1109%" height="15" fill="rgb(240,228,2)" fg:x="47066" fg:w="54"/><text x="96.9444%" y="703.50"></text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (55 samples, 0.11%)</title><rect x="96.8444%" y="741" width="0.1130%" height="15" fill="rgb(248,151,12)" fg:x="47139" fg:w="55"/><text x="97.0944%" y="751.50"></text></g><g><title>serde_json::ser::format_escaped_str (48 samples, 0.10%)</title><rect x="96.8588%" y="725" width="0.0986%" height="15" fill="rgb(244,8,39)" fg:x="47146" fg:w="48"/><text x="97.1088%" y="735.50"></text></g><g><title>serde_json::ser::format_escaped_str_contents (44 samples, 0.09%)</title><rect x="96.8670%" y="709" width="0.0904%" height="15" fill="rgb(222,26,8)" fg:x="47150" fg:w="44"/><text x="97.1170%" y="719.50"></text></g><g><title>serde_json::ser::Formatter::write_string_fragment (19 samples, 0.04%)</title><rect x="96.9183%" y="693" width="0.0390%" height="15" fill="rgb(213,106,44)" fg:x="47175" fg:w="19"/><text x="97.1683%" y="703.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (19 samples, 0.04%)</title><rect x="96.9183%" y="677" width="0.0390%" height="15" fill="rgb(214,129,20)" fg:x="47175" fg:w="19"/><text x="97.1683%" y="687.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (19 samples, 0.04%)</title><rect x="96.9183%" y="661" width="0.0390%" height="15" fill="rgb(212,32,13)" fg:x="47175" fg:w="19"/><text x="97.1683%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (19 samples, 0.04%)</title><rect x="96.9183%" y="645" width="0.0390%" height="15" fill="rgb(208,168,33)" fg:x="47175" fg:w="19"/><text x="97.1683%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (19 samples, 0.04%)</title><rect x="96.9183%" y="629" width="0.0390%" height="15" fill="rgb(231,207,8)" fg:x="47175" fg:w="19"/><text x="97.1683%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (19 samples, 0.04%)</title><rect x="96.9183%" y="613" width="0.0390%" height="15" fill="rgb(235,219,23)" fg:x="47175" fg:w="19"/><text x="97.1683%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (18 samples, 0.04%)</title><rect x="96.9204%" y="597" width="0.0370%" height="15" fill="rgb(226,216,26)" fg:x="47176" fg:w="18"/><text x="97.1704%" y="607.50"></text></g><g><title>__memcpy_avx_unaligned_erms (17 samples, 0.03%)</title><rect x="96.9224%" y="581" width="0.0349%" height="15" fill="rgb(239,137,16)" fg:x="47177" fg:w="17"/><text x="97.1724%" y="591.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::end (10 samples, 0.02%)</title><rect x="96.9676%" y="725" width="0.0205%" height="15" fill="rgb(207,12,36)" fg:x="47199" fg:w="10"/><text x="97.2176%" y="735.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::end (8 samples, 0.02%)</title><rect x="96.9718%" y="709" width="0.0164%" height="15" fill="rgb(210,214,24)" fg:x="47201" fg:w="8"/><text x="97.2218%" y="719.50"></text></g><g><title>serde_json::ser::Formatter::end_object (8 samples, 0.02%)</title><rect x="96.9718%" y="693" width="0.0164%" height="15" fill="rgb(206,56,30)" fg:x="47201" fg:w="8"/><text x="97.2218%" y="703.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (8 samples, 0.02%)</title><rect x="96.9718%" y="677" width="0.0164%" height="15" fill="rgb(228,143,26)" fg:x="47201" fg:w="8"/><text x="97.2218%" y="687.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (8 samples, 0.02%)</title><rect x="96.9718%" y="661" width="0.0164%" height="15" fill="rgb(216,218,46)" fg:x="47201" fg:w="8"/><text x="97.2218%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (7 samples, 0.01%)</title><rect x="96.9738%" y="645" width="0.0144%" height="15" fill="rgb(206,6,19)" fg:x="47202" fg:w="7"/><text x="97.2238%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (7 samples, 0.01%)</title><rect x="96.9738%" y="629" width="0.0144%" height="15" fill="rgb(239,177,51)" fg:x="47202" fg:w="7"/><text x="97.2238%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (7 samples, 0.01%)</title><rect x="96.9738%" y="613" width="0.0144%" height="15" fill="rgb(216,55,25)" fg:x="47202" fg:w="7"/><text x="97.2238%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6 samples, 0.01%)</title><rect x="96.9759%" y="597" width="0.0123%" height="15" fill="rgb(231,163,29)" fg:x="47203" fg:w="6"/><text x="97.2259%" y="607.50"></text></g><g><title>__memcpy_avx_unaligned_erms (6 samples, 0.01%)</title><rect x="96.9759%" y="581" width="0.0123%" height="15" fill="rgb(232,149,50)" fg:x="47203" fg:w="6"/><text x="97.2259%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.01%)</title><rect x="97.0457%" y="597" width="0.0144%" height="15" fill="rgb(223,142,48)" fg:x="47237" fg:w="7"/><text x="97.2957%" y="607.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.01%)</title><rect x="97.0457%" y="581" width="0.0144%" height="15" fill="rgb(245,83,23)" fg:x="47237" fg:w="7"/><text x="97.2957%" y="591.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (6 samples, 0.01%)</title><rect x="97.0478%" y="565" width="0.0123%" height="15" fill="rgb(224,63,2)" fg:x="47238" fg:w="6"/><text x="97.2978%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (37 samples, 0.08%)</title><rect x="97.0724%" y="501" width="0.0760%" height="15" fill="rgb(218,65,53)" fg:x="47250" fg:w="37"/><text x="97.3224%" y="511.50"></text></g><g><title>__memcpy_avx_unaligned_erms (32 samples, 0.07%)</title><rect x="97.0827%" y="485" width="0.0657%" height="15" fill="rgb(221,84,29)" fg:x="47255" fg:w="32"/><text x="97.3327%" y="495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for str&gt;::serialize (65 samples, 0.13%)</title><rect x="97.0169%" y="677" width="0.1335%" height="15" fill="rgb(234,0,32)" fg:x="47223" fg:w="65"/><text x="97.2669%" y="687.50"></text></g><g><title>&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (65 samples, 0.13%)</title><rect x="97.0169%" y="661" width="0.1335%" height="15" fill="rgb(206,20,16)" fg:x="47223" fg:w="65"/><text x="97.2669%" y="671.50"></text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (65 samples, 0.13%)</title><rect x="97.0169%" y="645" width="0.1335%" height="15" fill="rgb(244,172,18)" fg:x="47223" fg:w="65"/><text x="97.2669%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (64 samples, 0.13%)</title><rect x="97.0190%" y="629" width="0.1315%" height="15" fill="rgb(254,133,1)" fg:x="47224" fg:w="64"/><text x="97.2690%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str_contents (58 samples, 0.12%)</title><rect x="97.0313%" y="613" width="0.1192%" height="15" fill="rgb(222,206,41)" fg:x="47230" fg:w="58"/><text x="97.2813%" y="623.50"></text></g><g><title>serde_json::ser::Formatter::write_string_fragment (44 samples, 0.09%)</title><rect x="97.0601%" y="597" width="0.0904%" height="15" fill="rgb(212,3,42)" fg:x="47244" fg:w="44"/><text x="97.3101%" y="607.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (44 samples, 0.09%)</title><rect x="97.0601%" y="581" width="0.0904%" height="15" fill="rgb(241,11,4)" fg:x="47244" fg:w="44"/><text x="97.3101%" y="591.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (44 samples, 0.09%)</title><rect x="97.0601%" y="565" width="0.0904%" height="15" fill="rgb(205,19,26)" fg:x="47244" fg:w="44"/><text x="97.3101%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (44 samples, 0.09%)</title><rect x="97.0601%" y="549" width="0.0904%" height="15" fill="rgb(210,179,32)" fg:x="47244" fg:w="44"/><text x="97.3101%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (44 samples, 0.09%)</title><rect x="97.0601%" y="533" width="0.0904%" height="15" fill="rgb(227,116,49)" fg:x="47244" fg:w="44"/><text x="97.3101%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (44 samples, 0.09%)</title><rect x="97.0601%" y="517" width="0.0904%" height="15" fill="rgb(211,146,6)" fg:x="47244" fg:w="44"/><text x="97.3101%" y="527.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (77 samples, 0.16%)</title><rect x="97.0128%" y="693" width="0.1582%" height="15" fill="rgb(219,44,39)" fg:x="47221" fg:w="77"/><text x="97.2628%" y="703.50"></text></g><g><title>serde_json::ser::Formatter::begin_object_key (10 samples, 0.02%)</title><rect x="97.1505%" y="677" width="0.0205%" height="15" fill="rgb(234,128,11)" fg:x="47288" fg:w="10"/><text x="97.4005%" y="687.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (10 samples, 0.02%)</title><rect x="97.1505%" y="661" width="0.0205%" height="15" fill="rgb(220,183,53)" fg:x="47288" fg:w="10"/><text x="97.4005%" y="671.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (10 samples, 0.02%)</title><rect x="97.1505%" y="645" width="0.0205%" height="15" fill="rgb(213,219,32)" fg:x="47288" fg:w="10"/><text x="97.4005%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (10 samples, 0.02%)</title><rect x="97.1505%" y="629" width="0.0205%" height="15" fill="rgb(232,156,16)" fg:x="47288" fg:w="10"/><text x="97.4005%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (10 samples, 0.02%)</title><rect x="97.1505%" y="613" width="0.0205%" height="15" fill="rgb(246,135,34)" fg:x="47288" fg:w="10"/><text x="97.4005%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (10 samples, 0.02%)</title><rect x="97.1505%" y="597" width="0.0205%" height="15" fill="rgb(241,99,0)" fg:x="47288" fg:w="10"/><text x="97.4005%" y="607.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6 samples, 0.01%)</title><rect x="97.1587%" y="581" width="0.0123%" height="15" fill="rgb(222,103,45)" fg:x="47292" fg:w="6"/><text x="97.4087%" y="591.50"></text></g><g><title>common::message::_::&lt;impl serde::ser::Serialize for common::message::TradeAction&gt;::serialize (13 samples, 0.03%)</title><rect x="97.1710%" y="677" width="0.0267%" height="15" fill="rgb(212,57,4)" fg:x="47298" fg:w="13"/><text x="97.4210%" y="687.50"></text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_unit_variant (13 samples, 0.03%)</title><rect x="97.1710%" y="661" width="0.0267%" height="15" fill="rgb(215,68,47)" fg:x="47298" fg:w="13"/><text x="97.4210%" y="671.50"></text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (13 samples, 0.03%)</title><rect x="97.1710%" y="645" width="0.0267%" height="15" fill="rgb(230,84,2)" fg:x="47298" fg:w="13"/><text x="97.4210%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (11 samples, 0.02%)</title><rect x="97.1751%" y="629" width="0.0226%" height="15" fill="rgb(220,102,14)" fg:x="47300" fg:w="11"/><text x="97.4251%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str_contents (10 samples, 0.02%)</title><rect x="97.1772%" y="613" width="0.0205%" height="15" fill="rgb(240,10,32)" fg:x="47301" fg:w="10"/><text x="97.4272%" y="623.50"></text></g><g><title>serde_json::ser::Formatter::write_string_fragment (7 samples, 0.01%)</title><rect x="97.1834%" y="597" width="0.0144%" height="15" fill="rgb(215,47,27)" fg:x="47304" fg:w="7"/><text x="97.4334%" y="607.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (7 samples, 0.01%)</title><rect x="97.1834%" y="581" width="0.0144%" height="15" fill="rgb(233,188,43)" fg:x="47304" fg:w="7"/><text x="97.4334%" y="591.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (7 samples, 0.01%)</title><rect x="97.1834%" y="565" width="0.0144%" height="15" fill="rgb(253,190,1)" fg:x="47304" fg:w="7"/><text x="97.4334%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (7 samples, 0.01%)</title><rect x="97.1834%" y="549" width="0.0144%" height="15" fill="rgb(206,114,52)" fg:x="47304" fg:w="7"/><text x="97.4334%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (7 samples, 0.01%)</title><rect x="97.1834%" y="533" width="0.0144%" height="15" fill="rgb(233,120,37)" fg:x="47304" fg:w="7"/><text x="97.4334%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (7 samples, 0.01%)</title><rect x="97.1834%" y="517" width="0.0144%" height="15" fill="rgb(214,52,39)" fg:x="47304" fg:w="7"/><text x="97.4334%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (20 samples, 0.04%)</title><rect x="97.2265%" y="597" width="0.0411%" height="15" fill="rgb(223,80,29)" fg:x="47325" fg:w="20"/><text x="97.4765%" y="607.50"></text></g><g><title>itoa::Buffer::format (35 samples, 0.07%)</title><rect x="97.1977%" y="629" width="0.0719%" height="15" fill="rgb(230,101,40)" fg:x="47311" fg:w="35"/><text x="97.4477%" y="639.50"></text></g><g><title>itoa::&lt;impl itoa::private::Sealed for u32&gt;::write (35 samples, 0.07%)</title><rect x="97.1977%" y="613" width="0.0719%" height="15" fill="rgb(219,211,8)" fg:x="47311" fg:w="35"/><text x="97.4477%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (23 samples, 0.05%)</title><rect x="97.2758%" y="549" width="0.0473%" height="15" fill="rgb(252,126,28)" fg:x="47349" fg:w="23"/><text x="97.5258%" y="559.50"></text></g><g><title>__memcpy_avx_unaligned_erms (22 samples, 0.05%)</title><rect x="97.2779%" y="533" width="0.0452%" height="15" fill="rgb(215,56,38)" fg:x="47350" fg:w="22"/><text x="97.5279%" y="543.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u32&gt;::serialize (62 samples, 0.13%)</title><rect x="97.1977%" y="677" width="0.1274%" height="15" fill="rgb(249,55,44)" fg:x="47311" fg:w="62"/><text x="97.4477%" y="687.50"></text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_u32 (62 samples, 0.13%)</title><rect x="97.1977%" y="661" width="0.1274%" height="15" fill="rgb(220,221,32)" fg:x="47311" fg:w="62"/><text x="97.4477%" y="671.50"></text></g><g><title>serde_json::ser::Formatter::write_u32 (62 samples, 0.13%)</title><rect x="97.1977%" y="645" width="0.1274%" height="15" fill="rgb(212,216,41)" fg:x="47311" fg:w="62"/><text x="97.4477%" y="655.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (27 samples, 0.06%)</title><rect x="97.2696%" y="629" width="0.0555%" height="15" fill="rgb(228,213,43)" fg:x="47346" fg:w="27"/><text x="97.5196%" y="639.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (27 samples, 0.06%)</title><rect x="97.2696%" y="613" width="0.0555%" height="15" fill="rgb(211,31,26)" fg:x="47346" fg:w="27"/><text x="97.5196%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (27 samples, 0.06%)</title><rect x="97.2696%" y="597" width="0.0555%" height="15" fill="rgb(229,202,19)" fg:x="47346" fg:w="27"/><text x="97.5196%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (27 samples, 0.06%)</title><rect x="97.2696%" y="581" width="0.0555%" height="15" fill="rgb(229,105,46)" fg:x="47346" fg:w="27"/><text x="97.5196%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (27 samples, 0.06%)</title><rect x="97.2696%" y="565" width="0.0555%" height="15" fill="rgb(235,108,1)" fg:x="47346" fg:w="27"/><text x="97.5196%" y="575.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (179 samples, 0.37%)</title><rect x="96.9882%" y="725" width="0.3677%" height="15" fill="rgb(245,111,35)" fg:x="47209" fg:w="179"/><text x="97.2382%" y="735.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (167 samples, 0.34%)</title><rect x="97.0128%" y="709" width="0.3431%" height="15" fill="rgb(219,185,31)" fg:x="47221" fg:w="167"/><text x="97.2628%" y="719.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (90 samples, 0.18%)</title><rect x="97.1710%" y="693" width="0.1849%" height="15" fill="rgb(214,4,43)" fg:x="47298" fg:w="90"/><text x="97.4210%" y="703.50"></text></g><g><title>serde_json::ser::Formatter::begin_object_value (15 samples, 0.03%)</title><rect x="97.3251%" y="677" width="0.0308%" height="15" fill="rgb(235,227,40)" fg:x="47373" fg:w="15"/><text x="97.5751%" y="687.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (15 samples, 0.03%)</title><rect x="97.3251%" y="661" width="0.0308%" height="15" fill="rgb(230,88,30)" fg:x="47373" fg:w="15"/><text x="97.5751%" y="671.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (15 samples, 0.03%)</title><rect x="97.3251%" y="645" width="0.0308%" height="15" fill="rgb(216,217,1)" fg:x="47373" fg:w="15"/><text x="97.5751%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (15 samples, 0.03%)</title><rect x="97.3251%" y="629" width="0.0308%" height="15" fill="rgb(248,139,50)" fg:x="47373" fg:w="15"/><text x="97.5751%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (15 samples, 0.03%)</title><rect x="97.3251%" y="613" width="0.0308%" height="15" fill="rgb(233,1,21)" fg:x="47373" fg:w="15"/><text x="97.5751%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (15 samples, 0.03%)</title><rect x="97.3251%" y="597" width="0.0308%" height="15" fill="rgb(215,183,12)" fg:x="47373" fg:w="15"/><text x="97.5751%" y="607.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (11 samples, 0.02%)</title><rect x="97.3333%" y="581" width="0.0226%" height="15" fill="rgb(229,104,42)" fg:x="47377" fg:w="11"/><text x="97.5833%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for str&gt;::serialize (19 samples, 0.04%)</title><rect x="97.3600%" y="693" width="0.0390%" height="15" fill="rgb(243,34,48)" fg:x="47390" fg:w="19"/><text x="97.6100%" y="703.50"></text></g><g><title>&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (19 samples, 0.04%)</title><rect x="97.3600%" y="677" width="0.0390%" height="15" fill="rgb(239,11,44)" fg:x="47390" fg:w="19"/><text x="97.6100%" y="687.50"></text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (19 samples, 0.04%)</title><rect x="97.3600%" y="661" width="0.0390%" height="15" fill="rgb(231,98,35)" fg:x="47390" fg:w="19"/><text x="97.6100%" y="671.50"></text></g><g><title>serde_json::ser::format_escaped_str (19 samples, 0.04%)</title><rect x="97.3600%" y="645" width="0.0390%" height="15" fill="rgb(233,28,25)" fg:x="47390" fg:w="19"/><text x="97.6100%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str_contents (16 samples, 0.03%)</title><rect x="97.3662%" y="629" width="0.0329%" height="15" fill="rgb(234,123,11)" fg:x="47393" fg:w="16"/><text x="97.6162%" y="639.50"></text></g><g><title>serde_json::ser::Formatter::write_string_fragment (8 samples, 0.02%)</title><rect x="97.3826%" y="613" width="0.0164%" height="15" fill="rgb(220,69,3)" fg:x="47401" fg:w="8"/><text x="97.6326%" y="623.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (8 samples, 0.02%)</title><rect x="97.3826%" y="597" width="0.0164%" height="15" fill="rgb(214,64,36)" fg:x="47401" fg:w="8"/><text x="97.6326%" y="607.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (8 samples, 0.02%)</title><rect x="97.3826%" y="581" width="0.0164%" height="15" fill="rgb(211,138,32)" fg:x="47401" fg:w="8"/><text x="97.6326%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (8 samples, 0.02%)</title><rect x="97.3826%" y="565" width="0.0164%" height="15" fill="rgb(213,118,47)" fg:x="47401" fg:w="8"/><text x="97.6326%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (8 samples, 0.02%)</title><rect x="97.3826%" y="549" width="0.0164%" height="15" fill="rgb(243,124,49)" fg:x="47401" fg:w="8"/><text x="97.6326%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (8 samples, 0.02%)</title><rect x="97.3826%" y="533" width="0.0164%" height="15" fill="rgb(221,30,28)" fg:x="47401" fg:w="8"/><text x="97.6326%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 0.01%)</title><rect x="97.3888%" y="517" width="0.0103%" height="15" fill="rgb(246,37,13)" fg:x="47404" fg:w="5"/><text x="97.6388%" y="527.50"></text></g><g><title>__memcpy_avx_unaligned_erms (5 samples, 0.01%)</title><rect x="97.3888%" y="501" width="0.0103%" height="15" fill="rgb(249,66,14)" fg:x="47404" fg:w="5"/><text x="97.6388%" y="511.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (24 samples, 0.05%)</title><rect x="97.3559%" y="709" width="0.0493%" height="15" fill="rgb(213,166,5)" fg:x="47388" fg:w="24"/><text x="97.6059%" y="719.50"></text></g><g><title>itoa::&lt;impl itoa::private::Sealed for u64&gt;::write (15 samples, 0.03%)</title><rect x="97.4052%" y="613" width="0.0308%" height="15" fill="rgb(221,66,24)" fg:x="47412" fg:w="15"/><text x="97.6552%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6 samples, 0.01%)</title><rect x="97.4237%" y="597" width="0.0123%" height="15" fill="rgb(210,132,17)" fg:x="47421" fg:w="6"/><text x="97.6737%" y="607.50"></text></g><g><title>itoa::Buffer::format (20 samples, 0.04%)</title><rect x="97.4052%" y="645" width="0.0411%" height="15" fill="rgb(243,202,5)" fg:x="47412" fg:w="20"/><text x="97.6552%" y="655.50"></text></g><g><title>itoa::&lt;impl itoa::private::Sealed for u128&gt;::write (20 samples, 0.04%)</title><rect x="97.4052%" y="629" width="0.0411%" height="15" fill="rgb(233,70,48)" fg:x="47412" fg:w="20"/><text x="97.6552%" y="639.50"></text></g><g><title>itoa::udiv128::udivmod_1e19 (5 samples, 0.01%)</title><rect x="97.4361%" y="613" width="0.0103%" height="15" fill="rgb(238,41,26)" fg:x="47427" fg:w="5"/><text x="97.6861%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (8 samples, 0.02%)</title><rect x="97.4504%" y="565" width="0.0164%" height="15" fill="rgb(241,19,31)" fg:x="47434" fg:w="8"/><text x="97.7004%" y="575.50"></text></g><g><title>__memcpy_avx_unaligned_erms (8 samples, 0.02%)</title><rect x="97.4504%" y="549" width="0.0164%" height="15" fill="rgb(214,76,10)" fg:x="47434" fg:w="8"/><text x="97.7004%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u128&gt;::serialize (31 samples, 0.06%)</title><rect x="97.4052%" y="693" width="0.0637%" height="15" fill="rgb(254,202,22)" fg:x="47412" fg:w="31"/><text x="97.6552%" y="703.50"></text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_u128 (31 samples, 0.06%)</title><rect x="97.4052%" y="677" width="0.0637%" height="15" fill="rgb(214,72,24)" fg:x="47412" fg:w="31"/><text x="97.6552%" y="687.50"></text></g><g><title>serde_json::ser::Formatter::write_u128 (31 samples, 0.06%)</title><rect x="97.4052%" y="661" width="0.0637%" height="15" fill="rgb(221,92,46)" fg:x="47412" fg:w="31"/><text x="97.6552%" y="671.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (11 samples, 0.02%)</title><rect x="97.4463%" y="645" width="0.0226%" height="15" fill="rgb(246,13,50)" fg:x="47432" fg:w="11"/><text x="97.6963%" y="655.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (11 samples, 0.02%)</title><rect x="97.4463%" y="629" width="0.0226%" height="15" fill="rgb(240,165,38)" fg:x="47432" fg:w="11"/><text x="97.6963%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (11 samples, 0.02%)</title><rect x="97.4463%" y="613" width="0.0226%" height="15" fill="rgb(241,24,51)" fg:x="47432" fg:w="11"/><text x="97.6963%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (11 samples, 0.02%)</title><rect x="97.4463%" y="597" width="0.0226%" height="15" fill="rgb(227,51,44)" fg:x="47432" fg:w="11"/><text x="97.6963%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (11 samples, 0.02%)</title><rect x="97.4463%" y="581" width="0.0226%" height="15" fill="rgb(231,121,3)" fg:x="47432" fg:w="11"/><text x="97.6963%" y="591.50"></text></g><g><title>common::message::_::&lt;impl serde::ser::Serialize for common::message::NewOrderAck&gt;::serialize (252 samples, 0.52%)</title><rect x="96.9574%" y="741" width="0.5177%" height="15" fill="rgb(245,3,41)" fg:x="47194" fg:w="252"/><text x="97.2074%" y="751.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (58 samples, 0.12%)</title><rect x="97.3559%" y="725" width="0.1192%" height="15" fill="rgb(214,13,26)" fg:x="47388" fg:w="58"/><text x="97.6059%" y="735.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (34 samples, 0.07%)</title><rect x="97.4052%" y="709" width="0.0699%" height="15" fill="rgb(252,75,11)" fg:x="47412" fg:w="34"/><text x="97.6552%" y="719.50"></text></g><g><title>serde_json::ser::Formatter::begin_object (5 samples, 0.01%)</title><rect x="97.4751%" y="741" width="0.0103%" height="15" fill="rgb(218,226,17)" fg:x="47446" fg:w="5"/><text x="97.7251%" y="751.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (5 samples, 0.01%)</title><rect x="97.4751%" y="725" width="0.0103%" height="15" fill="rgb(248,89,38)" fg:x="47446" fg:w="5"/><text x="97.7251%" y="735.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (5 samples, 0.01%)</title><rect x="97.4751%" y="709" width="0.0103%" height="15" fill="rgb(237,73,46)" fg:x="47446" fg:w="5"/><text x="97.7251%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (5 samples, 0.01%)</title><rect x="97.4751%" y="693" width="0.0103%" height="15" fill="rgb(242,78,33)" fg:x="47446" fg:w="5"/><text x="97.7251%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (5 samples, 0.01%)</title><rect x="97.4751%" y="677" width="0.0103%" height="15" fill="rgb(235,60,3)" fg:x="47446" fg:w="5"/><text x="97.7251%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (5 samples, 0.01%)</title><rect x="97.4751%" y="661" width="0.0103%" height="15" fill="rgb(216,172,19)" fg:x="47446" fg:w="5"/><text x="97.7251%" y="671.50"></text></g><g><title>serde_json::ser::to_vec (390 samples, 0.80%)</title><rect x="96.6882%" y="805" width="0.8012%" height="15" fill="rgb(227,6,42)" fg:x="47063" fg:w="390"/><text x="96.9382%" y="815.50"></text></g><g><title>serde_json::ser::to_writer (333 samples, 0.68%)</title><rect x="96.8053%" y="789" width="0.6841%" height="15" fill="rgb(223,207,42)" fg:x="47120" fg:w="333"/><text x="97.0553%" y="799.50"></text></g><g><title>common::message::_::&lt;impl serde::ser::Serialize for common::message::GatewayMessage&gt;::serialize (333 samples, 0.68%)</title><rect x="96.8053%" y="773" width="0.6841%" height="15" fill="rgb(246,138,30)" fg:x="47120" fg:w="333"/><text x="97.0553%" y="783.50"></text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (317 samples, 0.65%)</title><rect x="96.8382%" y="757" width="0.6513%" height="15" fill="rgb(251,199,47)" fg:x="47136" fg:w="317"/><text x="97.0882%" y="767.50"></text></g><g><title>engine::engine::match_server::MatchServer::run::{{closure}}::{{closure}} (14,238 samples, 29.25%)</title><rect x="68.2404%" y="837" width="29.2512%" height="15" fill="rgb(228,218,44)" fg:x="33216" fg:w="14238"/><text x="68.4904%" y="847.50">engine::engine::match_server::MatchServer::run:..</text></g><g><title>engine::engine::match_server::MatchServer::handler::{{closure}} (14,197 samples, 29.17%)</title><rect x="68.3246%" y="821" width="29.1669%" height="15" fill="rgb(220,68,6)" fg:x="33257" fg:w="14197"/><text x="68.5746%" y="831.50">engine::engine::match_server::MatchServer::hand..</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (14,266 samples, 29.31%)</title><rect x="68.2013%" y="869" width="29.3087%" height="15" fill="rgb(240,60,26)" fg:x="33197" fg:w="14266"/><text x="68.4513%" y="879.50">tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::w..</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}} (14,266 samples, 29.31%)</title><rect x="68.2013%" y="853" width="29.3087%" height="15" fill="rgb(211,200,19)" fg:x="33197" fg:w="14266"/><text x="68.4513%" y="863.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{..</text></g><g><title>tokio::runtime::task::core::TaskIdGuard::enter (9 samples, 0.02%)</title><rect x="97.4915%" y="837" width="0.0185%" height="15" fill="rgb(242,145,30)" fg:x="47454" fg:w="9"/><text x="97.7415%" y="847.50"></text></g><g><title>tokio::runtime::context::set_current_task_id (7 samples, 0.01%)</title><rect x="97.4956%" y="821" width="0.0144%" height="15" fill="rgb(225,64,13)" fg:x="47456" fg:w="7"/><text x="97.7456%" y="831.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (7 samples, 0.01%)</title><rect x="97.4956%" y="805" width="0.0144%" height="15" fill="rgb(218,103,35)" fg:x="47456" fg:w="7"/><text x="97.7456%" y="815.50"></text></g><g><title>tokio::runtime::context::set_current_task_id::{{closure}} (5 samples, 0.01%)</title><rect x="97.4997%" y="789" width="0.0103%" height="15" fill="rgb(216,93,46)" fg:x="47458" fg:w="5"/><text x="97.7497%" y="799.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (5 samples, 0.01%)</title><rect x="97.4997%" y="773" width="0.0103%" height="15" fill="rgb(225,159,27)" fg:x="47458" fg:w="5"/><text x="97.7497%" y="783.50"></text></g><g><title>core::mem::replace (5 samples, 0.01%)</title><rect x="97.4997%" y="757" width="0.0103%" height="15" fill="rgb(225,204,11)" fg:x="47458" fg:w="5"/><text x="97.7497%" y="767.50"></text></g><g><title>__memcpy_avx_unaligned_erms (70 samples, 0.14%)</title><rect x="97.5162%" y="837" width="0.1438%" height="15" fill="rgb(205,56,4)" fg:x="47466" fg:w="70"/><text x="97.7662%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::TaskIdGuard&gt; (6 samples, 0.01%)</title><rect x="97.6600%" y="837" width="0.0123%" height="15" fill="rgb(206,6,35)" fg:x="47536" fg:w="6"/><text x="97.9100%" y="847.50"></text></g><g><title>&lt;tokio::runtime::task::core::TaskIdGuard as core::ops::drop::Drop&gt;::drop (6 samples, 0.01%)</title><rect x="97.6600%" y="821" width="0.0123%" height="15" fill="rgb(247,73,52)" fg:x="47536" fg:w="6"/><text x="97.9100%" y="831.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (14,370 samples, 29.52%)</title><rect x="68.1911%" y="885" width="29.5223%" height="15" fill="rgb(246,97,4)" fg:x="33192" fg:w="14370"/><text x="68.4411%" y="895.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::drop_future_or_output (99 samples, 0.20%)</title><rect x="97.5100%" y="869" width="0.2034%" height="15" fill="rgb(212,37,15)" fg:x="47463" fg:w="99"/><text x="97.7600%" y="879.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage (99 samples, 0.20%)</title><rect x="97.5100%" y="853" width="0.2034%" height="15" fill="rgb(208,130,40)" fg:x="47463" fg:w="99"/><text x="97.7600%" y="863.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (20 samples, 0.04%)</title><rect x="97.6723%" y="837" width="0.0411%" height="15" fill="rgb(236,55,29)" fg:x="47542" fg:w="20"/><text x="97.9223%" y="847.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage::{{closure}} (20 samples, 0.04%)</title><rect x="97.6723%" y="821" width="0.0411%" height="15" fill="rgb(209,156,45)" fg:x="47542" fg:w="20"/><text x="97.9223%" y="831.50"></text></g><g><title>__memcpy_avx_unaligned_erms (20 samples, 0.04%)</title><rect x="97.6723%" y="805" width="0.0411%" height="15" fill="rgb(249,107,4)" fg:x="47542" fg:w="20"/><text x="97.9223%" y="815.50"></text></g><g><title>__memcpy_avx_unaligned_erms (21 samples, 0.04%)</title><rect x="97.7216%" y="853" width="0.0431%" height="15" fill="rgb(227,7,13)" fg:x="47566" fg:w="21"/><text x="97.9716%" y="863.50"></text></g><g><title>__memcpy_avx_unaligned_erms (24 samples, 0.05%)</title><rect x="97.7689%" y="821" width="0.0493%" height="15" fill="rgb(250,129,14)" fg:x="47589" fg:w="24"/><text x="98.0189%" y="831.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (25 samples, 0.05%)</title><rect x="97.7689%" y="853" width="0.0514%" height="15" fill="rgb(229,92,13)" fg:x="47589" fg:w="25"/><text x="98.0189%" y="863.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage::{{closure}} (25 samples, 0.05%)</title><rect x="97.7689%" y="837" width="0.0514%" height="15" fill="rgb(245,98,39)" fg:x="47589" fg:w="25"/><text x="98.0189%" y="847.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (14,426 samples, 29.64%)</title><rect x="68.1911%" y="917" width="29.6374%" height="15" fill="rgb(234,135,48)" fg:x="33192" fg:w="14426"/><text x="68.4411%" y="927.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; a..</text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (14,426 samples, 29.64%)</title><rect x="68.1911%" y="901" width="29.6374%" height="15" fill="rgb(230,98,28)" fg:x="33192" fg:w="14426"/><text x="68.4411%" y="911.50">tokio::runtime::task::harness::poll_future::{{cl..</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::store_output (56 samples, 0.12%)</title><rect x="97.7134%" y="885" width="0.1150%" height="15" fill="rgb(223,121,0)" fg:x="47562" fg:w="56"/><text x="97.9634%" y="895.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage (55 samples, 0.11%)</title><rect x="97.7155%" y="869" width="0.1130%" height="15" fill="rgb(234,173,33)" fg:x="47563" fg:w="55"/><text x="97.9655%" y="879.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (14,449 samples, 29.68%)</title><rect x="68.1459%" y="981" width="29.6846%" height="15" fill="rgb(245,47,8)" fg:x="33170" fg:w="14449"/><text x="68.3959%" y="991.50">tokio::runtime::task::harness::poll_future</text></g><g><title>std::panic::catch_unwind (14,436 samples, 29.66%)</title><rect x="68.1726%" y="965" width="29.6579%" height="15" fill="rgb(205,17,20)" fg:x="33183" fg:w="14436"/><text x="68.4226%" y="975.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (14,436 samples, 29.66%)</title><rect x="68.1726%" y="949" width="29.6579%" height="15" fill="rgb(232,151,16)" fg:x="33183" fg:w="14436"/><text x="68.4226%" y="959.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (14,427 samples, 29.64%)</title><rect x="68.1911%" y="933" width="29.6394%" height="15" fill="rgb(208,30,32)" fg:x="33192" fg:w="14427"/><text x="68.4411%" y="943.50">std::panicking::try::do_call</text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (5 samples, 0.01%)</title><rect x="97.8305%" y="949" width="0.0103%" height="15" fill="rgb(254,26,3)" fg:x="47619" fg:w="5"/><text x="98.0805%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (5 samples, 0.01%)</title><rect x="97.8305%" y="933" width="0.0103%" height="15" fill="rgb(240,177,30)" fg:x="47619" fg:w="5"/><text x="98.0805%" y="943.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_idle (6 samples, 0.01%)</title><rect x="97.8305%" y="981" width="0.0123%" height="15" fill="rgb(248,76,44)" fg:x="47619" fg:w="6"/><text x="98.0805%" y="991.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (6 samples, 0.01%)</title><rect x="97.8305%" y="965" width="0.0123%" height="15" fill="rgb(241,186,54)" fg:x="47619" fg:w="6"/><text x="98.0805%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (7 samples, 0.01%)</title><rect x="97.8490%" y="949" width="0.0144%" height="15" fill="rgb(249,171,29)" fg:x="47628" fg:w="7"/><text x="98.0990%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (7 samples, 0.01%)</title><rect x="97.8490%" y="933" width="0.0144%" height="15" fill="rgb(237,151,44)" fg:x="47628" fg:w="7"/><text x="98.0990%" y="943.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_running (12 samples, 0.02%)</title><rect x="97.8428%" y="981" width="0.0247%" height="15" fill="rgb(228,174,30)" fg:x="47625" fg:w="12"/><text x="98.0928%" y="991.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (10 samples, 0.02%)</title><rect x="97.8469%" y="965" width="0.0205%" height="15" fill="rgb(252,14,37)" fg:x="47627" fg:w="10"/><text x="98.0969%" y="975.50"></text></g><g><title>tokio::runtime::coop::budget (14,897 samples, 30.61%)</title><rect x="67.2645%" y="1109" width="30.6050%" height="15" fill="rgb(207,111,40)" fg:x="32741" fg:w="14897"/><text x="67.5145%" y="1119.50">tokio::runtime::coop::budget</text></g><g><title>tokio::runtime::coop::with_budget (14,897 samples, 30.61%)</title><rect x="67.2645%" y="1093" width="30.6050%" height="15" fill="rgb(248,171,54)" fg:x="32741" fg:w="14897"/><text x="67.5145%" y="1103.50">tokio::runtime::coop::with_budget</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task::{{closure}} (14,886 samples, 30.58%)</title><rect x="67.2871%" y="1077" width="30.5824%" height="15" fill="rgb(211,127,2)" fg:x="32752" fg:w="14886"/><text x="67.5371%" y="1087.50">tokio::runtime::scheduler::multi_thread::worker::..</text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (14,840 samples, 30.49%)</title><rect x="67.3816%" y="1061" width="30.4879%" height="15" fill="rgb(236,87,47)" fg:x="32798" fg:w="14840"/><text x="67.6316%" y="1071.50">tokio::runtime::task::LocalNotified&lt;S&gt;::run</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (14,840 samples, 30.49%)</title><rect x="67.3816%" y="1045" width="30.4879%" height="15" fill="rgb(223,190,45)" fg:x="32798" fg:w="14840"/><text x="67.6316%" y="1055.50">tokio::runtime::task::raw::RawTask::poll</text></g><g><title>tokio::runtime::task::raw::poll (14,824 samples, 30.46%)</title><rect x="67.4145%" y="1029" width="30.4551%" height="15" fill="rgb(215,5,16)" fg:x="32814" fg:w="14824"/><text x="67.6645%" y="1039.50">tokio::runtime::task::raw::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (14,823 samples, 30.45%)</title><rect x="67.4165%" y="1013" width="30.4530%" height="15" fill="rgb(252,82,33)" fg:x="32815" fg:w="14823"/><text x="67.6665%" y="1023.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (14,483 samples, 29.75%)</title><rect x="68.1150%" y="997" width="29.7545%" height="15" fill="rgb(247,213,44)" fg:x="33155" fg:w="14483"/><text x="68.3650%" y="1007.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::pol..</text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::start_poll (5 samples, 0.01%)</title><rect x="97.8695%" y="1109" width="0.0103%" height="15" fill="rgb(205,196,44)" fg:x="47638" fg:w="5"/><text x="98.1195%" y="1119.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::transition_worker_from_searching (5 samples, 0.01%)</title><rect x="97.8798%" y="1077" width="0.0103%" height="15" fill="rgb(237,96,54)" fg:x="47643" fg:w="5"/><text x="98.1298%" y="1087.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::State::dec_num_searching (5 samples, 0.01%)</title><rect x="97.8798%" y="1061" width="0.0103%" height="15" fill="rgb(230,113,34)" fg:x="47643" fg:w="5"/><text x="98.1298%" y="1071.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (5 samples, 0.01%)</title><rect x="97.8798%" y="1045" width="0.0103%" height="15" fill="rgb(221,224,12)" fg:x="47643" fg:w="5"/><text x="98.1298%" y="1055.50"></text></g><g><title>core::sync::atomic::atomic_sub (5 samples, 0.01%)</title><rect x="97.8798%" y="1029" width="0.0103%" height="15" fill="rgb(219,112,44)" fg:x="47643" fg:w="5"/><text x="98.1298%" y="1039.50"></text></g><g><title>entry_SYSCALL_64 (5 samples, 0.01%)</title><rect x="97.9004%" y="997" width="0.0103%" height="15" fill="rgb(210,31,13)" fg:x="47653" fg:w="5"/><text x="98.1504%" y="1007.50"></text></g><g><title>futex_hash (5 samples, 0.01%)</title><rect x="98.0216%" y="917" width="0.0103%" height="15" fill="rgb(230,25,16)" fg:x="47712" fg:w="5"/><text x="98.2716%" y="927.50"></text></g><g><title>futex_wake_mark (11 samples, 0.02%)</title><rect x="98.0318%" y="917" width="0.0226%" height="15" fill="rgb(246,108,53)" fg:x="47717" fg:w="11"/><text x="98.2818%" y="927.50"></text></g><g><title>__futex_unqueue (7 samples, 0.01%)</title><rect x="98.0401%" y="901" width="0.0144%" height="15" fill="rgb(241,172,50)" fg:x="47721" fg:w="7"/><text x="98.2901%" y="911.50"></text></g><g><title>_raw_spin_lock (9 samples, 0.02%)</title><rect x="98.1017%" y="885" width="0.0185%" height="15" fill="rgb(235,141,10)" fg:x="47751" fg:w="9"/><text x="98.3517%" y="895.50"></text></g><g><title>native_queued_spin_lock_slowpath (8 samples, 0.02%)</title><rect x="98.1037%" y="869" width="0.0164%" height="15" fill="rgb(220,174,43)" fg:x="47752" fg:w="8"/><text x="98.3537%" y="879.50"></text></g><g><title>_raw_spin_unlock_irqrestore (7 samples, 0.01%)</title><rect x="98.1284%" y="885" width="0.0144%" height="15" fill="rgb(215,181,40)" fg:x="47764" fg:w="7"/><text x="98.3784%" y="895.50"></text></g><g><title>available_idle_cpu (10 samples, 0.02%)</title><rect x="98.2681%" y="869" width="0.0205%" height="15" fill="rgb(230,97,2)" fg:x="47832" fg:w="10"/><text x="98.5181%" y="879.50"></text></g><g><title>select_task_rq_fair (81 samples, 0.17%)</title><rect x="98.1428%" y="885" width="0.1664%" height="15" fill="rgb(211,25,27)" fg:x="47771" fg:w="81"/><text x="98.3928%" y="895.50"></text></g><g><title>task_h_load (8 samples, 0.02%)</title><rect x="98.2928%" y="869" width="0.0164%" height="15" fill="rgb(230,87,26)" fg:x="47844" fg:w="8"/><text x="98.5428%" y="879.50"></text></g><g><title>set_task_cpu (15 samples, 0.03%)</title><rect x="98.3092%" y="885" width="0.0308%" height="15" fill="rgb(227,160,17)" fg:x="47852" fg:w="15"/><text x="98.5592%" y="895.50"></text></g><g><title>migrate_task_rq_fair (9 samples, 0.02%)</title><rect x="98.3215%" y="869" width="0.0185%" height="15" fill="rgb(244,85,34)" fg:x="47858" fg:w="9"/><text x="98.5715%" y="879.50"></text></g><g><title>update_curr (8 samples, 0.02%)</title><rect x="98.3955%" y="837" width="0.0164%" height="15" fill="rgb(207,70,0)" fg:x="47894" fg:w="8"/><text x="98.6455%" y="847.50"></text></g><g><title>enqueue_entity (36 samples, 0.07%)</title><rect x="98.3647%" y="853" width="0.0740%" height="15" fill="rgb(223,129,7)" fg:x="47879" fg:w="36"/><text x="98.6147%" y="863.50"></text></g><g><title>update_load_avg (13 samples, 0.03%)</title><rect x="98.4119%" y="837" width="0.0267%" height="15" fill="rgb(246,105,7)" fg:x="47902" fg:w="13"/><text x="98.6619%" y="847.50"></text></g><g><title>__calc_delta (7 samples, 0.01%)</title><rect x="98.4592%" y="821" width="0.0144%" height="15" fill="rgb(215,154,42)" fg:x="47925" fg:w="7"/><text x="98.7092%" y="831.50"></text></g><g><title>reweight_entity (18 samples, 0.04%)</title><rect x="98.4386%" y="853" width="0.0370%" height="15" fill="rgb(220,215,30)" fg:x="47915" fg:w="18"/><text x="98.6886%" y="863.50"></text></g><g><title>update_curr (8 samples, 0.02%)</title><rect x="98.4592%" y="837" width="0.0164%" height="15" fill="rgb(228,81,51)" fg:x="47925" fg:w="8"/><text x="98.7092%" y="847.50"></text></g><g><title>update_cfs_group (17 samples, 0.03%)</title><rect x="98.4756%" y="853" width="0.0349%" height="15" fill="rgb(247,71,54)" fg:x="47933" fg:w="17"/><text x="98.7256%" y="863.50"></text></g><g><title>__update_load_avg_cfs_rq (8 samples, 0.02%)</title><rect x="98.5742%" y="837" width="0.0164%" height="15" fill="rgb(234,176,34)" fg:x="47981" fg:w="8"/><text x="98.8242%" y="847.50"></text></g><g><title>enqueue_task_fair (128 samples, 0.26%)</title><rect x="98.3441%" y="869" width="0.2630%" height="15" fill="rgb(241,103,54)" fg:x="47869" fg:w="128"/><text x="98.5941%" y="879.50"></text></g><g><title>update_load_avg (47 samples, 0.10%)</title><rect x="98.5105%" y="853" width="0.0966%" height="15" fill="rgb(228,22,34)" fg:x="47950" fg:w="47"/><text x="98.7605%" y="863.50"></text></g><g><title>__update_load_avg_se (8 samples, 0.02%)</title><rect x="98.5907%" y="837" width="0.0164%" height="15" fill="rgb(241,179,48)" fg:x="47989" fg:w="8"/><text x="98.8407%" y="847.50"></text></g><g><title>psi_group_change (52 samples, 0.11%)</title><rect x="98.6338%" y="853" width="0.1068%" height="15" fill="rgb(235,167,37)" fg:x="48010" fg:w="52"/><text x="98.8838%" y="863.50"></text></g><g><title>ttwu_do_activate (197 samples, 0.40%)</title><rect x="98.3400%" y="885" width="0.4047%" height="15" fill="rgb(213,109,30)" fg:x="47867" fg:w="197"/><text x="98.5900%" y="895.50"></text></g><g><title>psi_task_change (66 samples, 0.14%)</title><rect x="98.6091%" y="869" width="0.1356%" height="15" fill="rgb(222,172,16)" fg:x="47998" fg:w="66"/><text x="98.8591%" y="879.50"></text></g><g><title>ttwu_do_wakeup (26 samples, 0.05%)</title><rect x="98.7447%" y="885" width="0.0534%" height="15" fill="rgb(233,192,5)" fg:x="48064" fg:w="26"/><text x="98.9947%" y="895.50"></text></g><g><title>check_preempt_curr (24 samples, 0.05%)</title><rect x="98.7488%" y="869" width="0.0493%" height="15" fill="rgb(247,189,41)" fg:x="48066" fg:w="24"/><text x="98.9988%" y="879.50"></text></g><g><title>check_preempt_wakeup (20 samples, 0.04%)</title><rect x="98.7571%" y="853" width="0.0411%" height="15" fill="rgb(218,134,47)" fg:x="48070" fg:w="20"/><text x="99.0071%" y="863.50"></text></g><g><title>__smp_call_single_queue (6 samples, 0.01%)</title><rect x="98.8064%" y="869" width="0.0123%" height="15" fill="rgb(216,29,3)" fg:x="48094" fg:w="6"/><text x="99.0564%" y="879.50"></text></g><g><title>llist_add_batch (5 samples, 0.01%)</title><rect x="98.8084%" y="853" width="0.0103%" height="15" fill="rgb(246,140,12)" fg:x="48095" fg:w="5"/><text x="99.0584%" y="863.50"></text></g><g><title>ttwu_queue_wakelist (15 samples, 0.03%)</title><rect x="98.7982%" y="885" width="0.0308%" height="15" fill="rgb(230,136,11)" fg:x="48090" fg:w="15"/><text x="99.0482%" y="895.50"></text></g><g><title>__x64_sys_futex (427 samples, 0.88%)</title><rect x="97.9599%" y="965" width="0.8772%" height="15" fill="rgb(247,22,47)" fg:x="47682" fg:w="427"/><text x="98.2099%" y="975.50"></text></g><g><title>do_futex (422 samples, 0.87%)</title><rect x="97.9702%" y="949" width="0.8670%" height="15" fill="rgb(218,84,22)" fg:x="47687" fg:w="422"/><text x="98.2202%" y="959.50"></text></g><g><title>futex_wake (419 samples, 0.86%)</title><rect x="97.9764%" y="933" width="0.8608%" height="15" fill="rgb(216,87,39)" fg:x="47690" fg:w="419"/><text x="98.2264%" y="943.50"></text></g><g><title>wake_up_q (377 samples, 0.77%)</title><rect x="98.0627%" y="917" width="0.7745%" height="15" fill="rgb(221,178,8)" fg:x="47732" fg:w="377"/><text x="98.3127%" y="927.50"></text></g><g><title>try_to_wake_up (374 samples, 0.77%)</title><rect x="98.0688%" y="901" width="0.7684%" height="15" fill="rgb(230,42,11)" fg:x="47735" fg:w="374"/><text x="98.3188%" y="911.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (463 samples, 0.95%)</title><rect x="97.9106%" y="997" width="0.9512%" height="15" fill="rgb(237,229,4)" fg:x="47658" fg:w="463"/><text x="98.1606%" y="1007.50"></text></g><g><title>do_syscall_64 (444 samples, 0.91%)</title><rect x="97.9497%" y="981" width="0.9122%" height="15" fill="rgb(222,31,33)" fg:x="47677" fg:w="444"/><text x="98.1997%" y="991.50"></text></g><g><title>syscall_exit_to_user_mode (10 samples, 0.02%)</title><rect x="98.8413%" y="965" width="0.0205%" height="15" fill="rgb(210,17,39)" fg:x="48111" fg:w="10"/><text x="99.0913%" y="975.50"></text></g><g><title>exit_to_user_mode_prepare (7 samples, 0.01%)</title><rect x="98.8475%" y="949" width="0.0144%" height="15" fill="rgb(244,93,20)" fg:x="48114" fg:w="7"/><text x="99.0975%" y="959.50"></text></g><g><title>schedule (5 samples, 0.01%)</title><rect x="98.8516%" y="933" width="0.0103%" height="15" fill="rgb(210,40,47)" fg:x="48116" fg:w="5"/><text x="99.1016%" y="943.50"></text></g><g><title>__schedule (5 samples, 0.01%)</title><rect x="98.8516%" y="917" width="0.0103%" height="15" fill="rgb(239,211,47)" fg:x="48116" fg:w="5"/><text x="99.1016%" y="927.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (521 samples, 1.07%)</title><rect x="97.8921%" y="1029" width="1.0704%" height="15" fill="rgb(251,223,49)" fg:x="47649" fg:w="521"/><text x="98.1421%" y="1039.50"></text></g><g><title>syscall (521 samples, 1.07%)</title><rect x="97.8921%" y="1013" width="1.0704%" height="15" fill="rgb(221,149,5)" fg:x="47649" fg:w="521"/><text x="98.1421%" y="1023.50"></text></g><g><title>syscall_return_via_sysret (45 samples, 0.09%)</title><rect x="98.8701%" y="997" width="0.0924%" height="15" fill="rgb(219,224,51)" fg:x="48125" fg:w="45"/><text x="99.1201%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (7 samples, 0.01%)</title><rect x="98.9646%" y="1029" width="0.0144%" height="15" fill="rgb(223,7,8)" fg:x="48171" fg:w="7"/><text x="99.2146%" y="1039.50"></text></g><g><title>core::sync::atomic::atomic_load (7 samples, 0.01%)</title><rect x="98.9646%" y="1013" width="0.0144%" height="15" fill="rgb(241,217,22)" fg:x="48171" fg:w="7"/><text x="99.2146%" y="1023.50"></text></g><g><title>parking_lot_core::parking_lot::FairTimeout::should_timeout (5 samples, 0.01%)</title><rect x="98.9789%" y="1029" width="0.0103%" height="15" fill="rgb(248,209,0)" fg:x="48178" fg:w="5"/><text x="99.2289%" y="1039.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (14 samples, 0.03%)</title><rect x="98.9892%" y="1029" width="0.0288%" height="15" fill="rgb(217,205,4)" fg:x="48183" fg:w="14"/><text x="99.2392%" y="1039.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock (6 samples, 0.01%)</title><rect x="99.0056%" y="1013" width="0.0123%" height="15" fill="rgb(228,124,39)" fg:x="48191" fg:w="6"/><text x="99.2556%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (6 samples, 0.01%)</title><rect x="99.0056%" y="997" width="0.0123%" height="15" fill="rgb(250,116,42)" fg:x="48191" fg:w="6"/><text x="99.2556%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (6 samples, 0.01%)</title><rect x="99.0056%" y="981" width="0.0123%" height="15" fill="rgb(223,202,9)" fg:x="48191" fg:w="6"/><text x="99.2556%" y="991.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (550 samples, 1.13%)</title><rect x="97.8901%" y="1061" width="1.1299%" height="15" fill="rgb(242,222,40)" fg:x="47648" fg:w="550"/><text x="98.1401%" y="1071.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (549 samples, 1.13%)</title><rect x="97.8921%" y="1045" width="1.1279%" height="15" fill="rgb(229,99,46)" fg:x="47649" fg:w="549"/><text x="98.1421%" y="1055.50"></text></g><g><title>__fdget_pos (5 samples, 0.01%)</title><rect x="99.0508%" y="869" width="0.0103%" height="15" fill="rgb(225,56,46)" fg:x="48213" fg:w="5"/><text x="99.3008%" y="879.50"></text></g><g><title>__fget_light (5 samples, 0.01%)</title><rect x="99.0508%" y="853" width="0.0103%" height="15" fill="rgb(227,94,5)" fg:x="48213" fg:w="5"/><text x="99.3008%" y="863.50"></text></g><g><title>enqueue_entity (6 samples, 0.01%)</title><rect x="99.1104%" y="709" width="0.0123%" height="15" fill="rgb(205,112,38)" fg:x="48242" fg:w="6"/><text x="99.3604%" y="719.50"></text></g><g><title>enqueue_task_fair (17 samples, 0.03%)</title><rect x="99.1063%" y="725" width="0.0349%" height="15" fill="rgb(231,133,46)" fg:x="48240" fg:w="17"/><text x="99.3563%" y="735.50"></text></g><g><title>ttwu_do_activate (20 samples, 0.04%)</title><rect x="99.1063%" y="741" width="0.0411%" height="15" fill="rgb(217,16,9)" fg:x="48240" fg:w="20"/><text x="99.3563%" y="751.50"></text></g><g><title>ttwu_queue_wakelist (5 samples, 0.01%)</title><rect x="99.1515%" y="741" width="0.0103%" height="15" fill="rgb(249,173,9)" fg:x="48262" fg:w="5"/><text x="99.4015%" y="751.50"></text></g><g><title>__wake_up_common (40 samples, 0.08%)</title><rect x="99.0817%" y="789" width="0.0822%" height="15" fill="rgb(205,163,53)" fg:x="48228" fg:w="40"/><text x="99.3317%" y="799.50"></text></g><g><title>ep_autoremove_wake_function (40 samples, 0.08%)</title><rect x="99.0817%" y="773" width="0.0822%" height="15" fill="rgb(217,54,41)" fg:x="48228" fg:w="40"/><text x="99.3317%" y="783.50"></text></g><g><title>try_to_wake_up (40 samples, 0.08%)</title><rect x="99.0817%" y="757" width="0.0822%" height="15" fill="rgb(228,216,12)" fg:x="48228" fg:w="40"/><text x="99.3317%" y="767.50"></text></g><g><title>__wake_up_common_lock (45 samples, 0.09%)</title><rect x="99.0817%" y="805" width="0.0924%" height="15" fill="rgb(244,228,15)" fg:x="48228" fg:w="45"/><text x="99.3317%" y="815.50"></text></g><g><title>_raw_spin_lock_irqsave (5 samples, 0.01%)</title><rect x="99.1638%" y="789" width="0.0103%" height="15" fill="rgb(221,176,53)" fg:x="48268" fg:w="5"/><text x="99.4138%" y="799.50"></text></g><g><title>native_queued_spin_lock_slowpath (5 samples, 0.01%)</title><rect x="99.1638%" y="773" width="0.0103%" height="15" fill="rgb(205,94,34)" fg:x="48268" fg:w="5"/><text x="99.4138%" y="783.50"></text></g><g><title>_raw_read_lock_irqsave (7 samples, 0.01%)</title><rect x="99.1741%" y="805" width="0.0144%" height="15" fill="rgb(213,110,48)" fg:x="48273" fg:w="7"/><text x="99.4241%" y="815.50"></text></g><g><title>queued_read_lock_slowpath (6 samples, 0.01%)</title><rect x="99.1762%" y="789" width="0.0123%" height="15" fill="rgb(236,142,28)" fg:x="48274" fg:w="6"/><text x="99.4262%" y="799.50"></text></g><g><title>__wake_up_common (57 samples, 0.12%)</title><rect x="99.0734%" y="837" width="0.1171%" height="15" fill="rgb(225,135,29)" fg:x="48224" fg:w="57"/><text x="99.3234%" y="847.50"></text></g><g><title>ep_poll_callback (54 samples, 0.11%)</title><rect x="99.0796%" y="821" width="0.1109%" height="15" fill="rgb(252,45,31)" fg:x="48227" fg:w="54"/><text x="99.3296%" y="831.50"></text></g><g><title>eventfd_write (61 samples, 0.13%)</title><rect x="99.0714%" y="853" width="0.1253%" height="15" fill="rgb(211,187,50)" fg:x="48223" fg:w="61"/><text x="99.3214%" y="863.50"></text></g><g><title>ksys_write (78 samples, 0.16%)</title><rect x="99.0508%" y="885" width="0.1602%" height="15" fill="rgb(229,109,7)" fg:x="48213" fg:w="78"/><text x="99.3008%" y="895.50"></text></g><g><title>vfs_write (73 samples, 0.15%)</title><rect x="99.0611%" y="869" width="0.1500%" height="15" fill="rgb(251,131,51)" fg:x="48218" fg:w="73"/><text x="99.3111%" y="879.50"></text></g><g><title>security_file_permission (6 samples, 0.01%)</title><rect x="99.1988%" y="853" width="0.0123%" height="15" fill="rgb(251,180,35)" fg:x="48285" fg:w="6"/><text x="99.4488%" y="863.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (91 samples, 0.19%)</title><rect x="99.0282%" y="917" width="0.1870%" height="15" fill="rgb(211,46,32)" fg:x="48202" fg:w="91"/><text x="99.2782%" y="927.50"></text></g><g><title>do_syscall_64 (81 samples, 0.17%)</title><rect x="99.0488%" y="901" width="0.1664%" height="15" fill="rgb(248,123,17)" fg:x="48212" fg:w="81"/><text x="99.2988%" y="911.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (108 samples, 0.22%)</title><rect x="99.0200%" y="997" width="0.2219%" height="15" fill="rgb(227,141,18)" fg:x="48198" fg:w="108"/><text x="99.2700%" y="1007.50"></text></g><g><title>std::sys::unix::fs::File::write (107 samples, 0.22%)</title><rect x="99.0221%" y="981" width="0.2198%" height="15" fill="rgb(216,102,9)" fg:x="48199" fg:w="107"/><text x="99.2721%" y="991.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (107 samples, 0.22%)</title><rect x="99.0221%" y="965" width="0.2198%" height="15" fill="rgb(253,47,13)" fg:x="48199" fg:w="107"/><text x="99.2721%" y="975.50"></text></g><g><title>__GI___libc_write (107 samples, 0.22%)</title><rect x="99.0221%" y="949" width="0.2198%" height="15" fill="rgb(226,93,23)" fg:x="48199" fg:w="107"/><text x="99.2721%" y="959.50"></text></g><g><title>__GI___libc_write (107 samples, 0.22%)</title><rect x="99.0221%" y="933" width="0.2198%" height="15" fill="rgb(247,104,17)" fg:x="48199" fg:w="107"/><text x="99.2721%" y="943.50"></text></g><g><title>syscall_return_via_sysret (13 samples, 0.03%)</title><rect x="99.2152%" y="917" width="0.0267%" height="15" fill="rgb(233,203,26)" fg:x="48293" fg:w="13"/><text x="99.4652%" y="927.50"></text></g><g><title>mio::sys::unix::waker::eventfd::WakerInternal::wake (110 samples, 0.23%)</title><rect x="99.0200%" y="1013" width="0.2260%" height="15" fill="rgb(244,98,49)" fg:x="48198" fg:w="110"/><text x="99.2700%" y="1023.50"></text></g><g><title>tokio::runtime::driver::Handle::unpark (115 samples, 0.24%)</title><rect x="99.0200%" y="1061" width="0.2363%" height="15" fill="rgb(235,134,22)" fg:x="48198" fg:w="115"/><text x="99.2700%" y="1071.50"></text></g><g><title>tokio::runtime::driver::IoHandle::unpark (115 samples, 0.24%)</title><rect x="99.0200%" y="1045" width="0.2363%" height="15" fill="rgb(221,70,32)" fg:x="48198" fg:w="115"/><text x="99.2700%" y="1055.50"></text></g><g><title>tokio::runtime::io::driver::Handle::unpark (115 samples, 0.24%)</title><rect x="99.0200%" y="1029" width="0.2363%" height="15" fill="rgb(238,15,50)" fg:x="48198" fg:w="115"/><text x="99.2700%" y="1039.50"></text></g><g><title>mio::waker::Waker::wake (5 samples, 0.01%)</title><rect x="99.2460%" y="1013" width="0.0103%" height="15" fill="rgb(215,221,48)" fg:x="48308" fg:w="5"/><text x="99.4960%" y="1023.50"></text></g><g><title>mio::sys::unix::waker::fdbased::Waker::wake (5 samples, 0.01%)</title><rect x="99.2460%" y="997" width="0.0103%" height="15" fill="rgb(236,73,3)" fg:x="48308" fg:w="5"/><text x="99.4960%" y="1007.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::worker_to_notify (8 samples, 0.02%)</title><rect x="99.2563%" y="1061" width="0.0164%" height="15" fill="rgb(250,107,11)" fg:x="48313" fg:w="8"/><text x="99.5063%" y="1071.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::notify_should_wakeup (6 samples, 0.01%)</title><rect x="99.2604%" y="1045" width="0.0123%" height="15" fill="rgb(242,39,14)" fg:x="48315" fg:w="6"/><text x="99.5104%" y="1055.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (6 samples, 0.01%)</title><rect x="99.2604%" y="1029" width="0.0123%" height="15" fill="rgb(248,164,37)" fg:x="48315" fg:w="6"/><text x="99.5104%" y="1039.50"></text></g><g><title>core::sync::atomic::atomic_add (6 samples, 0.01%)</title><rect x="99.2604%" y="1013" width="0.0123%" height="15" fill="rgb(217,60,12)" fg:x="48315" fg:w="6"/><text x="99.5104%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (9 samples, 0.02%)</title><rect x="99.2912%" y="1029" width="0.0185%" height="15" fill="rgb(240,125,29)" fg:x="48330" fg:w="9"/><text x="99.5412%" y="1039.50"></text></g><g><title>core::sync::atomic::atomic_swap (9 samples, 0.02%)</title><rect x="99.2912%" y="1013" width="0.0185%" height="15" fill="rgb(208,207,28)" fg:x="48330" fg:w="9"/><text x="99.5412%" y="1023.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (15,608 samples, 32.07%)</title><rect x="67.2522%" y="1125" width="32.0657%" height="15" fill="rgb(209,159,27)" fg:x="32735" fg:w="15608"/><text x="67.5022%" y="1135.50">tokio::runtime::scheduler::multi_thread::worker::Con..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_from_searching (700 samples, 1.44%)</title><rect x="97.8798%" y="1109" width="1.4381%" height="15" fill="rgb(251,176,53)" fg:x="47643" fg:w="700"/><text x="98.1298%" y="1119.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::transition_worker_from_searching (700 samples, 1.44%)</title><rect x="97.8798%" y="1093" width="1.4381%" height="15" fill="rgb(211,85,7)" fg:x="47643" fg:w="700"/><text x="98.1298%" y="1103.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_parked_local (695 samples, 1.43%)</title><rect x="97.8901%" y="1077" width="1.4278%" height="15" fill="rgb(216,64,54)" fg:x="47648" fg:w="695"/><text x="98.1401%" y="1087.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (22 samples, 0.05%)</title><rect x="99.2727%" y="1061" width="0.0452%" height="15" fill="rgb(217,54,24)" fg:x="48321" fg:w="22"/><text x="99.5227%" y="1071.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::unpark (19 samples, 0.04%)</title><rect x="99.2789%" y="1045" width="0.0390%" height="15" fill="rgb(208,206,53)" fg:x="48324" fg:w="19"/><text x="99.5289%" y="1055.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::get_queue_next (6 samples, 0.01%)</title><rect x="99.3713%" y="1077" width="0.0123%" height="15" fill="rgb(251,74,39)" fg:x="48369" fg:w="6"/><text x="99.6213%" y="1087.50"></text></g><g><title>&lt;tokio::runtime::scheduler::inject::pop::Pop&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.02%)</title><rect x="99.3693%" y="1109" width="0.0205%" height="15" fill="rgb(226,47,5)" fg:x="48368" fg:w="10"/><text x="99.6193%" y="1119.50"></text></g><g><title>tokio::runtime::scheduler::inject::synced::Synced::pop (10 samples, 0.02%)</title><rect x="99.3693%" y="1093" width="0.0205%" height="15" fill="rgb(234,111,33)" fg:x="48368" fg:w="10"/><text x="99.6193%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (10 samples, 0.02%)</title><rect x="99.3919%" y="1109" width="0.0205%" height="15" fill="rgb(251,14,10)" fg:x="48379" fg:w="10"/><text x="99.6419%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (10 samples, 0.02%)</title><rect x="99.3919%" y="1093" width="0.0205%" height="15" fill="rgb(232,43,0)" fg:x="48379" fg:w="10"/><text x="99.6419%" y="1103.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.02%)</title><rect x="99.3919%" y="1077" width="0.0205%" height="15" fill="rgb(222,68,43)" fg:x="48379" fg:w="10"/><text x="99.6419%" y="1087.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (10 samples, 0.02%)</title><rect x="99.3919%" y="1061" width="0.0205%" height="15" fill="rgb(217,24,23)" fg:x="48379" fg:w="10"/><text x="99.6419%" y="1071.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (9 samples, 0.02%)</title><rect x="99.3939%" y="1045" width="0.0185%" height="15" fill="rgb(229,209,14)" fg:x="48380" fg:w="9"/><text x="99.6439%" y="1055.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (9 samples, 0.02%)</title><rect x="99.3939%" y="1029" width="0.0185%" height="15" fill="rgb(250,149,48)" fg:x="48380" fg:w="9"/><text x="99.6439%" y="1039.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (6 samples, 0.01%)</title><rect x="99.4124%" y="1109" width="0.0123%" height="15" fill="rgb(210,120,37)" fg:x="48389" fg:w="6"/><text x="99.6624%" y="1119.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (6 samples, 0.01%)</title><rect x="99.4124%" y="1093" width="0.0123%" height="15" fill="rgb(210,21,8)" fg:x="48389" fg:w="6"/><text x="99.6624%" y="1103.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (6 samples, 0.01%)</title><rect x="99.4124%" y="1077" width="0.0123%" height="15" fill="rgb(243,145,7)" fg:x="48389" fg:w="6"/><text x="99.6624%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (5 samples, 0.01%)</title><rect x="99.4330%" y="1093" width="0.0103%" height="15" fill="rgb(238,178,32)" fg:x="48399" fg:w="5"/><text x="99.6830%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (5 samples, 0.01%)</title><rect x="99.4330%" y="1077" width="0.0103%" height="15" fill="rgb(222,4,10)" fg:x="48399" fg:w="5"/><text x="99.6830%" y="1087.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="99.4330%" y="1061" width="0.0103%" height="15" fill="rgb(239,7,37)" fg:x="48399" fg:w="5"/><text x="99.6830%" y="1071.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (5 samples, 0.01%)</title><rect x="99.4330%" y="1045" width="0.0103%" height="15" fill="rgb(215,31,37)" fg:x="48399" fg:w="5"/><text x="99.6830%" y="1055.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (5 samples, 0.01%)</title><rect x="99.4330%" y="1029" width="0.0103%" height="15" fill="rgb(224,83,33)" fg:x="48399" fg:w="5"/><text x="99.6830%" y="1039.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (5 samples, 0.01%)</title><rect x="99.4330%" y="1013" width="0.0103%" height="15" fill="rgb(239,55,3)" fg:x="48399" fg:w="5"/><text x="99.6830%" y="1023.50"></text></g><g><title>&lt;tokio::runtime::scheduler::inject::pop::Pop&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.01%)</title><rect x="99.4453%" y="1077" width="0.0103%" height="15" fill="rgb(247,92,11)" fg:x="48405" fg:w="5"/><text x="99.6953%" y="1087.50"></text></g><g><title>tokio::runtime::scheduler::inject::synced::Synced::pop (5 samples, 0.01%)</title><rect x="99.4453%" y="1061" width="0.0103%" height="15" fill="rgb(239,200,7)" fg:x="48405" fg:w="5"/><text x="99.6953%" y="1071.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::next_remote_task (12 samples, 0.02%)</title><rect x="99.4330%" y="1109" width="0.0247%" height="15" fill="rgb(227,115,8)" fg:x="48399" fg:w="12"/><text x="99.6830%" y="1119.50"></text></g><g><title>tokio::runtime::scheduler::inject::shared::Shared&lt;T&gt;::pop (6 samples, 0.01%)</title><rect x="99.4453%" y="1093" width="0.0123%" height="15" fill="rgb(215,189,27)" fg:x="48405" fg:w="6"/><text x="99.6953%" y="1103.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (19 samples, 0.04%)</title><rect x="99.4576%" y="1093" width="0.0390%" height="15" fill="rgb(251,216,39)" fg:x="48411" fg:w="19"/><text x="99.7076%" y="1103.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_local_task::{{closure}} (19 samples, 0.04%)</title><rect x="99.4576%" y="1077" width="0.0390%" height="15" fill="rgb(207,29,47)" fg:x="48411" fg:w="19"/><text x="99.7076%" y="1087.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Local&lt;T&gt;::pop (19 samples, 0.04%)</title><rect x="99.4576%" y="1061" width="0.0390%" height="15" fill="rgb(210,71,34)" fg:x="48411" fg:w="19"/><text x="99.7076%" y="1071.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_local_task (21 samples, 0.04%)</title><rect x="99.4576%" y="1109" width="0.0431%" height="15" fill="rgb(253,217,51)" fg:x="48411" fg:w="21"/><text x="99.7076%" y="1119.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_task (97 samples, 0.20%)</title><rect x="99.3179%" y="1125" width="0.1993%" height="15" fill="rgb(222,117,46)" fg:x="48343" fg:w="97"/><text x="99.5679%" y="1135.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::tune_global_queue_interval (8 samples, 0.02%)</title><rect x="99.5008%" y="1109" width="0.0164%" height="15" fill="rgb(226,132,6)" fg:x="48432" fg:w="8"/><text x="99.7508%" y="1119.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::tuned_global_queue_interval (8 samples, 0.02%)</title><rect x="99.5008%" y="1093" width="0.0164%" height="15" fill="rgb(254,145,51)" fg:x="48432" fg:w="8"/><text x="99.7508%" y="1103.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (5 samples, 0.01%)</title><rect x="99.5645%" y="1109" width="0.0103%" height="15" fill="rgb(231,199,27)" fg:x="48463" fg:w="5"/><text x="99.8145%" y="1119.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (5 samples, 0.01%)</title><rect x="99.5645%" y="1093" width="0.0103%" height="15" fill="rgb(245,158,14)" fg:x="48463" fg:w="5"/><text x="99.8145%" y="1103.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (5 samples, 0.01%)</title><rect x="99.5645%" y="1077" width="0.0103%" height="15" fill="rgb(240,113,14)" fg:x="48463" fg:w="5"/><text x="99.8145%" y="1087.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (7 samples, 0.01%)</title><rect x="99.6014%" y="1077" width="0.0144%" height="15" fill="rgb(210,20,13)" fg:x="48481" fg:w="7"/><text x="99.8514%" y="1087.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (7 samples, 0.01%)</title><rect x="99.6014%" y="1061" width="0.0144%" height="15" fill="rgb(241,144,13)" fg:x="48481" fg:w="7"/><text x="99.8514%" y="1071.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (7 samples, 0.01%)</title><rect x="99.6014%" y="1045" width="0.0144%" height="15" fill="rgb(235,43,34)" fg:x="48481" fg:w="7"/><text x="99.8514%" y="1055.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into (64 samples, 0.13%)</title><rect x="99.5788%" y="1109" width="0.1315%" height="15" fill="rgb(208,36,20)" fg:x="48470" fg:w="64"/><text x="99.8288%" y="1119.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into2 (59 samples, 0.12%)</title><rect x="99.5891%" y="1093" width="0.1212%" height="15" fill="rgb(239,204,10)" fg:x="48475" fg:w="59"/><text x="99.8391%" y="1103.50"></text></g><g><title>core::sync::atomic::AtomicU64::load (38 samples, 0.08%)</title><rect x="99.6323%" y="1077" width="0.0781%" height="15" fill="rgb(217,84,43)" fg:x="48496" fg:w="38"/><text x="99.8823%" y="1087.50"></text></g><g><title>core::sync::atomic::atomic_load (38 samples, 0.08%)</title><rect x="99.6323%" y="1061" width="0.0781%" height="15" fill="rgb(241,170,50)" fg:x="48496" fg:w="38"/><text x="99.8823%" y="1071.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::steal_work (95 samples, 0.20%)</title><rect x="99.5172%" y="1125" width="0.1952%" height="15" fill="rgb(226,205,29)" fg:x="48440" fg:w="95"/><text x="99.7672%" y="1135.50"></text></g><g><title>std::panic::catch_unwind (20,388 samples, 41.89%)</title><rect x="57.8285%" y="1669" width="41.8860%" height="15" fill="rgb(233,113,1)" fg:x="28148" fg:w="20388"/><text x="58.0785%" y="1679.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (20,388 samples, 41.89%)</title><rect x="57.8285%" y="1653" width="41.8860%" height="15" fill="rgb(253,98,13)" fg:x="28148" fg:w="20388"/><text x="58.0785%" y="1663.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (20,388 samples, 41.89%)</title><rect x="57.8285%" y="1637" width="41.8860%" height="15" fill="rgb(211,115,12)" fg:x="28148" fg:w="20388"/><text x="58.0785%" y="1647.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (20,388 samples, 41.89%)</title><rect x="57.8285%" y="1621" width="41.8860%" height="15" fill="rgb(208,12,16)" fg:x="28148" fg:w="20388"/><text x="58.0785%" y="1631.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::functio..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (20,388 samples, 41.89%)</title><rect x="57.8285%" y="1605" width="41.8860%" height="15" fill="rgb(237,193,54)" fg:x="28148" fg:w="20388"/><text x="58.0785%" y="1615.50">std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (20,388 samples, 41.89%)</title><rect x="57.8285%" y="1589" width="41.8860%" height="15" fill="rgb(243,22,42)" fg:x="28148" fg:w="20388"/><text x="58.0785%" y="1599.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}} (20,388 samples, 41.89%)</title><rect x="57.8285%" y="1573" width="41.8860%" height="15" fill="rgb(233,151,36)" fg:x="28148" fg:w="20388"/><text x="58.0785%" y="1583.50">tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}</text></g><g><title>tokio::runtime::blocking::pool::Inner::run (20,388 samples, 41.89%)</title><rect x="57.8285%" y="1557" width="41.8860%" height="15" fill="rgb(237,57,45)" fg:x="28148" fg:w="20388"/><text x="58.0785%" y="1567.50">tokio::runtime::blocking::pool::Inner::run</text></g><g><title>tokio::runtime::blocking::pool::Task::run (20,376 samples, 41.86%)</title><rect x="57.8531%" y="1541" width="41.8613%" height="15" fill="rgb(221,88,17)" fg:x="28160" fg:w="20376"/><text x="58.1031%" y="1551.50">tokio::runtime::blocking::pool::Task::run</text></g><g><title>tokio::runtime::task::UnownedTask&lt;S&gt;::run (20,376 samples, 41.86%)</title><rect x="57.8531%" y="1525" width="41.8613%" height="15" fill="rgb(230,79,15)" fg:x="28160" fg:w="20376"/><text x="58.1031%" y="1535.50">tokio::runtime::task::UnownedTask&lt;S&gt;::run</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (20,376 samples, 41.86%)</title><rect x="57.8531%" y="1509" width="41.8613%" height="15" fill="rgb(213,57,13)" fg:x="28160" fg:w="20376"/><text x="58.1031%" y="1519.50">tokio::runtime::task::raw::RawTask::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (20,376 samples, 41.86%)</title><rect x="57.8531%" y="1493" width="41.8613%" height="15" fill="rgb(222,116,39)" fg:x="28160" fg:w="20376"/><text x="58.1031%" y="1503.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (20,376 samples, 41.86%)</title><rect x="57.8531%" y="1477" width="41.8613%" height="15" fill="rgb(245,107,2)" fg:x="28160" fg:w="20376"/><text x="58.1031%" y="1487.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner</text></g><g><title>tokio::runtime::task::harness::poll_future (20,376 samples, 41.86%)</title><rect x="57.8531%" y="1461" width="41.8613%" height="15" fill="rgb(238,1,10)" fg:x="28160" fg:w="20376"/><text x="58.1031%" y="1471.50">tokio::runtime::task::harness::poll_future</text></g><g><title>std::panic::catch_unwind (20,376 samples, 41.86%)</title><rect x="57.8531%" y="1445" width="41.8613%" height="15" fill="rgb(249,4,48)" fg:x="28160" fg:w="20376"/><text x="58.1031%" y="1455.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (20,376 samples, 41.86%)</title><rect x="57.8531%" y="1429" width="41.8613%" height="15" fill="rgb(223,151,18)" fg:x="28160" fg:w="20376"/><text x="58.1031%" y="1439.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (20,376 samples, 41.86%)</title><rect x="57.8531%" y="1413" width="41.8613%" height="15" fill="rgb(227,65,43)" fg:x="28160" fg:w="20376"/><text x="58.1031%" y="1423.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (20,376 samples, 41.86%)</title><rect x="57.8531%" y="1397" width="41.8613%" height="15" fill="rgb(218,40,45)" fg:x="28160" fg:w="20376"/><text x="58.1031%" y="1407.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::functio..</text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (20,376 samples, 41.86%)</title><rect x="57.8531%" y="1381" width="41.8613%" height="15" fill="rgb(252,121,31)" fg:x="28160" fg:w="20376"/><text x="58.1031%" y="1391.50">tokio::runtime::task::harness::poll_future::{{closure}}</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (20,376 samples, 41.86%)</title><rect x="57.8531%" y="1365" width="41.8613%" height="15" fill="rgb(219,158,43)" fg:x="28160" fg:w="20376"/><text x="58.1031%" y="1375.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (20,376 samples, 41.86%)</title><rect x="57.8531%" y="1349" width="41.8613%" height="15" fill="rgb(231,162,42)" fg:x="28160" fg:w="20376"/><text x="58.1031%" y="1359.50">tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}} (20,376 samples, 41.86%)</title><rect x="57.8531%" y="1333" width="41.8613%" height="15" fill="rgb(217,179,25)" fg:x="28160" fg:w="20376"/><text x="58.1031%" y="1343.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}}</text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (20,376 samples, 41.86%)</title><rect x="57.8531%" y="1317" width="41.8613%" height="15" fill="rgb(206,212,31)" fg:x="28160" fg:w="20376"/><text x="58.1031%" y="1327.50">&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::fu..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Launch::launch::{{closure}} (20,376 samples, 41.86%)</title><rect x="57.8531%" y="1301" width="41.8613%" height="15" fill="rgb(235,144,12)" fg:x="28160" fg:w="20376"/><text x="58.1031%" y="1311.50">tokio::runtime::scheduler::multi_thread::worker::Launch::launch::{{c..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (20,376 samples, 41.86%)</title><rect x="57.8531%" y="1285" width="41.8613%" height="15" fill="rgb(213,51,10)" fg:x="28160" fg:w="20376"/><text x="58.1031%" y="1295.50">tokio::runtime::scheduler::multi_thread::worker::run</text></g><g><title>tokio::runtime::context::runtime::enter_runtime (20,376 samples, 41.86%)</title><rect x="57.8531%" y="1269" width="41.8613%" height="15" fill="rgb(231,145,14)" fg:x="28160" fg:w="20376"/><text x="58.1031%" y="1279.50">tokio::runtime::context::runtime::enter_runtime</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::{{closure}} (20,376 samples, 41.86%)</title><rect x="57.8531%" y="1253" width="41.8613%" height="15" fill="rgb(235,15,28)" fg:x="28160" fg:w="20376"/><text x="58.1031%" y="1263.50">tokio::runtime::scheduler::multi_thread::worker::run::{{closure}}</text></g><g><title>tokio::runtime::context::set_scheduler (20,376 samples, 41.86%)</title><rect x="57.8531%" y="1237" width="41.8613%" height="15" fill="rgb(237,206,10)" fg:x="28160" fg:w="20376"/><text x="58.1031%" y="1247.50">tokio::runtime::context::set_scheduler</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (20,376 samples, 41.86%)</title><rect x="57.8531%" y="1221" width="41.8613%" height="15" fill="rgb(236,227,27)" fg:x="28160" fg:w="20376"/><text x="58.1031%" y="1231.50">std::thread::local::LocalKey&lt;T&gt;::with</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (20,376 samples, 41.86%)</title><rect x="57.8531%" y="1205" width="41.8613%" height="15" fill="rgb(246,83,35)" fg:x="28160" fg:w="20376"/><text x="58.1031%" y="1215.50">std::thread::local::LocalKey&lt;T&gt;::try_with</text></g><g><title>tokio::runtime::context::set_scheduler::{{closure}} (20,376 samples, 41.86%)</title><rect x="57.8531%" y="1189" width="41.8613%" height="15" fill="rgb(220,136,24)" fg:x="28160" fg:w="20376"/><text x="58.1031%" y="1199.50">tokio::runtime::context::set_scheduler::{{closure}}</text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (20,376 samples, 41.86%)</title><rect x="57.8531%" y="1173" width="41.8613%" height="15" fill="rgb(217,3,25)" fg:x="28160" fg:w="20376"/><text x="58.1031%" y="1183.50">tokio::runtime::context::scoped::Scoped&lt;T&gt;::set</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::{{closure}}::{{closure}} (20,376 samples, 41.86%)</title><rect x="57.8531%" y="1157" width="41.8613%" height="15" fill="rgb(239,24,14)" fg:x="28160" fg:w="20376"/><text x="58.1031%" y="1167.50">tokio::runtime::scheduler::multi_thread::worker::run::{{closure}}::{..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (20,376 samples, 41.86%)</title><rect x="57.8531%" y="1141" width="41.8613%" height="15" fill="rgb(244,16,53)" fg:x="28160" fg:w="20376"/><text x="58.1031%" y="1151.50">tokio::runtime::scheduler::multi_thread::worker::Context::run</text></g><g><title>clone3 (20,394 samples, 41.90%)</title><rect x="57.8285%" y="1781" width="41.8983%" height="15" fill="rgb(208,175,44)" fg:x="28148" fg:w="20394"/><text x="58.0785%" y="1791.50">clone3</text></g><g><title>start_thread (20,394 samples, 41.90%)</title><rect x="57.8285%" y="1765" width="41.8983%" height="15" fill="rgb(252,18,48)" fg:x="28148" fg:w="20394"/><text x="58.0785%" y="1775.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (20,394 samples, 41.90%)</title><rect x="57.8285%" y="1749" width="41.8983%" height="15" fill="rgb(234,199,32)" fg:x="28148" fg:w="20394"/><text x="58.0785%" y="1759.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (20,394 samples, 41.90%)</title><rect x="57.8285%" y="1733" width="41.8983%" height="15" fill="rgb(225,77,54)" fg:x="28148" fg:w="20394"/><text x="58.0785%" y="1743.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_o..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (20,394 samples, 41.90%)</title><rect x="57.8285%" y="1717" width="41.8983%" height="15" fill="rgb(225,42,25)" fg:x="28148" fg:w="20394"/><text x="58.0785%" y="1727.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_o..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (20,394 samples, 41.90%)</title><rect x="57.8285%" y="1701" width="41.8983%" height="15" fill="rgb(242,227,46)" fg:x="28148" fg:w="20394"/><text x="58.0785%" y="1711.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (20,394 samples, 41.90%)</title><rect x="57.8285%" y="1685" width="41.8983%" height="15" fill="rgb(246,197,35)" fg:x="28148" fg:w="20394"/><text x="58.0785%" y="1695.50">std::thread::Builder::spawn_unchecked_::{{closure}}</text></g><g><title>std::sys::unix::thread::guard::current (6 samples, 0.01%)</title><rect x="99.7144%" y="1669" width="0.0123%" height="15" fill="rgb(215,159,26)" fg:x="48536" fg:w="6"/><text x="99.9644%" y="1679.50"></text></g><g><title>__pthread_getattr_np (6 samples, 0.01%)</title><rect x="99.7144%" y="1653" width="0.0123%" height="15" fill="rgb(212,194,50)" fg:x="48536" fg:w="6"/><text x="99.9644%" y="1663.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.01%)</title><rect x="99.7144%" y="1637" width="0.0123%" height="15" fill="rgb(246,132,1)" fg:x="48536" fg:w="6"/><text x="99.9644%" y="1647.50"></text></g><g><title>tcache_init (6 samples, 0.01%)</title><rect x="99.7144%" y="1621" width="0.0123%" height="15" fill="rgb(217,71,7)" fg:x="48536" fg:w="6"/><text x="99.9644%" y="1631.50"></text></g><g><title>tcache_init (6 samples, 0.01%)</title><rect x="99.7144%" y="1605" width="0.0123%" height="15" fill="rgb(252,59,32)" fg:x="48536" fg:w="6"/><text x="99.9644%" y="1615.50"></text></g><g><title>arena_get2 (6 samples, 0.01%)</title><rect x="99.7144%" y="1589" width="0.0123%" height="15" fill="rgb(253,204,25)" fg:x="48536" fg:w="6"/><text x="99.9644%" y="1599.50"></text></g><g><title>arena_get2 (6 samples, 0.01%)</title><rect x="99.7144%" y="1573" width="0.0123%" height="15" fill="rgb(232,21,16)" fg:x="48536" fg:w="6"/><text x="99.9644%" y="1583.50"></text></g><g><title>_int_new_arena (6 samples, 0.01%)</title><rect x="99.7144%" y="1557" width="0.0123%" height="15" fill="rgb(248,90,29)" fg:x="48536" fg:w="6"/><text x="99.9644%" y="1567.50"></text></g><g><title>alloc_new_heap (6 samples, 0.01%)</title><rect x="99.7144%" y="1541" width="0.0123%" height="15" fill="rgb(249,223,7)" fg:x="48536" fg:w="6"/><text x="99.9644%" y="1551.50"></text></g><g><title>asm_exc_page_fault (6 samples, 0.01%)</title><rect x="99.7144%" y="1525" width="0.0123%" height="15" fill="rgb(231,119,42)" fg:x="48536" fg:w="6"/><text x="99.9644%" y="1535.50"></text></g><g><title>exc_page_fault (6 samples, 0.01%)</title><rect x="99.7144%" y="1509" width="0.0123%" height="15" fill="rgb(215,41,35)" fg:x="48536" fg:w="6"/><text x="99.9644%" y="1519.50"></text></g><g><title>do_user_addr_fault (6 samples, 0.01%)</title><rect x="99.7144%" y="1493" width="0.0123%" height="15" fill="rgb(220,44,45)" fg:x="48536" fg:w="6"/><text x="99.9644%" y="1503.50"></text></g><g><title>lock_mm_and_find_vma (5 samples, 0.01%)</title><rect x="99.7165%" y="1477" width="0.0103%" height="15" fill="rgb(253,197,36)" fg:x="48537" fg:w="5"/><text x="99.9665%" y="1487.50"></text></g><g><title>down_read_killable (5 samples, 0.01%)</title><rect x="99.7165%" y="1461" width="0.0103%" height="15" fill="rgb(245,225,54)" fg:x="48537" fg:w="5"/><text x="99.9665%" y="1471.50"></text></g><g><title>rwsem_down_read_slowpath (5 samples, 0.01%)</title><rect x="99.7165%" y="1445" width="0.0103%" height="15" fill="rgb(239,94,37)" fg:x="48537" fg:w="5"/><text x="99.9665%" y="1455.50"></text></g><g><title>schedule_preempt_disabled (5 samples, 0.01%)</title><rect x="99.7165%" y="1429" width="0.0103%" height="15" fill="rgb(242,217,10)" fg:x="48537" fg:w="5"/><text x="99.9665%" y="1439.50"></text></g><g><title>schedule (5 samples, 0.01%)</title><rect x="99.7165%" y="1413" width="0.0103%" height="15" fill="rgb(250,193,7)" fg:x="48537" fg:w="5"/><text x="99.9665%" y="1423.50"></text></g><g><title>__schedule (5 samples, 0.01%)</title><rect x="99.7165%" y="1397" width="0.0103%" height="15" fill="rgb(230,104,19)" fg:x="48537" fg:w="5"/><text x="99.9665%" y="1407.50"></text></g><g><title>finish_task_switch.isra.0 (5 samples, 0.01%)</title><rect x="99.7165%" y="1381" width="0.0103%" height="15" fill="rgb(230,181,4)" fg:x="48537" fg:w="5"/><text x="99.9665%" y="1391.50"></text></g><g><title>__perf_event_task_sched_in (5 samples, 0.01%)</title><rect x="99.7165%" y="1365" width="0.0103%" height="15" fill="rgb(216,219,49)" fg:x="48537" fg:w="5"/><text x="99.9665%" y="1375.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (5 samples, 0.01%)</title><rect x="99.7165%" y="1349" width="0.0103%" height="15" fill="rgb(254,144,0)" fg:x="48537" fg:w="5"/><text x="99.9665%" y="1359.50"></text></g><g><title>native_write_msr (5 samples, 0.01%)</title><rect x="99.7165%" y="1333" width="0.0103%" height="15" fill="rgb(205,209,38)" fg:x="48537" fg:w="5"/><text x="99.9665%" y="1343.50"></text></g><g><title>engine::engine::match_server::MatchServer::run::{{closure}}::{{closure}} (6 samples, 0.01%)</title><rect x="99.7268%" y="1781" width="0.0123%" height="15" fill="rgb(240,21,42)" fg:x="48542" fg:w="6"/><text x="99.9768%" y="1791.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (8 samples, 0.02%)</title><rect x="99.7391%" y="1781" width="0.0164%" height="15" fill="rgb(241,132,3)" fg:x="48548" fg:w="8"/><text x="99.9891%" y="1791.50"></text></g><g><title>entry_SYSCALL_64_safe_stack (73 samples, 0.15%)</title><rect x="99.7555%" y="1781" width="0.1500%" height="15" fill="rgb(225,14,2)" fg:x="48556" fg:w="73"/><text x="100.0055%" y="1791.50"></text></g><g><title>rand::rngs::thread::thread_rng (15 samples, 0.03%)</title><rect x="99.9178%" y="1781" width="0.0308%" height="15" fill="rgb(210,141,35)" fg:x="48635" fg:w="15"/><text x="100.1678%" y="1791.50"></text></g><g><title>std::sys::unix::time::Timespec::now (5 samples, 0.01%)</title><rect x="99.9486%" y="1781" width="0.0103%" height="15" fill="rgb(251,14,44)" fg:x="48650" fg:w="5"/><text x="100.1986%" y="1791.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (8 samples, 0.02%)</title><rect x="99.9774%" y="1781" width="0.0164%" height="15" fill="rgb(247,48,18)" fg:x="48664" fg:w="8"/><text x="100.2274%" y="1791.50"></text></g><g><title>all (48,675 samples, 100%)</title><rect x="0.0000%" y="1813" width="100.0000%" height="15" fill="rgb(225,0,40)" fg:x="0" fg:w="48675"/><text x="0.2500%" y="1823.50"></text></g><g><title>tokio-runtime-w (21,846 samples, 44.88%)</title><rect x="55.1186%" y="1797" width="44.8814%" height="15" fill="rgb(221,31,33)" fg:x="26829" fg:w="21846"/><text x="55.3686%" y="1807.50">tokio-runtime-w</text></g></svg></svg>